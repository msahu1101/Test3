{
  "openapi": "3.0.1",
  "info": {
    "title": "Restaurant Booking Services",
    "version": "1.0.5"
  },
  "servers": [
    {
      "url": "https://mgm-nonprod-dev.apigee.net/booking/restaurant/",
      "description": "Dev-APIGEE"
    },
    {
      "url": "https://mgm-nonprod-qa.apigee.net/booking/restaurant/",
      "description": "QA-APIGEE"
    },
    {
      "url": "https://mgm-nonprod-preprod.apigee.net/booking/restaurant/",
      "description": "Preprod-APIGEE"
    },
    {
      "url": "https://mgm-nonprod-green.apigee.net/booking/restaurant/",
      "description": "Green-APIGEE"
    }
  ],
  "paths": {
    "/v1/availability": {
      "get": {
        "summary": "availability",
        "description": "This api returns availability in a restaurant for a particular date. Response is returned as a set of dining availability objects. Each availability object indicates whether there is availability for a reservation time slot in the restaurant for the given party size.",
        "operationId": "get-availability-1",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "description": "Unique id of restaurant for which the availability is requested",
            "required": true,
            "schema": {
              "enum": [
                "012345"
              ],
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date for which the availability is requested\n",
            "required": true,
            "schema": {
              "enum": [
                "2020-05-30"
              ],
              "type": "string"
            }
          },
          {
            "name": "partySize",
            "in": "query",
            "description": "To check availability for the given party size\n",
            "required": true,
            "schema": {
              "enum": [
                "2"
              ],
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time of the given date which the availability is requested. ",
            "schema": {
              "enum": [
                "8:00 AM"
              ],
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time of the given date which the availability is requested. ",
            "schema": {
              "enum": [
                "11:00 PM"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response. Returns array of Restaurant Available timeslots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restaurantAvailabilityResponse"
                },
                "example": {
                  "restaurantAvailability": [
                    {
                      "date": "2020-05-30 12:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 12:15:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 12:30:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 12:45:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 15:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 17:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 17:15:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 17:30:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 17:45:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 18:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200
                    },
                    {
                      "date": "2020-05-30 18:15:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 18:30:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 18:45:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 19:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 19:15:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 19:30:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 19:45:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 20:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 20:15:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 20:30:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 20:45:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 21:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 21:15:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 21:30:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 22:30:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 22:45:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    },
                    {
                      "date": "2020-05-30 23:00:00 +0000",
                      "available": true,
                      "totalOccupany": 200,
                      "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                      "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restaurantAvailabilityResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Invalid input party size 0",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restaurantAvailabilityResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "SEVENROOMSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/notes/": {
      "get": {
        "summary": "Restaurant notes",
        "description": "Returns the Restaurant notes for a restaurant for a particular date. The Restaurant notes are returned as a set of notes objects. Each Restaurant note object contains the shift and the notes for that shift as description.",
        "operationId": "get-notes-1",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "description": "Unique id of restaurant",
            "required": true,
            "schema": {
              "enum": [
                "012345"
              ],
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Date from which Restaurant notes is requested\n",
            "required": true,
            "schema": {
              "enum": [
                "2019-10-09"
              ],
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date to which Restaurant notes is requested\n",
            "required": true,
            "schema": {
              "enum": [
                "2019-10-09"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "notes response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restaurantNotesResponse"
                },
                "example": {
                  "restaurantNotes": [
                    {
                      "date": "2020-05-12",
                      "note": "",
                      "shifts": [
                        {
                          "price_point": "$95pp",
                          "description": "Description for lunch here",
                          "shift_category": "Lunch",
                          "spend_policy": "",
                          "child_policy": "",
                          "table_holding_policy": "",
                          "cuisine": "Italian",
                          "title": "Lunch Event",
                          "dress_code": "Business casual"
                        },
                        {
                          "price_point": "",
                          "description": "",
                          "shift_category": "Dinner",
                          "spend_policy": "",
                          "child_policy": "",
                          "table_holding_policy": "Table holding policy here",
                          "cuisine": "Bulgarian",
                          "title": "Dinner Event",
                          "dress_code": "Dress code here"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restaurantNotesResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Invalid input start date",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restaurantNotesResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "SEVENROOMSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/reservations/sheet": {
      "get": {
        "summary": "Reservation Sheet",
        "description": "This api returns reservation sheet information in a restaurant for a particular date. Response is returned as a set of reservation sheet objects. Each reservation sheet object provides the information on the total dining capacity and reserved  seats information along with the party's identity and number of position booked on a time slot.",
        "operationId": "get-reservation-sheet",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "description": "Unique id of restaurant for which the availability is requested",
            "required": true,
            "schema": {
              "enum": [
                "012345"
              ],
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date for which the reservation sheet is requested\n",
            "required": true,
            "schema": {
              "enum": [
                "2020-05-30"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "required": true,
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response. Returns array of Restaurant Reservation Sheet information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservationSheetResponse"
                },
                "example": {
                  "sheets": [
                    {
                      "date": "2020-06-05 12:00:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 4,
                      "parties": [
                        {
                          "holder": "FName1169 LName1147",
                          "size": 2
                        },
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 12:15:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 2,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 12:30:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 4,
                      "parties": [
                        {
                          "holder": "FName8687 LName6755",
                          "size": 2
                        },
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 12:45:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 2,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 13:00:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 3,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 3
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 13:15:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 5,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        },
                        {
                          "holder": "User1 Title1",
                          "size": 3
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 13:30:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 2,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 13:45:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 2,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 14:00:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 4,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        },
                        {
                          "holder": "Amar Teragundi",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 14:15:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 2,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 14:30:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 2,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 2
                        }
                      ]
                    },
                    {
                      "date": "2020-06-05 23:00:00",
                      "diningArea": "Main",
                      "capacity": 200,
                      "reserved": 4,
                      "parties": [
                        {
                          "holder": "Mlife Sapphire",
                          "size": 4
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservationSheetResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Invalid input start date",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservationSheetResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "SEVENROOMSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/reservation/cart": {
      "delete": {
        "summary": "remove",
        "description": "Removes a reservation from the restaurant booking service. This API only removes a saved dining reservation but it does not update anything on the source systems like Open Table and Seven Rooms. ",
        "operationId": "delete-remove",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "schema": {
              "enum": [
                "10014529-fa0d-445f-a8cc-d682432b83ea"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\\n",
            "required": true,
            "schema": {
              "enum": [
                "e57525b6-b60a-4c4d-bc0a-7e9bc5754f26"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "query",
            "description": "Unique id of reservation",
            "required": true,
            "schema": {
              "enum": [
                "012345"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/removeReservationResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/removeReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Requested Reservation with Reservation Id 8dc0124c-fe0e-48ec-a740-89ed9a5d5648 not found",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/removeReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "SEVENROOMSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      },
      "post": {
        "summary": "save",
        "description": "Saves reservation in restaurant booking service with booking state as SAVE. The method saves the reservation object in restaurant booking service and reservation is not booked in any of the source systems.",
        "operationId": "post-save",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "his field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "schema": {
              "enum": [
                "59337da4-10a9-4c1a-b8ff-7995a4985294"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\\n",
            "required": true,
            "schema": {
              "enum": [
                "ab9c4007-9d4c-4abe-912a-6413d0ca9972"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "save request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveReservationRequest"
              },
              "example": {
                "restaurantReservation": {
                  "itineraryId": "804b18a4-9dfb-448e-a0da-456f21311b50",
                  "restaurantId": "1943151f-36de-4001-a905-6e593f7559c3",
                  "customerId": "08b88849-35df-44bb-b4ca-75e784cc8f2b",
                  "reservationDateTime": "2019-10-05T19:00:00.0000000+00:00",
                  "numAdults": 2,
                  "numChildren": 0,
                  "diningArea": "Main",
                  "comments": "Agent XYZ saving it",
                  "agentInfo": {
                    "agentId": "06780bd6-fce6-48f0-8c9e-3b2073e65523",
                    "agentType": "frontDesk"
                  },
                  "channel": "dmp",
                  "source": "mgmgrandlv"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 save response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveReservationResponse"
                },
                "example": {
                  "restaurantReservation": {
                    "id": "586265f4-5766-4989-a3dc-e236e94c8b2a",
                    "itineraryId": "6480665089",
                    "restaurantId": "40872441-efdd-4189-a81c-d9da7f3fa803",
                    "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                    "customerId": "826245775361",
                    "reservationDateTime": "2020-05-29 12:00:00",
                    "numAdults": 2,
                    "numChildren": 0,
                    "diningArea": "Main",
                    "comments": "comments",
                    "agentInfo": {
                      "agentId": "agent",
                      "agentType": "frontDesk"
                    },
                    "state": "Saved",
                    "hostStatus": "SAVED",
                    "channel": "ice",
                    "source": "ice",
                    "createdAt": "2020-05-28T18:01:53.654+0000",
                    "updatedAt": "2020-05-28T18:01:53.654+0000"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Invalid input date, Sat Jun 20 12:00:00 GMT 2020 - The date must be today or in the future",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/reservation": {
      "post": {
        "summary": "create",
        "description": "Create reservation api commits a reservation to the source system(open table/ seven room). If successful, the method updates the state to Booked and returns the booking confirmation number. Itinerary should be created prior to making this call",
        "operationId": "post-create",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrand"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\\n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "create request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createReservationRequest"
              },
              "example": {
                "restaurantReservation": {
                  "customerId": "08b88849-35df-44bb-b4ca-75e784cc8f2b",
                  "itineraryId": "2b9988ec-f34b-4353-a49d-4ff161f477b0",
                  "restaurantId": "12702660-833c-49cd-ba6c-6ac7e40684f1",
                  "reservationDateTime": "2019-10-11 19:00:00",
                  "numAdults": 2,
                  "numChildren": 0,
                  "comments": "Agent XYZ booking it",
                  "agentInfo": {
                    "agentId": "agent",
                    "agentType": "frontDesk"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReservationResponse"
                },
                "example": {
                  "restaurantReservation": {
                    "id": "7ea74a5f-ee85-49db-9ce7-9acde0a222b9",
                    "itineraryId": "2b9988ec-f34b-4353-a49d-4ff161f477b0",
                    "restaurantId": "12702660-833c-49cd-ba6c-6ac7e40684f1",
                    "customerId": "08b88849-35df-44bb-b4ca-75e784cc8f2b",
                    "bookDate": "2019-10-09T23:16:41.1410000+00:00",
                    "reservationDateTime": "2019-10-11 19:00:00",
                    "numAdults": 2,
                    "numChildren": 0,
                    "diningArea": "Main",
                    "comments": "Agent XYZ booking it",
                    "agentInfo": {
                      "agentId": "agent",
                      "agentType": "frontDesk"
                    },
                    "state": "Booked",
                    "confirmationNumber": "MGMLV-M0QYN0",
                    "createdAt": "2019-10-09T23:16:41.1410000+00:00",
                    "updatedAt": "2019-10-09T23:16:41.1410000+00:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-5-400",
                      "message": "A phone number is required to book",
                      "faultOrigin": "SEVENROOMSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-5-500",
                      "message": "Customer Profile not found",
                      "faultOrigin": "CUSTOMERSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      },
      "put": {
        "summary": "modify",
        "description": "Modifies an existing restaurant reservation. The modification preserves the reservation confirmation number. ",
        "operationId": "put-modify",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "schema": {
              "enum": [
                "2e36c846-89f1-4e9d-b584-385990b75b35"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\\n",
            "required": true,
            "schema": {
              "enum": [
                "6d3f058c-9360-40fc-838b-5b181461ebb2"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Modify request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/modifyReservationRequest"
              },
              "example": {
                "restaurantReservation": {
                  "customerId": "08b88849-35df-44bb-b4ca-75e784cc8f2b",
                  "itineraryId": "2b9988ec-f34b-4353-a49d-4ff161f477b0",
                  "restaurantId": "12702660-833c-49cd-ba6c-6ac7e40684f1",
                  "bookDate": "2019-10-09T23:16:41.1410000+00:00",
                  "reservationDateTime": "2019-10-11 19:00:00",
                  "numAdults": 2,
                  "numChildren": 0,
                  "comments": "Agent XYZ modifying it",
                  "diningArea": "Main",
                  "state": "Booked",
                  "confirmationNumber": "MGMLV-M0QYN0",
                  "createdAt": "2019-10-09T23:16:41.1410000+00:00",
                  "updatedAt": "2019-10-09T23:16:41.1410000+00:00",
                  "agentInfo": {
                    "agentId": "agent",
                    "agentType": "frontDesk"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "modify response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/modifyReservationResponse"
                },
                "example": {
                  "restaurantReservation": {
                    "id": "7ea74a5f-ee85-49db-9ce7-9acde0a222b9",
                    "itineraryId": "2b9988ec-f34b-4353-a49d-4ff161f477b0",
                    "restaurantId": "12702660-833c-49cd-ba6c-6ac7e40684f1",
                    "customerId": "08b88849-35df-44bb-b4ca-75e784cc8f2b",
                    "bookDate": "2019-10-09T23:16:41.1410000+00:00",
                    "reservationDateTime": "2019-10-11 19:00:00",
                    "numAdults": 2,
                    "numChildren": 0,
                    "comments": "Agent XYZ modifying it",
                    "agentInfo": {
                      "agentId": "agent",
                      "agentType": "frontDesk"
                    },
                    "state": "Booked",
                    "confirmationNumber": "MGMLV-M0QYN0",
                    "createdAt": "2019-10-09T23:16:41.1410000+00:00",
                    "updatedAt": "2019-10-09T23:16:41.1410000+00:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/modifyReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Reservation with confirmation number BAC not found",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/modifyReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      },
      "delete": {
        "summary": "cancel",
        "description": "Cancels a booked restaurant reservation. The method cancels the reservation and updates the state of the reservation to be Cancelled.",
        "operationId": "delete-cancel",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "schema": {
              "enum": [
                "88b24fff-d39a-4b2c-a5b5-1163a2c8e738"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\\n",
            "required": true,
            "schema": {
              "enum": [
                "27fe3913-15b0-4fe2-8f23-51c72ef3d90b"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "cancel request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cancelReservationRequest"
              },
              "example": {
                "customerId": "08b88849-35df-44bb-b4ca-75e784cc8f2b",
                "itineraryId": "2b9988ec-f34b-4353-a49d-4ff161f477b0",
                "confirmationNumber": "MGM-121LY78",
                "cancellationReason": "Covid-19"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cancel response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelReservationResponse"
                },
                "example": {
                  "customerId": "08b88849-35df-44bb-b4ca-75e784cc8f2b",
                  "itineraryId": "2b9988ec-f34b-4353-a49d-4ff161f477b0",
                  "confirmationNumber": "MGM-121LY78",
                  "cancellationReason": "Covid-19",
                  "state": "Cancelled"
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Reservation with confirmation number XYZ not found",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/reservations/search": {
      "post": {
        "summary": "Search Reservation | Search restaurant reservation/s",
        "description": "This api call with a Service Token is to search restaurant reservation/s either by one of the parameters restaurant id, first name/last name, sevenRoomsProfileIds or confirmation number. In addition to these search parameters the query takes from and to date for retrieving reservations based on date filters. If no date parameters are passed and the search is by first-name and last name in the request, response will include all the reservations for the customer. \n  \nThis api with a Guest Token serves searching restaurant reservation by first name/last name and confirmation number. Firstname and Lastname will be taken from the JWT if those are not provided in the request. This API will retrieve the reservation by confirmation number then do a fuzzy name match from the reservation's first name/last name  with the given first name/last name in the request. Reservation will be returned if the name is matched otherwise an error message will be displayed. \nThis api with a Transient Token serves searching restaurant reservation by first name/last name and confirmation number. All three parameters are mandatory to retrieve a reservation. This API will retrieve the reservation by confirmation number then do a fuzzy name match from the reservation's first name/last name  with the given first name/last name in the request. Reservation will be returned if the name is matched otherwise an error message will be displayed. ",
        "operationId": "post-search",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Search request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/searchReservationRequest"
              },
              "example": {
                "type": "object",
                "required": false,
                "javaType": "com.mgmresorts.booking.restaurant.model.json.search.SearchRequest",
                "properties": {
                  "confirmationNumber": {
                    "type": "string",
                    "required": false
                  },
                  "reservationId": {
                    "type": "string",
                    "required": false
                  },
                  "sevenRoomsProfileIds": {
                    "type": "string",
                    "required": false
                  },
                  "dateFrom": {
                    "type": "string",
                    "format": "date",
                    "required": false
                  },
                  "dateTo": {
                    "type": "string",
                    "format": "date",
                    "required": false
                  },
                  "firstName": {
                    "type": "string",
                    "required": false
                  },
                  "lastName": {
                    "type": "string",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchReservationResponse"
                },
                "example": {
                  "restaurantReservationList": [
                    {
                      "id": "a7505190-eac4-46ca-a72e-cb752af26123",
                      "itineraryId": "6480625153",
                      "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "customerId": "11337729",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-22T01:37:42.220+0000",
                      "reservationDateTime": "2020-06-02 12:00:00",
                      "numAdults": 2,
                      "numChildren": 0,
                      "agentInfo": {
                        "agentId": "agent",
                        "agentType": "frontDesk"
                      },
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "ice",
                      "source": "ice",
                      "confirmationNumber": "MGDEM-PBVD330G",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-22T01:37:42.220+0000",
                      "updatedAt": "2020-05-22T01:37:42.220+0000"
                    },
                    {
                      "id": "a11e9ab4-d0b1-4a3c-b531-234f2d8adf8f",
                      "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-27T18:04:35.192+0000",
                      "reservationDateTime": "2020-06-02 12:00:00",
                      "numAdults": 2,
                      "numChildren": 0,
                      "comments": "",
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "RestaurantReservationPersister",
                      "source": "SevenRoom",
                      "confirmationNumber": "MGDEM-PMDYB1WW",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-27T18:04:35.192+0000",
                      "updatedAt": "2020-05-27T17:58:06.773+0000"
                    },
                    {
                      "id": "bf1ced7e-5401-469d-90df-649311044121",
                      "itineraryId": "6480665089",
                      "restaurantId": "40872441-efdd-4189-a81c-d9da7f3fa803",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "customerId": "826245775361",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-28T18:25:10.050+0000",
                      "reservationDateTime": "2020-06-02 19:00:00",
                      "numAdults": 2,
                      "numChildren": 0,
                      "diningArea": "Main",
                      "comments": "comments",
                      "agentInfo": {
                        "agentId": "agent",
                        "agentType": "frontDesk"
                      },
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "ice",
                      "source": "ice",
                      "confirmationNumber": "MGMLV-XY04S3CG",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-28T18:25:10.050+0000",
                      "updatedAt": "2020-05-28T18:25:10.050+0000"
                    },
                    {
                      "id": "eb64ef25-b6ba-40c8-b391-d972953e93a1",
                      "itineraryId": "6480665089",
                      "restaurantId": "40872441-efdd-4189-a81c-d9da7f3fa803",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "customerId": "826245775361",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-28T18:25:56.350+0000",
                      "reservationDateTime": "2020-06-02 19:00:00",
                      "numAdults": 2,
                      "numChildren": 0,
                      "diningArea": "Main",
                      "comments": "comments",
                      "agentInfo": {
                        "agentId": "agent",
                        "agentType": "frontDesk"
                      },
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "ice",
                      "source": "ice",
                      "confirmationNumber": "MGMLV-XY0633E8",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-28T18:25:56.350+0000",
                      "updatedAt": "2020-05-28T18:25:56.350+0000"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "x-mgm-source in the header is a required field",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v2/reservations/search": {
      "get": {
        "summary": "Search Reservation v2 | Search restaurant reservation/s",
        "description": "This api call with a Service Token is to search restaurant reservation/s either by one of the parameters restaurant id, first name/last name, sevenRoomsProfileIds or confirmation number. In addition to these search parameters the query takes from and to date for retrieving reservations based on date filters. If no date parameters are passed and the search is by first-name and last name in the request, response will include all the reservations for the customer. \n  \nThis api with a Guest Token serves searching restaurant reservation by first name/last name and confirmation number. Firstname and Lastname will be taken from the JWT if those are not provided in the request. This API will retrieve the reservation by confirmation number then do a fuzzy name match from the reservation's first name/last name  with the given first name/last name in the request. Reservation will be returned if the name is matched otherwise an error message will be displayed. \nThis api with a Transient Token serves searching restaurant reservation by first name/last name and confirmation number. All three parameters are mandatory to retrieve a reservation. This API will retrieve the reservation by confirmation number then do a fuzzy name match from the reservation's first name/last name  with the given first name/last name in the request. Reservation will be returned if the name is matched otherwise an error message will be displayed. ",
        "operationId": "get-search",
        "parameters": [
          {
            "name": "confirmationNumber",
            "in": "query",
            "description": "Unique id of the reservation\\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "query",
            "description": "Unique id of the reservation\\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sevenRoomsProfileIds",
            "in": "query",
            "description": "List of customer ids for which the reservations are requested\\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "The date(YYYY-MM-DD) from which the reservations are requested\\n\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "The date(YYYY-MM-DD) till which the reservations are requested\\n\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "firstName of the customer\\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "lastName of the customer\\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlationid",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transactionid",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchReservationResponse"
                },
                "example": {
                  "restaurantReservationList": [
                    {
                      "id": "a7505190-eac4-46ca-a72e-cb752af26123",
                      "itineraryId": "6480625153",
                      "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "customerId": "11337729",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-22T01:37:42.220+0000",
                      "reservationDateTime": "2020-06-02T12:00:00.000+0000",
                      "numAdults": 2,
                      "numChildren": 0,
                      "agentInfo": {
                        "agentId": "agent",
                        "agentType": "frontDesk"
                      },
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "ice",
                      "source": "ice",
                      "confirmationNumber": "MGDEM-PBVD330G",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-22T01:37:42.220+0000",
                      "updatedAt": "2020-05-22T01:37:42.220+0000"
                    },
                    {
                      "id": "a11e9ab4-d0b1-4a3c-b531-234f2d8adf8f",
                      "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-27T18:04:35.192+0000",
                      "reservationDateTime": "2020-06-02T12:00:00.000+0000",
                      "numAdults": 2,
                      "numChildren": 0,
                      "comments": "",
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "RestaurantReservationPersister",
                      "source": "SevenRoom",
                      "confirmationNumber": "MGDEM-PMDYB1WW",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-27T18:04:35.192+0000",
                      "updatedAt": "2020-05-27T17:58:06.773+0000"
                    },
                    {
                      "id": "bf1ced7e-5401-469d-90df-649311044121",
                      "itineraryId": "6480665089",
                      "restaurantId": "40872441-efdd-4189-a81c-d9da7f3fa803",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "customerId": "826245775361",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-28T18:25:10.050+0000",
                      "reservationDateTime": "2020-06-02T19:00:00.000+0000",
                      "numAdults": 2,
                      "numChildren": 0,
                      "diningArea": "diningArea",
                      "comments": "comments",
                      "agentInfo": {
                        "agentId": "agent",
                        "agentType": "frontDesk"
                      },
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "ice",
                      "source": "ice",
                      "confirmationNumber": "MGMLV-XY04S3CG",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-28T18:25:10.050+0000",
                      "updatedAt": "2020-05-28T18:25:10.050+0000"
                    },
                    {
                      "id": "eb64ef25-b6ba-40c8-b391-d972953e93a1",
                      "itineraryId": "6480665089",
                      "restaurantId": "40872441-efdd-4189-a81c-d9da7f3fa803",
                      "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                      "customerId": "826245775361",
                      "sevenRoomsProfileId": "16APE4S",
                      "bookDate": "2020-05-28T18:25:56.350+0000",
                      "reservationDateTime": "2020-06-02T19:00:00.000+0000",
                      "numAdults": 2,
                      "numChildren": 0,
                      "diningArea": "diningArea",
                      "comments": "comments",
                      "agentInfo": {
                        "agentId": "agent",
                        "agentType": "frontDesk"
                      },
                      "state": "Booked",
                      "hostStatus": "BOOKED",
                      "channel": "ice",
                      "source": "ice",
                      "confirmationNumber": "MGMLV-XY0633E8",
                      "firstName": "FNameForAssociateTest",
                      "lastName": "LNameForAssociateTest",
                      "loyaltyId": 72721111,
                      "mgmId": "00uya3crniNJBEiyW0h7",
                      "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                      "createdAt": "2020-05-28T18:25:56.350+0000",
                      "updatedAt": "2020-05-28T18:25:56.350+0000"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/customers/search": {
      "post": {
        "summary": "Search Customer | Search restaurant customer/s",
        "description": "This api call is to search restaurant customers/s by name, email, phone number and seven rooms profiled ID(s). API returns dining customers based on the parameters seven rooms profiled ID(s), email, phone number  or first and last name of the customer. In addition to these search parameters the query takes from and to date for retrieving reservations based on date filters. If no date parameters passed in the request, search API returns all the reservations for the profile Id's. Either one the paramters is mandatory. ",
        "operationId": "post-cust-search",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Search request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/searchCustomerRequest"
              },
              "example": {
                "type": "object",
                "required": false,
                "javaType": "com.mgmresorts.booking.restaurant.model.json.search.SearchRestaurantCustomerRequest",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "required": false
                  },
                  "lastName": {
                    "type": "string",
                    "required": false
                  },
                  "sevenRoomsProfileIds": {
                    "type": "string",
                    "required": false
                  },
                  "email": {
                    "type": "string",
                    "required": false
                  },
                  "phoneNumber": {
                    "type": "string",
                    "required": false
                  },
                  "dateFrom": {
                    "type": "string",
                    "format": "date",
                    "required": false
                  },
                  "dateTo": {
                    "type": "string",
                    "format": "date",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search Customer response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchCustomerResponse"
                },
                "example": {
                  "restaurantCustomerList": [
                    {
                      "address": "100 Smith Road",
                      "address_2": "Apt. 23B",
                      "anniversary_day": "1",
                      "anniversary_month": "2",
                      "avg_rating": 0,
                      "birthday_day": "3",
                      "birthday_month": "9",
                      "city": "Astoria",
                      "client_tags": [
                        {
                          "color": null,
                          "tag_display": "Always accommodate",
                          "group_display": "Client Type",
                          "group": "Client Type",
                          "tag": "Always accommodate"
                        },
                        {
                          "color": null,
                          "tag_display": "Lactose Intolerant",
                          "group_display": "Dietary restrictions",
                          "group": "Dietary restrictions",
                          "tag": "Lactose Intolerant"
                        }
                      ],
                      "company": "Astoria Elementary School",
                      "country": "USA",
                      "created": "2020-11-25T03:40:00.600+0000",
                      "email": "john.kimble@gmail.com",
                      "email_alt": "",
                      "first_name": "John",
                      "gender": "MALE",
                      "has_billing_profile": true,
                      "id": "2d6f2cbc-c13a-4bb7-b699-6a83fd048c35",
                      "is_contact_private": false,
                      "is_one_time_guest": false,
                      "last_name": "Kimble",
                      "loyalty_id": "",
                      "loyalty_tier": "",
                      "marketing_opt_in": false,
                      "notes": "Has thick accent",
                      "phone_number": "+1-212-555-3547",
                      "phone_number_alt": "",
                      "phone_number_alt_locale": "US",
                      "phone_number_locale": "US",
                      "postal_code": 70707,
                      "private_notes": "Needs a booth",
                      "sevenroomsCustProfileId": "MGMlv-pm-v",
                      "salutation": "Mr",
                      "state": "Oregon",
                      "status": "",
                      "title": "Kindergarten Cop",
                      "total_cancellations": 0,
                      "total_covers": 0,
                      "total_noshows": 0,
                      "total_spend\"": 0,
                      "total_spend_per_cover": 0,
                      "total_spend_per_visit": 0,
                      "total_visits": 0,
                      "updated": "2020-12-14T03:40:06.666+0000",
                      "user": {
                        "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICAkOuAnLkKDA",
                        "name": "Evan Kline"
                      },
                      "venue_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICA0PK4o98JDA",
                      "venue_stats": {
                        "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgND1g8GxCQw": {
                          "total_visits": 1,
                          "total_cancellations": "0,",
                          "total_spend_local_per_visit": "187.5,",
                          "total_spend_local_per_cover": "46.875,",
                          "total_spend": "187.5,",
                          "total_spend_per_cover": 46.875,
                          "booked_by_names": [
                            "John Smith",
                            "James Mason"
                          ],
                          "num_ratings": 0,
                          "avg_rating": 0,
                          "total_covers": 4,
                          "last_visit_date": "2020-12-14",
                          "total_spend_per_visit": 187.5,
                          "total_noshows": 0,
                          "total_spend_local": 187.5
                        }
                      }
                    },
                    {
                      "address": "230 Park Avenue South",
                      "address_2": "",
                      "anniversary_day": "1",
                      "anniversary_month": "2",
                      "avg_rating": 0,
                      "birthday_day": "2",
                      "birthday_month": "3",
                      "city": "New York",
                      "client_tags": [
                        {
                          "color": null,
                          "tag_display": "VIP",
                          "group_display": "VIP client type",
                          "group": "VIP client type",
                          "tag": "VIP"
                        },
                        {
                          "color": null,
                          "tag_display": "Regular",
                          "group_display": "Client Type",
                          "group": "Client Type",
                          "tag": "Regular"
                        },
                        {
                          "color": null,
                          "tag_display": "Paleo",
                          "group_display": "Dietary restrictions",
                          "group": "Dietary restrictions",
                          "tag": "Paleo"
                        },
                        {
                          "color": null,
                          "tag_display": "Tech",
                          "group_display": "Profession",
                          "group": "Profession",
                          "tag": "Tech"
                        },
                        {
                          "color": null,
                          "tag_display": "Booth",
                          "group_display": "Seating Preference",
                          "group": "Seating Preference",
                          "tag": "Booth"
                        }
                      ],
                      "company": "Greenfelder Consulting",
                      "country": "USA",
                      "created": "2020-11-26T03:40:00.600+0000",
                      "email": "ag83@gmail.com",
                      "email_alt": "",
                      "first_name": "Allan",
                      "gender": "MALE",
                      "has_billing_profile": true,
                      "id": "66d71f4c-8011-4277-8017-b600ab3d3417",
                      "is_contact_private": false,
                      "is_one_time_guest": false,
                      "last_name": "Greenfelder",
                      "loyalty_id": "agk_191024",
                      "loyalty_tier": "Gold",
                      "marketing_opt_in": false,
                      "notes": "Comes in for business meetings",
                      "phone_number": "+1-212-293-0064",
                      "phone_number_alt": "",
                      "phone_number_alt_locale": "US",
                      "phone_number_locale": "US",
                      "postal_code": 10010,
                      "private_notes": "Loves the chocolate lava cake",
                      "sevenroomsCustProfileId": "P9MPDO",
                      "salutation": "Mr",
                      "state": "Ny",
                      "status": "VIP",
                      "title": "CEO",
                      "total_cancellations": 0,
                      "total_covers": 4,
                      "total_noshows": 0,
                      "total_spend\"": 187.5,
                      "total_spend_per_cover": 46.875,
                      "total_spend_per_visit": 187.5,
                      "total_visits": 1,
                      "updated": "2020-12-15T03:40:06.666+0000",
                      "user": {
                        "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICAoOmywYIJDA",
                        "name": "Imported Reservations"
                      },
                      "venue_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICA0PK4o98JDA",
                      "venue_stats": {
                        "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgND1g8GxCQw": {
                          "total_visits": 1,
                          "total_cancellations": "0,",
                          "total_spend_local_per_visit": "187.5,",
                          "total_spend_local_per_cover": "46.875,",
                          "total_spend": "187.5,",
                          "total_spend_per_cover": 46.875,
                          "booked_by_names": [
                            "John Smith",
                            "James Mason"
                          ],
                          "num_ratings": 0,
                          "avg_rating": 0,
                          "total_covers": 4,
                          "last_visit_date": "2020-12-15",
                          "total_spend_per_visit": 187.5,
                          "total_noshows": 0,
                          "total_spend_local": 187.5
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/associate": {
      "put": {
        "summary": "Associate | Associates the given reservation with mlifenumber",
        "description": "This api associates the given reservation with given mlifenumber and mgmid. It will do a fuzzyname match before doing the association.  Error will be thrown if the reservation is already associated to another mlifenumber. MGMID will be updated if the reservation is already associated  to the same mlifenumber. No action will be taken if the reservation is arleady associated to the same mlifenumber and mgmid. For a Service Token, all the parameters will be taken from the request. For the Guest Token, confirmationNumber will be taken from the request and remaining parameters will be taken from the JWT token. Transient user is not allowed to access this api.",
        "operationId": "put-association",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlationid",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transactionid",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Associate request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/associateReservationRequest"
              },
              "example": {
                "type": "object",
                "required": false,
                "javaType": "com.mgmresorts.booking.restaurant.model.json.AssociateRestaurantReservationRequest",
                "properties": {
                  "confirmationNumber": {
                    "type": "string",
                    "required": true
                  },
                  "firstName": {
                    "type": "string",
                    "required": false
                  },
                  "lastName": {
                    "type": "string",
                    "required": false
                  },
                  "loyaltyId": {
                    "type": "string",
                    "required": false
                  },
                  "mgmId": {
                    "type": "string",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Associate response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/associateReservationResponse"
                },
                "example": {
                  "restaurantReservation": {
                    "id": "a7505190-eac4-46ca-a72e-cb752af26123",
                    "itineraryId": "6480625153",
                    "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                    "propertyId": "66964e2b-2550-4476-84c3-1a4c0c5c067f",
                    "customerId": "11337729",
                    "sevenRoomsProfileId": "16APE4S",
                    "bookDate": "2020-05-22T01:37:42.220+0000",
                    "reservationDateTime": "2020-06-02T12:00:00.000+0000",
                    "numAdults": 2,
                    "numChildren": 0,
                    "agentInfo": {
                      "agentId": "agent",
                      "agentType": "frontDesk"
                    },
                    "state": "Booked",
                    "hostStatus": "BOOKED",
                    "channel": "ice",
                    "source": "ice",
                    "confirmationNumber": "MGDEM-PBVD330G",
                    "firstName": "FNameForAssociateTest",
                    "lastName": "LNameForAssociateTest",
                    "loyaltyId": 72721111,
                    "mgmId": "00uya3crniNJBEiyW0h7",
                    "modifyReservationLinkExternal": "https://demo.sevenrooms.com/direct/modify-reservation/YTgzZGM4NmQ0MTYwMTE0YjFlMGY1MjdhYjI5NDE4Mjk5OWFhNDQyNjqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNjI5OTEyMDk0LjI2OTExOFUJYWN0dWFsX2lkcQNYVwAAAGFoaHpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMV1JsYlc5eUpRc1NHMjVwWjJoMGJHOXZjRjlTWlhObGNuWmhkR2x2YmtGamRIVmhiQmo3b3A2WkRBd3EEdS4=?lang=en",
                    "createdAt": "2020-05-22T01:37:42.220+0000",
                    "updatedAt": "2020-05-22T01:37:42.220+0000"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/reservation/hold": {
      "put": {
        "summary": "Hold | Book a reservation hold for a specific time with an optional expiration time.",
        "description": "This api creates a reservation hold based on the given shiftPersistentId and accessPersistentId returned as part of availability response. It returns a reservation_hold_id along with other input parameters.",
        "operationId": "put-hold",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlationid",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transactionid",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Hold request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/holdReservationRequest"
              },
              "example": {
                "type": "object",
                "required": true,
                "javaType": "com.mgmresorts.booking.restaurant.model.json.HoldRestaurantReservationRequest",
                "properties": {
                  "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                  "reservationDateTime": "2022-06-02 12:00:00",
                  "partySize": 2,
                  "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                  "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59",
                  "holdWaitTimeSec": 120
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hold response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/holdReservationResponse"
                },
                "example": {
                  "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                  "reservationDateTime": "2022-06-02 12:00:00",
                  "partySize": 2,
                  "reservationHoldId": "1652733741.819923",
                  "holdDurationSec": 120,
                  "accessPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-1560275868.48-0.0733830052208",
                  "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59",
                  "propertyId": "e2704b04-d515-45b0-8afd-4fa1424ff0a8"
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/holdReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Invalid input party size 0",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/holdReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "There was a problem completing the reservation hold",
                      "faultOrigin": "SEVENROOMSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/reservation/release": {
      "post": {
        "summary": "Release | Release a previously created reservation hold",
        "description": "This api releases the hold based on given reservationHoldId and restaurantId",
        "operationId": "post-release",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlationid",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transactionid",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Release request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/releaseReservationRequest"
              },
              "example": {
                "type": "object",
                "required": true,
                "javaType": "com.mgmresorts.booking.restaurant.model.json.ReleaseRestaurantReservationRequest",
                "properties": {
                  "restaurantId": "25c455ff-df09-424d-8367-78078ce866dd",
                  "reservationHoldId": "1652733741.819923",
                  "date": "2022-06-02",
                  "shiftPersistentId": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCQitnLCQw-DINNER-1533098647.59"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Release response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/releaseReservationResponse"
                },
                "example": {
                  "msg": "Pending Reservation Released Successfully."
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/releaseReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Invalid input date",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/releaseReservationResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-5-404",
                      "message": "Restaurant not found",
                      "faultOrigin": "REFDATASERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/v1/ping": {
      "get": {
        "summary": "ping",
        "description": "This api call is to check that the drs core function app is running. There is no input parameters.The get request returns Http OK Status and 200 Status Code to indicate that the function app is running. ",
        "operationId": "get-drscore-ping",
        "responses": {
          "200": {
            "description": "Ping Response"
          }
        },
        "tags": [
          "Restaurant Core Services"
        ]
      }
    },
    "/reservations/v1/import/reservation": {
      "get": {
        "summary": "reservation seeding",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "description": "Unique id of MGM restaurant",
            "required": true,
            "schema": {
              "enum": [
                "012345"
              ],
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "2020-10-09"
              ],
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "2020-11-12"
              ],
              "type": "string"
            }
          },
          {
            "name": "isDBMocked",
            "in": "query",
            "description": "DB call flag\n",
            "required": false,
            "schema": {
              "enum": [
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Datetime from which the data is to be queried",
            "required": false,
            "schema": {
              "enum": [
                "2021-01-27 18:03:55"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Imported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservationsImportResponse"
                },
                "example": {
                  "reservationStat": {
                    "insertSuccessCount": 0,
                    "updateSuccessCount": 176,
                    "insertFailureCount": 0,
                    "updateFailureCount": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservationsImportResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "From and To date difference can not be greater than configured days or default of 7 days and the current date difference is 33",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservationsImportResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Seeding Services"
        ]
      }
    },
    "/reservations/v1/import/customer": {
      "get": {
        "summary": "customer seeding",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "description": "Unique id of MGM restaurant",
            "required": true,
            "schema": {
              "enum": [
                "012345"
              ],
              "type": "string"
            }
          },
          {
            "name": "isDBMocked",
            "in": "query",
            "description": "DB call flag\n",
            "required": false,
            "schema": {
              "enum": [
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Datetime from which the data is to be queried",
            "required": false,
            "schema": {
              "enum": [
                "2021-01-27 18:03:55"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the trace id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "49f10428-1ab1-49f8-ab98-63086ec78985"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. If not provided in request then it will be generated and passed in the response.\n",
            "required": true,
            "schema": {
              "enum": [
                "a7c125fa-ab70-446e-b455-6c736a176973"
              ],
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The Content-Type entity header is used to indicate the media type of the resource",
            "required": true,
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Imported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customersImportResponse"
                },
                "example": {
                  "customerStat": {
                    "message": "Request submitted successfully",
                    "restaurantId": "6ffee42e-8033-446d-b93d-09f91be07af5",
                    "isDBMocked": false,
                    "updatedSince": "2021-01-27T18:03:55.000Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customersImportResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-1-400",
                      "message": "Restaurant not found",
                      "faultOrigin": "REFDATASERVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customersImportResponse"
                },
                "example": {
                  "error": [
                    {
                      "code": "600-3-500",
                      "message": "INTERNAL_SERVER_ERROR",
                      "faultOrigin": "UCPRESTAURANTSERVICE"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Seeding Services"
        ]
      }
    },
    "/reservations/v1/import/ping": {
      "get": {
        "summary": "ping",
        "description": "This api call is to check that the seeding function app is running. There is no input parameters.The get request returns Http OK Status and 200 Status Code to indicate that the function app is running. ",
        "operationId": "get-import-ping",
        "responses": {
          "200": {
            "description": "Ping Response"
          }
        },
        "tags": [
          "Restaurant Seeding Services"
        ]
      }
    },
    "/events/v1/reservations": {
      "post": {
        "summary": "subcribe",
        "operationId": "post-subcribe",
        "parameters": [
          {
            "name": "X-SevenRooms-Request-Id",
            "in": "header",
            "description": "seven rooms request id",
            "schema": {
              "enum": [
                "1fa58315-64fe-4664-aaa9-b2ecb8ba55ec"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-SevenRooms-Retry-Attempt",
            "in": "header",
            "description": "X-SevenRooms-Retry-Attempt",
            "schema": {
              "enum": [
                "0"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "sevenrooms",
            "schema": {
              "enum": [
                "sevenrooms"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "sevenrooms",
            "schema": {
              "enum": [
                "sevenrooms"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sevenRoomsWebhookRequest"
              },
              "example": {
                "entity_type": "client",
                "event_type": "created",
                "entity": {
                  "birthday_alt_day": null,
                  "last_name": "Attinson",
                  "client_tags": [
                    {
                      "color": "#8ef3b0",
                      "tag_display": "Friends & family",
                      "group_display": "Client Type",
                      "group": "Client Type",
                      "tag": "Friends & family"
                    },
                    {
                      "color": "#8ef3b0",
                      "tag_display": "Friend of employee",
                      "group_display": "Client Type",
                      "group": "Client Type",
                      "tag": "Friend of employee"
                    },
                    {
                      "color": "#8ef3b0",
                      "tag_display": "Always accommodate",
                      "group_display": "Client Type",
                      "group": "Client Type",
                      "tag": "Always accommodate"
                    },
                    {
                      "color": "#e2e7e9",
                      "tag_display": "Corner",
                      "group_display": "Seating Preference",
                      "group": "Seating Preference",
                      "tag": "Corner"
                    },
                    {
                      "color": "#e2e7e9",
                      "tag_display": "Still water",
                      "group_display": "Water",
                      "group": "Water",
                      "tag": "Still water"
                    },
                    {
                      "color": "#e2e7e9",
                      "tag_display": "Tap water",
                      "group_display": "Water",
                      "group": "Water",
                      "tag": "Tap water"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "White",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "White"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "Dry",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "Dry"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "California",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "California"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "Tempranillo",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "Tempranillo"
                    }
                  ],
                  "photo": null,
                  "external_user_id": null,
                  "loyalty_rank": null,
                  "anniversary_month": 2,
                  "birthday_day": 7,
                  "city": "LAS VEGAS",
                  "title": "test title",
                  "anniversary_day": 6,
                  "phone_number_locale": "US",
                  "total_spend_per_visit": 0,
                  "total_visits": 0,
                  "updated": "2019-08-21T18:10:08.9118630+00:00",
                  "marketing_opt_in_ts": null,
                  "company": "test comp",
                  "total_spend": 0,
                  "loyalty_id": null,
                  "gender": "FEMALE",
                  "avg_rating": 0,
                  "has_billing_profile": false,
                  "phone_number_alt": "+18098234551",
                  "is_one_time_guest": false,
                  "address_2": "APT 2041",
                  "reference_code": "ZD64BM",
                  "postal_code": "89103",
                  "notes": "She is good and creating a new profile",
                  "status": "",
                  "phone_number_alt_locale": "US",
                  "marketing_opt_in": false,
                  "salutation": "",
                  "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yJAsSGm5pZ2h0bG9vcF9WZW51ZUdyb3VwQ2xpZW50GLLthPoHDA",
                  "photo_crop_info": {},
                  "member_groups": [],
                  "first_name": "Geneva",
                  "total_cancellations": 0,
                  "is_contact_private": false,
                  "birthday_alt_month": null,
                  "email_alt": "Attinson.Gen_678@gmailo.com",
                  "venue_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICAkNC4kY0LDA",
                  "state": "Nevada",
                  "birthday_month": 4,
                  "total_covers": 0,
                  "email": "Attinson.Gen_678@yahoo.com",
                  "phone_number": "+13409123456",
                  "private_notes": "",
                  "tags": "Friends & family, Friend of employee, Always accommodate, Corner, Still water, Tap water, White, Dry, California, Tempranillo",
                  "deleted": null,
                  "total_spend_per_cover": 0,
                  "total_noshows": 0,
                  "user": {
                    "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICAkPLwypEKDA",
                    "name": "Subramanian Arumugam"
                  },
                  "venue_stats": {
                    "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJDQtOO6Cgw": {
                      "total_spend_local_per_cover": 0,
                      "last_visit_date": null,
                      "total_cancellations": 0,
                      "total_covers": 0,
                      "total_spend_local": 0,
                      "total_spend_per_cover": 0,
                      "total_visits": 0,
                      "total_spend": 0,
                      "booked_by_names": [
                        "Subramanian Arumugam"
                      ],
                      "total_noshows": 0,
                      "num_ratings": 0,
                      "total_spend_per_visit": 0,
                      "total_spend_local_per_visit": 0,
                      "avg_rating": 0
                    }
                  },
                  "address": "4201 S DECATUR BLVD",
                  "created": "2019-08-21T18:10:02.7440010+00:00",
                  "country": "",
                  "loyalty_tier": null
                },
                "updates": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "seven-rooms-trigger response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sevenRoomsWebhookResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Eventing Services"
        ]
      }
    },
    "/sevenrooms/v2/webhook": {
      "post": {
        "summary": "subcribe",
        "operationId": "post-subcribe-v2",
        "parameters": [
          {
            "name": "X-SevenRooms-Request-Id",
            "in": "header",
            "description": "seven rooms request id",
            "schema": {
              "enum": [
                "1fa58315-64fe-4664-aaa9-b2ecb8ba55ec"
              ],
              "type": "string"
            }
          },
          {
            "name": "X-SevenRooms-Retry-Attempt",
            "in": "header",
            "description": "X-SevenRooms-Retry-Attempt",
            "schema": {
              "enum": [
                "0"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "sevenrooms",
            "schema": {
              "enum": [
                "sevenrooms"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "sevenrooms",
            "schema": {
              "enum": [
                "sevenrooms"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sevenRoomsWebhookRequest"
              },
              "example": {
                "entity_type": "client",
                "event_type": "created",
                "entity": {
                  "birthday_alt_day": null,
                  "last_name": "Attinson",
                  "client_tags": [
                    {
                      "color": "#8ef3b0",
                      "tag_display": "Friends & family",
                      "group_display": "Client Type",
                      "group": "Client Type",
                      "tag": "Friends & family"
                    },
                    {
                      "color": "#8ef3b0",
                      "tag_display": "Friend of employee",
                      "group_display": "Client Type",
                      "group": "Client Type",
                      "tag": "Friend of employee"
                    },
                    {
                      "color": "#8ef3b0",
                      "tag_display": "Always accommodate",
                      "group_display": "Client Type",
                      "group": "Client Type",
                      "tag": "Always accommodate"
                    },
                    {
                      "color": "#e2e7e9",
                      "tag_display": "Corner",
                      "group_display": "Seating Preference",
                      "group": "Seating Preference",
                      "tag": "Corner"
                    },
                    {
                      "color": "#e2e7e9",
                      "tag_display": "Still water",
                      "group_display": "Water",
                      "group": "Water",
                      "tag": "Still water"
                    },
                    {
                      "color": "#e2e7e9",
                      "tag_display": "Tap water",
                      "group_display": "Water",
                      "group": "Water",
                      "tag": "Tap water"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "White",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "White"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "Dry",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "Dry"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "California",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "California"
                    },
                    {
                      "color": "#90ddff",
                      "tag_display": "Tempranillo",
                      "group_display": "Wine",
                      "group": "Wine",
                      "tag": "Tempranillo"
                    }
                  ],
                  "photo": null,
                  "external_user_id": null,
                  "loyalty_rank": null,
                  "anniversary_month": 2,
                  "birthday_day": 7,
                  "city": "LAS VEGAS",
                  "title": "test title",
                  "anniversary_day": 6,
                  "phone_number_locale": "US",
                  "total_spend_per_visit": 0,
                  "total_visits": 0,
                  "updated": "2019-08-21T18:10:08.9118630+00:00",
                  "marketing_opt_in_ts": null,
                  "company": "test comp",
                  "total_spend": 0,
                  "loyalty_id": null,
                  "gender": "FEMALE",
                  "avg_rating": 0,
                  "has_billing_profile": false,
                  "phone_number_alt": "+18098234551",
                  "is_one_time_guest": false,
                  "address_2": "APT 2041",
                  "reference_code": "ZD64BM",
                  "postal_code": "89103",
                  "notes": "She is good and creating a new profile",
                  "status": "",
                  "phone_number_alt_locale": "US",
                  "marketing_opt_in": false,
                  "salutation": "",
                  "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yJAsSGm5pZ2h0bG9vcF9WZW51ZUdyb3VwQ2xpZW50GLLthPoHDA",
                  "photo_crop_info": {},
                  "member_groups": [],
                  "first_name": "Geneva",
                  "total_cancellations": 0,
                  "is_contact_private": false,
                  "birthday_alt_month": null,
                  "email_alt": "Attinson.Gen_678@gmailo.com",
                  "venue_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICAkNC4kY0LDA",
                  "state": "Nevada",
                  "birthday_month": 4,
                  "total_covers": 0,
                  "email": "Attinson.Gen_678@yahoo.com",
                  "phone_number": "+13409123456",
                  "private_notes": "",
                  "tags": "Friends & family, Friend of employee, Always accommodate, Corner, Still water, Tap water, White, Dry, California, Tempranillo",
                  "deleted": null,
                  "total_spend_per_cover": 0,
                  "total_noshows": 0,
                  "user": {
                    "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICAkPLwypEKDA",
                    "name": "Subramanian Arumugam"
                  },
                  "venue_stats": {
                    "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJDQtOO6Cgw": {
                      "total_spend_local_per_cover": 0,
                      "last_visit_date": null,
                      "total_cancellations": 0,
                      "total_covers": 0,
                      "total_spend_local": 0,
                      "total_spend_per_cover": 0,
                      "total_visits": 0,
                      "total_spend": 0,
                      "booked_by_names": [
                        "Subramanian Arumugam"
                      ],
                      "total_noshows": 0,
                      "num_ratings": 0,
                      "total_spend_per_visit": 0,
                      "total_spend_local_per_visit": 0,
                      "avg_rating": 0
                    }
                  },
                  "address": "4201 S DECATUR BLVD",
                  "created": "2019-08-21T18:10:02.7440010+00:00",
                  "country": "",
                  "loyalty_tier": null
                },
                "updates": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "seven-rooms-trigger response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sevenRoomsWebhookResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Restaurant Eventing Services"
        ]
      }
    },
    "/refdata/v1/cuisine-types": {
      "post": {
        "tags": [
          "Refdata Cuisine type management"
        ],
        "summary": "Create a Cuisine Type for a Restaurant",
        "description": "",
        "operationId": "createCuisineType",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CuisineType"
              }
            }
          },
          "required": true,
          "description": "CuisineType object that needs to be saved"
        },
        "responses": {
          "201": {
            "description": "Response with CuisineType payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CuisineType"
                },
                "example": {
                  "payload": {
                    "description": "cusine description",
                    "name": "cusineName",
                    "id": "439j-dfjfd-23fe3443-34334",
                    "auditInfo": {
                      "updatedAt": "2020-07-27T05:32:03.931Z",
                      "updatedBy": "user",
                      "createdAt": "2020-07-27T05:32:03.931Z",
                      "createdBy": "user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-400",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refdata/v1/cuisine-types/{cuisineTypeId}": {
      "put": {
        "tags": [
          "Refdata Cuisine type management"
        ],
        "summary": "Update an existing CuisineType by id",
        "operationId": "updateCuisineType",
        "parameters": [
          {
            "in": "path",
            "name": "cuisineTypeId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "MGM CuisineType ID"
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CuisineType"
              }
            }
          },
          "required": true,
          "description": "CuisineType object that needs to be updated in to the store"
        },
        "responses": {
          "200": {
            "description": "Updated, Response with CuisineType in payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "payload": {
                    "description": "cusine description",
                    "name": "cusineName",
                    "id": "439j-dfjfd-23fe3443-34334",
                    "auditInfo": {
                      "updatedAt": "2020-07-27T05:32:03.931Z",
                      "updatedBy": "user",
                      "createdAt": "2020-07-27T05:32:03.931Z",
                      "createdBy": "user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-400",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No CuisineType found with the provided id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-404",
                    "message": "resource not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Refdata Cuisine type management"
        ],
        "summary": "Delete a CuisineType using its ID. Optionally provide a restaurant ID to speed up the search and limit the scope of the request to specified restaurant.",
        "operationId": "deleteCuisineType",
        "parameters": [
          {
            "in": "query",
            "name": "restaurantId",
            "schema": {
              "type": "string"
            },
            "description": "MGM Restaurant ID"
          },
          {
            "in": "path",
            "name": "cuisineTypeId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "MGM CuisineType ID"
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-404",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refdata/v1/property/{propertyId}/restaurants/": {
      "get": {
        "tags": [
          "Refdata Restaurants client access"
        ],
        "summary": "Gets all the restaurants associated with the property. Provides a reduced client view of Restaurants when the optional 'full' parameter is false or absent.",
        "operationId": "getRestaurantByProperty",
        "parameters": [
          {
            "in": "path",
            "name": "propertyId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "MGM Property ID"
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurants found, Response with payload as a PagedResponse having Response object content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Restaurant"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-404",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refdata/v1/restaurant/{restaurantId}": {
      "get": {
        "tags": [
          "Refdata Restaurants client access"
        ],
        "summary": "Get Restaurant metadata by ID",
        "operationId": "getRestaurant",
        "parameters": [
          {
            "in": "path",
            "name": "restaurantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "MGM Restaurant ID"
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurants found, Response object with a Restaurant object in payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Restaurant"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found, Response object of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-404",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Refdata Restaurants management"
        ],
        "summary": "Update an existing restaurant by id",
        "description": "",
        "operationId": "updateRestaurant",
        "parameters": [
          {
            "in": "path",
            "name": "restaurantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "MGM Restaurant ID"
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Restaurant"
              }
            }
          },
          "required": true,
          "description": "Restaurant object that needs to be updated in to the store"
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Restaurant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-400",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Restaurant found with the provided id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-404",
                    "message": "resource not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refdata/v1/healthcheck": {
      "summary": "healthcheck",
      "get": {
        "description": "",
        "operationId": "healthcheck",
        "tags": [
          "Refdata Restaurants client access"
        ],
        "responses": {
          "200": {
            "description": "Service is up",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeAheadResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "All responses will have this schema"
          }
        }
      }
    },
    "/refdata/v1/restaurants.type-ahead": {
      "summary": "Get restaurants type ahead",
      "get": {
        "description": "",
        "operationId": "getRestaurantsByTypeAhead",
        "tags": [
          "Refdata Restaurants client access"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string"
            },
            "description": "partial keyword to search restaurants by",
            "required": true
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurants found, Response object with a Restaurant object in payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeAheadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-400",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "All responses will have this schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeAheadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/refdata/v1/restaurants/search": {
      "get": {
        "summary": "Get restaurants",
        "description": "",
        "operationId": "getRestaurants",
        "tags": [
          "Refdata Restaurants client access"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "venueId",
            "schema": {
              "type": "string"
            },
            "description": "VenueId to search restaurant",
            "required": true
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant found, Response object with a Restaurant object in payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Restaurant"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found, Response object of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-404",
                    "message": "resource not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "All responses will have this schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Restaurant"
                }
              }
            }
          }
        }
      }
    },
    "/refdata/v1/restaurant": {
      "summary": "Create restaurants",
      "post": {
        "summary": "Create new Restaurants",
        "description": "",
        "tags": [
          "Refdata Restaurants management"
        ],
        "operationId": "createRestaurant",
        "parameters": [
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Response with Restaurant payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Restaurant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-400",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 response, server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-3-500",
                    "message": "internal server error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Refdata Restaurants management"
        ],
        "summary": "Delete a restaurant",
        "operationId": "deleteRestaurant",
        "parameters": [
          {
            "in": "query",
            "name": "restaurantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "MGM Restaurant ID"
          },
          {
            "name": "x-mgm-channel",
            "in": "header",
            "description": "This field represents the channel of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "dmp"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-source",
            "in": "header",
            "description": "This field represents the origin of the request\n",
            "required": true,
            "schema": {
              "enum": [
                "mgmgrandlv"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-correlation-id",
            "in": "header",
            "description": "This field represents the correlation id which needs to track the all the transactions for a request.\n",
            "schema": {
              "enum": [
                "1b970994-d99a-47a2-9fc5-aa9165ceb244"
              ],
              "type": "string"
            }
          },
          {
            "name": "x-mgm-transaction-id",
            "in": "header",
            "description": "Unique transaction id for the request. \n",
            "required": true,
            "schema": {
              "enum": [
                "12702660-833c-49cd-ba6c-6ac7e40684f1"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "error": {
                    "code": "600-1-400",
                    "message": "requested resource not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "restaurantAvailabilityResponse": {
        "type": "object",
        "properties": {
          "restaurantAvailability": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "available": {
                  "type": "boolean"
                },
                "totalOccupany": {
                  "type": "integer"
                },
                "accessPersistentId": {
                  "type": "string"
                },
                "shiftPersistentId": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "restaurantNotesResponse": {
        "type": "object",
        "properties": {
          "restaurantNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "note": {
                  "type": "string"
                },
                "shifts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "price_point": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "shift_category": {
                        "type": "string"
                      },
                      "spend_policy": {
                        "type": "string"
                      },
                      "child_policy": {
                        "type": "string"
                      },
                      "table_holding_policy": {
                        "type": "string"
                      },
                      "cuisine": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "dress_code": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "header"
        ]
      },
      "reservationSheetResponse": {
        "type": "object",
        "properties": {
          "sheets": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "time": {
                  "type": "string",
                  "format": "time"
                },
                "diningArea": {
                  "type": "string"
                },
                "capacity": {
                  "type": "integer"
                },
                "reserved": {
                  "type": "integer"
                },
                "parties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "holder": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "createReservationRequest": {
        "type": "object",
        "properties": {
          "restaurantReservation": {
            "type": "object",
            "properties": {
              "reservationHoldId": {
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "itineraryId": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "reservationDateTime": {
                "type": "string"
              },
              "numAdults": {
                "type": "integer"
              },
              "numChildren": {
                "type": "integer"
              },
              "comments": {
                "type": "string"
              },
              "diningArea": {
                "type": "string"
              },
              "agentInfo": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "agentType": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "createReservationResponse": {
        "type": "object",
        "properties": {
          "restaurantReservation": {
            "type": "object",
            "properties": {
              "reservationHoldId": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "itineraryId": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "propertyId": {
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "sevenRoomsProfileId": {
                "type": "string"
              },
              "bookDate": {
                "type": "string"
              },
              "reservationDateTime": {
                "type": "string"
              },
              "numAdults": {
                "type": "integer"
              },
              "numChildren": {
                "type": "integer"
              },
              "comments": {
                "type": "string"
              },
              "diningArea": {
                "type": "string"
              },
              "agentInfo": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "agentType": {
                    "type": "string"
                  }
                }
              },
              "state": {
                "type": "string"
              },
              "hostStatus": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "confirmationNumber": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "header"
        ]
      },
      "modifyReservationRequest": {
        "type": "object",
        "properties": {
          "restaurantReservation": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "string"
              },
              "itineraryId": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "reservationDateTime": {
                "type": "string"
              },
              "bookDate": {
                "type": "string"
              },
              "numAdults": {
                "type": "integer"
              },
              "numChildren": {
                "type": "integer"
              },
              "comments": {
                "type": "string"
              },
              "diningArea": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "confirmationNumber": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              },
              "agentInfo": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "agentType": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "modifyReservationResponse": {
        "type": "object",
        "properties": {
          "restaurantReservation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "itineraryId": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "propertyId": {
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "sevenRoomsProfileId": {
                "type": "string"
              },
              "bookDate": {
                "type": "string"
              },
              "reservationDateTime": {
                "type": "string"
              },
              "numAdults": {
                "type": "integer"
              },
              "numChildren": {
                "type": "integer"
              },
              "comments": {
                "type": "string"
              },
              "diningArea": {
                "type": "string"
              },
              "agentInfo": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "agentType": {
                    "type": "string"
                  }
                }
              },
              "state": {
                "type": "string"
              },
              "hostStatus": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "confirmationNumber": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "header"
        ]
      },
      "cancelReservationRequest": {
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "cancellatonReason": {
            "type": "string"
          }
        }
      },
      "cancelReservationResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "saveReservationRequest": {
        "type": "object",
        "properties": {
          "restaurantReservation": {
            "type": "object",
            "properties": {
              "itineraryId": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "reservationDateTime": {
                "type": "string"
              },
              "numAdults": {
                "type": "integer"
              },
              "numChildren": {
                "type": "integer"
              },
              "diningArea": {
                "type": "string"
              },
              "comments": {
                "type": "string"
              },
              "agentInfo": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "agentType": {
                    "type": "string"
                  }
                }
              },
              "channel": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          }
        }
      },
      "saveReservationResponse": {
        "type": "object",
        "properties": {
          "restaurantReservation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "itineraryId": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "propertyId": {
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "reservationDateTime": {
                "type": "string"
              },
              "numAdults": {
                "type": "integer"
              },
              "numChildren": {
                "type": "integer"
              },
              "diningArea": {
                "type": "string"
              },
              "comments": {
                "type": "string"
              },
              "agentInfo": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "agentType": {
                    "type": "string"
                  }
                }
              },
              "state": {
                "type": "string"
              },
              "hostStatus": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "header"
        ]
      },
      "removeReservationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              }
            },
            "required": [
              "code"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "searchReservationRequest": {
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string"
          },
          "reservationId": {
            "type": "string"
          },
          "sevenRoomsProfileIds": {
            "type": "string"
          },
          "dateFrom": {
            "type": "string",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "format": "date"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "searchReservationResponse": {
        "type": "object",
        "properties": {
          "restaurantReservationList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "itineraryId": {
                  "type": "string"
                },
                "restaurantId": {
                  "type": "string"
                },
                "propertyId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "sevenRoomsProfileId": {
                  "type": "string"
                },
                "bookDate": {
                  "type": "string"
                },
                "reservationDateTime": {
                  "type": "string"
                },
                "numAdults": {
                  "type": "integer"
                },
                "numChildren": {
                  "type": "integer"
                },
                "comments": {
                  "type": "string"
                },
                "diningArea": {
                  "type": "string"
                },
                "agentInfo": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "string"
                    },
                    "agentType": {
                      "type": "string"
                    }
                  }
                },
                "state": {
                  "type": "string"
                },
                "hostStatus": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "confirmationNumber": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "loyaltyId": {
                  "type": "string"
                },
                "mgmId": {
                  "type": "string"
                },
                "modifyReservationLinkExternal": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "header"
        ]
      },
      "searchCustomerRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "sevenRoomsProfileIds": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "reservationId": {
            "type": "string"
          },
          "dateFrom": {
            "type": "string",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "searchCustomerResponse": {
        "type": "object",
        "properties": {
          "restaurantCustomerList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "address_2": {
                  "type": "string"
                },
                "anniversary_day": {
                  "type": "string"
                },
                "anniversary_month": {
                  "type": "string"
                },
                "avg_rating": {
                  "type": "number"
                },
                "birthday_alt_day": {
                  "type": "string"
                },
                "birthday_alt_month": {
                  "type": "string"
                },
                "birthday_day": {
                  "type": "string"
                },
                "birthday_month": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "client_tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string"
                      },
                      "tag_display": {
                        "type": "string"
                      },
                      "group_display": {
                        "type": "string"
                      },
                      "group": {
                        "type": "string"
                      },
                      "tag": {
                        "type": "string"
                      }
                    }
                  }
                },
                "company": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "deleted": {
                  "type": "boolean"
                },
                "email": {
                  "type": "string"
                },
                "email_alt": {
                  "type": "string"
                },
                "external_user_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "has_billing_profile": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "is_contact_private": {
                  "type": "boolean"
                },
                "is_one_time_guest": {
                  "type": "boolean"
                },
                "last_name": {
                  "type": "string"
                },
                "loyalty_id": {
                  "type": "string"
                },
                "loyalty_rank": {
                  "type": "integer"
                },
                "loyalty_tier": {
                  "type": "string"
                },
                "marketing_opt_in": {
                  "type": "boolean"
                },
                "marketing_opt_in_ts": {
                  "type": "string"
                },
                "notes": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "phone_number_alt": {
                  "type": "string"
                },
                "phone_number_alt_locale": {
                  "type": "string"
                },
                "phone_number_locale": {
                  "type": "string"
                },
                "postal_code": {
                  "type": "string"
                },
                "private_notes": {
                  "type": "string"
                },
                "sevenroomsCustProfileId": {
                  "type": "string"
                },
                "salutation": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "total_cancellations": {
                  "type": "integer"
                },
                "total_covers": {
                  "type": "integer"
                },
                "total_noshows": {
                  "type": "integer"
                },
                "total_spend": {
                  "type": "number"
                },
                "total_spend_per_cover": {
                  "type": "number"
                },
                "total_spend_per_visit": {
                  "type": "number"
                },
                "total_visits": {
                  "type": "integer"
                },
                "updated": {
                  "type": "string"
                },
                "updatedBy": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "venue_group_id": {
                  "type": "string"
                },
                "venue_stats": {
                  "type": "object",
                  "properties": {
                    "<venue_id>": {
                      "type": "object",
                      "properties": {
                        "total_spend_local_per_cover": {
                          "type": "number"
                        },
                        "last_visit_date": {
                          "type": "string"
                        },
                        "total_cancellations": {
                          "type": "integer"
                        },
                        "total_covers": {
                          "type": "integer"
                        },
                        "avg_rating": {
                          "type": "integer"
                        },
                        "total_spend_per_cover": {
                          "type": "number"
                        },
                        "total_spend": {
                          "type": "number"
                        },
                        "booked_by_names": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "total_noshows": {
                          "type": "integer"
                        },
                        "num_ratings": {
                          "type": "integer"
                        },
                        "total_spend_per_visit": {
                          "type": "number"
                        },
                        "total_spend_local": {
                          "type": "number"
                        },
                        "total_spend_local_per_visit": {
                          "type": "number"
                        },
                        "total_visits": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "associateReservationRequest": {
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "loyaltyId": {
            "type": "string"
          },
          "mgmId": {
            "type": "string"
          }
        }
      },
      "associateReservationResponse": {
        "type": "object",
        "properties": {
          "restaurantReservation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "itineraryId": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "propertyId": {
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "sevenRoomsProfileId": {
                "type": "string"
              },
              "bookDate": {
                "type": "string"
              },
              "reservationDateTime": {
                "type": "string"
              },
              "numAdults": {
                "type": "integer"
              },
              "numChildren": {
                "type": "integer"
              },
              "agentInfo": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "agentType": {
                    "type": "string"
                  }
                }
              },
              "state": {
                "type": "string"
              },
              "hostStatus": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "confirmationNumber": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "loyaltyId": {
                "type": "string"
              },
              "mgmId": {
                "type": "string"
              },
              "modifyReservationLinkExternal": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "header"
        ]
      },
      "holdReservationRequest": {
        "type": "object",
        "properties": {
          "restaurantId": {
            "type": "string"
          },
          "reservationDateTime": {
            "type": "string"
          },
          "partySize": {
            "type": "string"
          },
          "accessPersistentId": {
            "type": "string"
          },
          "shiftPersistentId": {
            "type": "string"
          },
          "holdWaitTimeSec": {
            "type": "integer"
          }
        }
      },
      "holdReservationResponse": {
        "type": "object",
        "properties": {
          "restaurantId": {
            "type": "string"
          },
          "reservationDateTime": {
            "type": "string"
          },
          "partySize": {
            "type": "string"
          },
          "reservationHoldId": {
            "type": "string"
          },
          "accessPersistentId": {
            "type": "string"
          },
          "shiftPersistentId": {
            "type": "string"
          },
          "holdDurationSec": {
            "type": "integer"
          },
          "propertyId": {
            "type": "string"
          }
        }
      },
      "releaseReservationRequest": {
        "type": "object",
        "properties": {
          "restaurantId": {
            "type": "string"
          },
          "reservationHoldId": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "shiftPersistentId": {
            "type": "string"
          }
        }
      },
      "releaseReservationResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          }
        }
      },
      "sevenRoomsWebhookRequest": {
        "type": "object",
        "properties": {
          "entity_type": {
            "type": "string"
          },
          "event_type": {
            "type": "string"
          },
          "entity": {
            "type": "object",
            "properties": {
              "birthday_alt_day": {},
              "last_name": {
                "type": "string"
              },
              "client_tags": {
                "type": "array",
                "items": {
                  "required": [
                    "color",
                    "tag_display",
                    "group_display",
                    "group",
                    "tag"
                  ],
                  "type": "object",
                  "properties": {
                    "color": {
                      "type": "string"
                    },
                    "tag_display": {
                      "type": "string"
                    },
                    "group_display": {
                      "type": "string"
                    },
                    "group": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "string"
                    }
                  }
                }
              },
              "photo": {},
              "external_user_id": {},
              "loyalty_rank": {},
              "anniversary_month": {
                "type": "integer"
              },
              "birthday_day": {
                "type": "integer"
              },
              "city": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "anniversary_day": {
                "type": "integer"
              },
              "phone_number_locale": {
                "type": "string"
              },
              "total_spend_per_visit": {
                "type": "integer"
              },
              "total_visits": {
                "type": "integer"
              },
              "updated": {
                "type": "string"
              },
              "marketing_opt_in_ts": {},
              "company": {
                "type": "string"
              },
              "total_spend": {
                "type": "integer"
              },
              "loyalty_id": {},
              "gender": {
                "type": "string"
              },
              "avg_rating": {
                "type": "integer"
              },
              "has_billing_profile": {
                "type": "boolean"
              },
              "phone_number_alt": {
                "type": "string"
              },
              "is_one_time_guest": {
                "type": "boolean"
              },
              "address_2": {
                "type": "string"
              },
              "reference_code": {
                "type": "string"
              },
              "postal_code": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "phone_number_alt_locale": {
                "type": "string"
              },
              "marketing_opt_in": {
                "type": "boolean"
              },
              "salutation": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "photo_crop_info": {
                "type": "object"
              },
              "first_name": {
                "type": "string"
              },
              "total_cancellations": {
                "type": "integer"
              },
              "is_contact_private": {
                "type": "boolean"
              },
              "birthday_alt_month": {},
              "email_alt": {
                "type": "string"
              },
              "venue_group_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "birthday_month": {
                "type": "integer"
              },
              "total_covers": {
                "type": "integer"
              },
              "email": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "private_notes": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "deleted": {},
              "total_spend_per_cover": {
                "type": "integer"
              },
              "total_noshows": {
                "type": "integer"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "venue_stats": {
                "type": "object",
                "properties": {
                  "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJDQtOO6Cgw": {
                    "type": "object",
                    "properties": {
                      "total_spend_local_per_cover": {
                        "type": "integer"
                      },
                      "last_visit_date": {},
                      "total_cancellations": {
                        "type": "integer"
                      },
                      "total_covers": {
                        "type": "integer"
                      },
                      "total_spend_local": {
                        "type": "integer"
                      },
                      "total_spend_per_cover": {
                        "type": "integer"
                      },
                      "total_visits": {
                        "type": "integer"
                      },
                      "total_spend": {
                        "type": "integer"
                      },
                      "booked_by_names": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "total_noshows": {
                        "type": "integer"
                      },
                      "num_ratings": {
                        "type": "integer"
                      },
                      "total_spend_per_visit": {
                        "type": "integer"
                      },
                      "total_spend_local_per_visit": {
                        "type": "integer"
                      },
                      "avg_rating": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "address": {
                "type": "string"
              },
              "created": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "loyalty_tier": {}
            }
          },
          "updates": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "reservationsImportResponse": {
        "type": "object",
        "properties": {
          "reservationStat": {
            "type": "object",
            "properties": {
              "insertSuccessCount": {
                "type": "integer"
              },
              "updateSuccessCount": {
                "type": "integer"
              },
              "insertFailureCount": {
                "type": "integer"
              },
              "updateFailureCount": {
                "type": "integer"
              }
            },
            "required": [
              "insertSuccessCount",
              "updateSuccessCount",
              "insertFailureCount",
              "updateFailureCount"
            ]
          }
        },
        "required": [
          "reservationStat"
        ]
      },
      "customersImportResponse": {
        "type": "object",
        "properties": {
          "customerStat": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "restaurantId": {
                "type": "string"
              },
              "isDBMocked": {
                "type": "string"
              },
              "updatedSince": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "restaurantId"
            ]
          }
        },
        "required": [
          "customerStat"
        ]
      },
      "sevenRoomsWebhookResponse": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "properties": {
              "channel": {
                "type": "string"
              },
              "clientOrigin": {
                "type": "string"
              },
              "traceId": {
                "type": "string"
              },
              "transactionId": {
                "type": "string"
              },
              "status": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {}
                  }
                },
                "required": [
                  "code",
                  "messages"
                ]
              }
            },
            "required": [
              "channel",
              "clientOrigin",
              "traceId",
              "transactionId",
              "status"
            ]
          }
        }
      },
      "TypeAheadResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "array",
            "description": "Name sorted results key value pair of id and names",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id of the matching Restaurant"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the matching Restaurant, ignores case"
                }
              }
            }
          }
        }
      },
      "PagedResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "count of objects in the response"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Actual object payload"
            }
          },
          "pageable": {
            "type": "object",
            "description": "Description of current page pointer, any sort and its size",
            "properties": {
              "page": {
                "type": "integer",
                "description": "page number"
              },
              "size": {
                "type": "integer",
                "description": "page size"
              },
              "sort": {
                "type": "object",
                "description": "Ignore, currently not implemented"
              }
            }
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "payload": {
            "type": "object",
            "description": "Response data, actual object in the response. Expect a PagedResponse, Restaurant or CuisineType object or an array as per the API.    "
          }
        }
      },
      "CuisineType": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AuditInfo"
          }
        }
      },
      "AuditInfo": {
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "Region": {
        "type": "string",
        "description": "Property Region",
        "enum": [
          "ALL",
          "LV",
          "NJ",
          "DT",
          "DC",
          "MA",
          "MMS",
          "OH",
          "NY"
        ]
      },
      "SevenRoomsData": {
        "type": "object",
        "description": "Sevenrooms specific attributes",
        "properties": {
          "venueId": {
            "type": "string",
            "description": "Sevenrooms venue ID"
          },
          "venueGroupId": {
            "type": "string"
          },
          "cutOffDate": {
            "type": "string",
            "description": "Date when this restaurant becomes available in Sevenrooms",
            "format": "date-time"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "crossStreet": {
            "type": "string"
          },
          "neighbourhood": {
            "type": "string"
          },
          "municipality": {
            "type": "string"
          },
          "municipalityId": {
            "type": "string"
          },
          "venueClass": {
            "type": "string"
          },
          "venueURLKey": {
            "type": "string"
          },
          "venueGroupName": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "primaryColor": {
            "type": "string"
          },
          "secondaryColor": {
            "type": "string"
          },
          "gridEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "internalName": {
            "type": "string"
          },
          "agentText": {
            "type": "string"
          },
          "policy": {
            "type": "string"
          },
          "whiteLogo": {
            "type": "string"
          },
          "blackLogo": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "membershipEnabled": {
            "type": "boolean"
          },
          "fullDiningBackend": {
            "type": "boolean"
          },
          "currencyCode": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "programs": {
            "type": "array",
            "description": "Daily notes from Sevenrooms",
            "items": {
              "$ref": "#/components/schemas/Program"
            }
          }
        }
      },
      "Program": {
        "type": "object",
        "properties": {
          "pricePoint": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "shiftCategoriesDisplay": {
            "type": "string"
          },
          "spendPolicy": {
            "type": "string"
          },
          "childPolicy": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Program Id from Seven rooms"
          },
          "tableHoldingPolicy": {
            "type": "string"
          },
          "cuisine": {
            "type": "string"
          },
          "venueId": {
            "type": "string",
            "description": "Restaurant venue ID the program applies"
          },
          "title": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "dressCode": {
            "type": "string"
          }
        }
      },
      "Restaurant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Restaurant ID | Primary key | Will have data cutover from Phoenix for existing restaurant ID and auto generate for new entities"
          },
          "propertyId": {
            "type": "string",
            "description": "Property Id the of the property the restaurant is within"
          },
          "region": {
            "$ref": "#/components/schemas/Region"
          },
          "corporateSortOrder": {
            "description": "Needed for ICE",
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "Restaurant name"
          },
          "agentText": {
            "type": "string"
          },
          "restaurantKey": {
            "type": "string"
          },
          "averagePrice": {
            "type": "string"
          },
          "shift": {
            "type": "string"
          },
          "sheetId": {
            "type": "string"
          },
          "maxPartySize": {
            "type": "integer",
            "description": "Max number of guests per reservation"
          },
          "sevenRoomsData": {
            "$ref": "#/components/schemas/SevenRoomsData"
          },
          "bookableOnline": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "viewableOnline": {
            "type": "boolean"
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AuditInfo"
          },
          "agentSettingsToCustomer": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-ms-export-notes": [
    "The exported API contains schemas that aren't of content type 'application/vnd.oai.openapi.components+json', and are hence not exported as OpenAPI components."
  ]
}