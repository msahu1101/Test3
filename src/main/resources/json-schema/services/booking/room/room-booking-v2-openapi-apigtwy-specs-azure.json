{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "Room Booking Core Services",
    "description": "Core services for room booking flow"
  },
  "servers": [
    {
      "url": "https://rbs-uw-wa-d.azurewebsites.net",
      "description": "dev"
    },
    {
      "url": "https://rbs-uw-wa-q.azurewebsites.net",
      "description": "qa"
    },
    {
      "url": "https://rbs-uw-wa-t.azurewebsites.net",
      "description": "stage"
    },
    {
      "url": "https://rbs-uw-wa-r.azurewebsites.net",
      "description": "preprod"
    },
    {
      "url": "https://rbs-uw-wa-g.azurewebsites.net",
      "description": "green"
    },
    {
      "url": "https://rbs-uw-wa-p.azurewebsites.net",
      "description": "prod"
    }
  ],
  "paths": {
    "/v2/availability/calendar": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Room pricing and availability for each day in a calendar period.",
        "deprecated": true,
        "description": "Returns lowest room rate for each day for a calendar period for a specific property.  <ul> <li>Offer prices are overlayed on top of best available prices when program Id is passed i.e., Best available prices are returned for days when program price is not available. Clients can control this behavior using excludeNonOffer flag. When excludeNonOffer is true, days for which program price is not available is marked sold-out.</li> <li>When program prices are not requested, only application status codes in response are: AVAILABLE, SOLD-OUT, NO-ARRIVAL</li> <li>When program prices are requested, application status codes in response are: OFFER, AVAILABLE, SOLD-OUT, NO-ARRIVAL.  â€˜OFFERâ€™ indicates the dates on which requested program is available. Programs can have partial availability. So, days on which program is not available, status will not be â€œOFFERâ€™</li> <ul>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          },
          {
            "$ref": "#/components/parameters/promoCode"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/redemptionCode"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "roomTypeIds",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "41d103f3-db1e, 4ead-891a-ea690500ee20",
            "description": "Room Type GUIDs. Accepts a list of comma separated room type Ids."
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Start date for the calendar period. Format - yyyy-MM-dd"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "End date for the calendar period. Format - yyyy-MM-dd"
          },
          {
            "name": "numAdults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Number of adults"
          },
          {
            "name": "numChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Number of children"
          },
          {
            "name": "excludeNonOffer",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Applicable only when programId or promoCode is passed. Flag set to true will not return prices for the days which are not available for the requested program"
          },
          {
            "name": "ignoreChannelMargins",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates whether the requestor wants the margins be excluded from pricing calculations even if margins are configured for the channel from where the request originated"
          },
          {
            "name": "numRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The number of rooms the customer is looking for."
          },
          {
            "name": "operaConfirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The field is used to identify the reservation being modified."
          },
          {
            "name": "customerDominantPlay",
            "in": "query",
            "required": false,
            "example": "Poker",
            "schema": {
              "type": "string",
              "enum": [
                "Slot",
                "Table",
                "Poker"
              ]
            },
            "description": "The customer dominant play type"
          },
          {
            "name": "customerRank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The customer rank for the customer"
          },
          {
            "name": "isGroupCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Applicable only when programId passed. Flag should be set to true If the passed program id is of type Group. Defaulted to false."
          },
          {
            "name": "perpetualPricing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to indicate if perpetual offer is applicable for the trip. Perpetual offer set to true requires mlifeNumber. Defaulted to false."
          },
          {
            "name": "itineraryIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of itinerary ids to take into account while performing pricing operation. Accept list of comma separated ids.",
            "example": "12345, 76888, 45678"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarPriceResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response. Possible error codes are _invalid_request, _offer_not_available, _offer_not_eligible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/availability/calendar": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Room pricing and availability for each day in a calendar period based on length of stay",
        "description": "This api takes into account the total length of stay and provides lowest total price for the trip, assuming each calenar day as the start date of the trip. <ul>\n  <li>Determine if user eligible for perpetual pricing:<br>\n  if the JWT is logged in user guest token, read com.mgm.loyalty.perpetual_eligible claim boolean value<br>\n  if the JWT is non-logged in user guest token, Use the value from perpetualPricing input flag</li>\n  <li>If user is eligible for perpetual pricing customerId is required</li>\n  <li>If programId is not provided, then best available pricing returned for that property</li>\n  <li>If programId is supplied, return the program pricing for that property</li>\n  <li>For all scenarios,availaibility status codes in response are: AVAILABLE, SOLD-OUT. The status indicates availability, taking into account the total number of nights in the trip.</li>\n</ul>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          },
          {
            "$ref": "#/components/parameters/promoCode"
          },
          {
            "$ref": "#/components/parameters/promo"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/redemptionCode"
          },
          {
            "$ref": "#/components/parameters/emr"
          },
          {
            "$ref": "#/components/parameters/ecid"
          },
          {
            "$ref": "#/components/parameters/perpetualEligiblePropertyCodes"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "roomTypeIds",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "41d103f3-db1e, 4ead-891a-ea690500ee20",
            "description": "Room Type GUIDs. Accepts a list of comma separated room type Ids."
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Start date for the calendar period. Format - yyyy-MM-dd"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "End date for the calendar period. Format - yyyy-MM-dd"
          },
          {
            "name": "numAdults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Number of adults"
          },
          {
            "name": "numChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Number of children"
          },
          {
            "name": "ignoreChannelMargins",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates whether the requestor wants the margins be excluded from pricing calculations even if margins are configured for the channel from where the request originated"
          },
          {
            "name": "numRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The number of rooms the customer is looking for."
          },
          {
            "name": "operaConfirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The field is used to identify the reservation being modified."
          },
          {
            "name": "customerDominantPlay",
            "in": "query",
            "required": false,
            "example": "Poker",
            "schema": {
              "type": "string",
              "enum": [
                "Slot",
                "Table",
                "Poker"
              ]
            },
            "description": "The customer dominant play type"
          },
          {
            "name": "customerRank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The customer rank for the customer"
          },
          {
            "name": "isGroupCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Applicable only when programId passed. Flag should be set to true If the passed program id is of type Group. Defaulted to false."
          },
          {
            "name": "perpetualPricing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Read this value where JWT is a non-logged in user guest token like ICE use case. Perpetual offer set to true requires customerId. Defaulted to false."
          },
          {
            "name": "itineraryIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of itinerary ids to take into account while performing pricing operation. Accept list of comma separated ids.",
            "example": "12345, 76888, 45678"
          },
          {
            "name": "totalNights",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Total number of nights in the trip."
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarPriceWithLoSResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response. Possible error codes are _invalid_request, _offer_not_available, _offer_not_eligible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/availability/trip": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Returns pricing and availability for a given trip.",
        "deprecated": true,
        "description": "<ul>\n <li> Returns pricing and availability for a given trip. Multi-rate plans (MRD) can be requested using \"enableMrd\" flag. When enabledMrd is true and multi-rate plans are available, availability by program will be included in \"ratePlans\" object in the response. If enableMrd is false or multi-rate plans are not available for the user data, best available pricing will be included in \"availability\" object in the response. If pricing is requested for a program by supplying programId or promoCode, rate plans will be automatically disabled and program availability will be available in \"availability\" object in the response.\n </li>\n <li>\n  A flag named \"unavailable\" will be set to true if all dates for a room are unavailable or there is partial availability.\n </li>\n <li>\n \"includeSoldOutRooms\" flag set as true, will return sold out rooms id and unavailability reason in the response. The unavailabilityReason will be displayed for each trip date. All the other pricing fields will not be included.\n </li>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/promoCode"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/redemptionCode"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "checkInDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-In date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "checkOutDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-Out date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "numAdults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Number of adults"
          },
          {
            "name": "numChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Number of children"
          },
          {
            "name": "enableMrd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Flag to enable multi-rate plans"
          },
          {
            "name": "ignoreChannelMargins",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates whether the requestor wants the margins be excluded from pricing calculations even if margins are configured for the channel from where the request originated"
          },
          {
            "name": "numRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The number of rooms the customer is looking for."
          },
          {
            "name": "operaConfirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The field is used to identify the reservation being modified."
          },
          {
            "name": "customerDominantPlay",
            "in": "query",
            "required": false,
            "example": "Poker",
            "schema": {
              "type": "string",
              "enum": [
                "Slot",
                "Table",
                "Poker"
              ]
            },
            "description": "The customer dominant play type"
          },
          {
            "name": "customerRank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The customer rank for the customer"
          },
          {
            "name": "includeSoldOutRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Flag set to true, will return sold out rooms as well in response."
          },
          {
            "name": "excludeNonOffer",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Applicable only when programId or promoCode is passed. Flag set to true will not return prices for the days which are not available for the requested program."
          },
          {
            "name": "isGroupCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Applicable only when programId passed. Flag should be set to true If the passed program id is of type Group. Defaulted to false."
          },
          {
            "name": "perpetualPricing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to indicate if perpetual offer is applicable for the trip. Perpetual offer set to true requires mlifeNumber. Defaulted to false."
          },
          {
            "name": "itineraryIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of itinerary ids to take into account while performing pricing operation. Accept list of comma separated ids.",
            "example": "12345, 76888, 45678"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomAvailabilityResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response. Possible error codes are _invalid_request, _offer_not_available, _offer_not_eligible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/availability/trip": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Returns pricing and availability for a given trip.",
        "description": "<ul> <li>Determines if user eligible for perpetual pricing\n  <ul>\n    <li>If the JWT is guest token, read com.mgm.loyalty.perpetual_eligible claim boolean value</li>\n    <li>If the JWT is non-guest token, uses the value from perpetualPricing boolean param</li></li>\n  </ul>\n\n<li>If user is NOT eligible for perpetual pricing AND programId is not supplied, returns multiple rate plans for that property. \"ratePlans\" array will contains multiple elements based on number of rate plans available</li> <li>If user is NOT eligible for perpetual pricing AND programId is supplied</li>\n  <ul>\n    <li>If includeDefaultRatePlans=true, will return program prices along with default MRD rate plans in \"ratePlans\" object. Program availability will take the first position in \"ratePlans\" array</li>\n    <li>If includeDefaultRatePlans=false, will return the program pricing only within â€œratePlansâ€œ attribute in the response i.e., ratePlans array will contain only 1 element</li></li>\n  </ul>\n<li>In HDE packaging booking flow, \"includeDefaultRatePlans\" can be set to false by GQL or calling application to get required behavior of not showing default rate plans.</li> <li>If user is eligible for perpetual pricing && programId is not provided, then PO pricing is returned for that property. \"ratePlans\" array will contain only 1 element which is for perpetual pricing</li> <li>If user is eligible for perpetual pricing && programId is provided, then program pricing is returned for that property. \"ratePlans\" array will contain only 1 element which is for supplied program</li>\n<li>Response scenarios are documented here with web example - https://mgmdigitalventures.atlassian.net/wiki/spaces/UCP/pages/1323368681/Trip+Availability+API+Response</li> <li>\n  A flag named \"unavailable\" will be set to true if all dates for a room are unavailable or there is partial availability.\n</li>\n <li>\n \"includeSoldOutRooms\" flag set as true, will return sold out rooms id and unavailability reason in the response. The unavailabilityReason will be displayed for each trip date. All the other pricing fields will not be included.\n</li> </ul>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/promoCode"
          },
          {
            "$ref": "#/components/parameters/promo"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/redemptionCode"
          },
          {
            "$ref": "#/components/parameters/emr"
          },
          {
            "$ref": "#/components/parameters/ecid"
          },
          {
            "$ref": "#/components/parameters/perpetualEligiblePropertyCodes"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "checkInDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-In date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "checkOutDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-Out date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "numAdults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Number of adults"
          },
          {
            "name": "numChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Number of children"
          },
          {
            "name": "ignoreChannelMargins",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates whether the requestor wants the margins be excluded from pricing calculations even if margins are configured for the channel from where the request originated"
          },
          {
            "name": "numRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The number of rooms the customer is looking for."
          },
          {
            "name": "operaConfirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The field is used to identify the reservation being modified by opera confirmation number."
          },
          {
            "name": "confirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The field is used to identify the reservation being modified by acrs confirmation number."
          },
          {
            "name": "customerDominantPlay",
            "in": "query",
            "required": false,
            "example": "Poker",
            "schema": {
              "type": "string",
              "enum": [
                "Slot",
                "Table",
                "Poker"
              ]
            },
            "description": "The customer dominant play type"
          },
          {
            "name": "customerRank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The customer rank for the customer"
          },
          {
            "name": "includeSoldOutRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Flag set to true, will return sold out rooms as well in response."
          },
          {
            "name": "includeDefaultRatePlans",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Flag is applicable only when program is specified and user is non-PO. Setting this flag to true will return program prices along with default MRD rate plans in \"ratePlans\" object. Setting this flag to false will return program prices alone in \"availability\" object"
          },
          {
            "name": "isGroupCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Applicable only when programId passed. Flag should be set to true If the passed program id is of type Group. Defaulted to false."
          },
          {
            "name": "perpetualPricing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to indicate if perpetual offer is applicable for the trip. Perpetual offer set to true requires mlifeNumber. Defaulted to false."
          },
          {
            "name": "programIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of program ids for which pricing should be included. Number of programs cannot be more than 2. Order of programs in the response will follow the order in which program ids are sent. See JIRA BOOKSVC-35686 for all use cases."
          },
          {
            "name": "itineraryIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of itinerary ids to take into account while performing pricing operation. Accept list of comma separated ids.",
            "example": "12345, 76888, 45678"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomAvailabilityTripResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response. Possible error codes are _invalid_request, _offer_not_available, _offer_not_eligible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/availability/grid": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Returns pricing and availability for a given trip.",
        "description": "<ul> <li>Determines if user eligible for perpetual pricing <ul> <li>If the JWT is guest token, read com.mgm.loyalty.perpetual_eligible claim boolean value</li> <li>If the JWT is non-guest token, uses the value from perpetualPricing boolean param</li></li> </ul>\n<li>If user is NOT eligible for perpetual pricing AND programId is not supplied, returns multiple rate plans for that property. \"ratePlans\" array will contains multiple elements based on number of rate plans available</li> <li>If user is NOT eligible for perpetual pricing AND programId is supplied</li> <ul> <li>If includeDefaultRatePlans=true, will return program prices along with default MRD rate plans in \"ratePlans\" object. Program availability will take the first position in \"ratePlans\" array</li> <li>If includeDefaultRatePlans=false, will return the program pricing only within â€œratePlansâ€œ attribute in the response i.e., ratePlans array will contain only 1 element</li></li> </ul> <li>In HDE packaging booking flow, \"includeDefaultRatePlans\" can be set to false by GQL or calling application to get required behavior of not showing default rate plans.</li> <li>If user is eligible for perpetual pricing && programId is not provided, then PO pricing is returned for that property. \"ratePlans\" array will contain only 1 element which is for perpetual pricing</li> <li>If user is eligible for perpetual pricing && programId is provided, then program pricing is returned for that property. \"ratePlans\" array will contain only 1 element which is for supplied program</li>\n<li>Response scenarios are documented here with web example - https://mgmdigitalventures.atlassian.net/wiki/spaces/UCP/pages/1323368681/Trip+Availability+API+Response</li> <li> A flag named \"unavailable\" will be set to true if all dates for a room are unavailable or there is partial availability. </li> <li> \"includeSoldOutRooms\" flag set as true, will return sold out rooms id and unavailability reason in the response. The unavailabilityReason will be displayed for each trip date and It will display the price of the room, even if the purchase is available. </li> <li> let's trip duration is 3 days if user is not available for one day and the remaining two days the user is available, and other user will get to know the particular one day room is available, then the user can plan accordingly. </li> </ul>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/promoCode"
          },
          {
            "$ref": "#/components/parameters/promo"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/redemptionCode"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "checkInDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-In date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "checkOutDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-Out date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "numAdults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Number of adults"
          },
          {
            "name": "numChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Number of children"
          },
          {
            "name": "ignoreChannelMargins",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates whether the requestor wants the margins be excluded from pricing calculations even if margins are configured for the channel from where the request originated"
          },
          {
            "name": "numRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The number of rooms the customer is looking for."
          },
          {
            "name": "operaConfirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The field is used to identify the reservation being modified by opera confirmation number."
          },
          {
            "name": "confirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The field is used to identify the reservation being modified by acrs confirmation number."
          },
          {
            "name": "groupCnfNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerDominantPlay",
            "in": "query",
            "required": false,
            "example": "Poker",
            "schema": {
              "type": "string",
              "enum": [
                "Slot",
                "Table",
                "Poker"
              ]
            },
            "description": "The customer dominant play type"
          },
          {
            "name": "customerRank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The customer rank for the customer"
          },
          {
            "name": "includeSoldOutRooms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Flag set to true, will return sold out rooms as well in response."
          },
          {
            "name": "includeDefaultRatePlans",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Flag is applicable only when program is specified and user is non-PO. Setting this flag to true will return program prices along with default MRD rate plans in \"ratePlans\" object. Setting this flag to false will return program prices alone in \"availability\" object"
          },
          {
            "name": "isGroupCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Applicable only when programId passed. Flag should be set to true If the passed program id is of type Group. Defaulted to false."
          },
          {
            "name": "perpetualPricing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to indicate if perpetual offer is applicable for the trip. Perpetual offer set to true requires mlifeNumber. Defaulted to false."
          },
          {
            "name": "programIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of program ids for which pricing should be included. Number of programs cannot be more than 2. Order of programs in the response will follow the order in which program ids are sent. See JIRA BOOKSVC-35686 for all use cases."
          },
          {
            "name": "itineraryIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of itinerary ids to take into account while performing pricing operation. Accept list of comma separated ids.",
            "example": "12345, 76888, 45678"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomAvailabilityTripResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response. Possible error codes are _invalid_request, _offer_not_available, _offer_not_eligible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/availability/components": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Returns component available for a given trip, room and property.",
        "description": "<ul>\n <li> Returns availabile components for a given trip, room and property.\n </li>\n <li> A component is considered to be available for a trip if and only if available for all days of the trip.\n </li>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "name": "roomTypeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "GUID of the room"
          },
          {
            "name": "checkInDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-In date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "checkOutDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-Out date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "mlifeNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomComponentsResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/availability/resorts": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Resorts pricing and availability.",
        "description": "Returns lowest price available for each of the resorts for the trip parameters supplied i.e., checkInDate, checkOutDate and numGuests. Response also includes sold-out resorts. API supports pertualPricing and participatingResortsOnly boolean parameters. <ul> <li>Requests with perpetualPricing=true and without program, best pricing will be returned.</li> <li>Requests without perpetualPricing and participatingResortsOnly flags and with segment or participating program, system determines all the participating programs in that segment and program prices are returned for those properties along with multi rate best available prices for remaining properties. Incase of any of the program prices are SOLDOUT, then multi rate best available prices are returned for those properties as well.</li> <li>Requests without perpetualPricing and participatingResortsOnly flags and with single-property program, then program prices for that particular property along with multi rate best available prices for remaining properties are returned. Incase supplied program is SOLDOUT then multi rate best available prices are returned for that property as well.</li> <li>Requests without perpetualPricing and participatingResortsOnly flgs and program, multi rate best available prices are returned.</li> <li>Requests with participatingResortsOnly=true and with segment or participating program or single-property program, will return only participating resorts' program pricing and there is no fallback, even for SOLDOUT resorts.</li> </ul>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/redemptionCode"
          },
          {
            "$ref": "#/components/parameters/promo"
          },
          {
            "$ref": "#/components/parameters/emr"
          },
          {
            "$ref": "#/components/parameters/ecid"
          },
          {
            "$ref": "#/components/parameters/perpetualEligiblePropertyCodes"
          },
          {
            "name": "checkInDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-In date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "checkOutDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Check-Out date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "numAdults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Number of adults"
          },
          {
            "name": "enableJwb",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "enableJwb header to be set as true, if a transient website visitor opted into JWB"
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Room program GUID or Segment GUID"
          },
          {
            "name": "segment",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Segment code based on opera rate plan code e.g., ZAAART"
          },
          {
            "name": "perpetualPricing",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this flag is true, API will find the default perpetual program for each property and returns the price of lowest room available for the perpetual program. Best available prices will be returned for properties without default perpetual program. If this flag is true for non-logged-in user, it will result in an error."
          },
          {
            "name": "propertyIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Property GUIDs to fetch results of a specific property or a set of properties incase of perpetualPricing flag is true."
          },
          {
            "name": "itineraryIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "List of itinerary ids to take into account while performing pricing operation. Accept list of comma separated ids.",
            "example": "12345, 76888, 45678"
          },
          {
            "name": "participatingResortsOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "This flag will be sent as true to get participating resorts only for HDE packaging bookings"
          },
          {
            "name": "perpetualEligiblePropertyIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "A list of perpetual eligible property ids"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResortPriceResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/availability/resortswithtax": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Resorts pricing and availability With tax and chrages.",
        "description": "Returns lowest price available for each of the resorts for the trip parameters supplied i.e., checkInDate, checkOutDate and numGuests. Response also includes sold-out resorts. API supports pertualPricing and participatingResortsOnly boolean parameters. <ul> <li>Requests with perpetualPricing=true and without program, best pricing will be returned.</li> <li>Requests without perpetualPricing and participatingResortsOnly flags and with segment or participating program, system determines all the participating programs in that segment and program prices are returned for those properties along with multi rate best available prices for remaining properties. Incase of any of the program prices are SOLDOUT, then multi rate best available prices are returned for those properties as well.</li> <li>Requests without perpetualPricing and participatingResortsOnly flags and with single-property program, then program prices for that particular property along with multi rate best available prices for remaining properties are returned. Incase supplied program is SOLDOUT then multi rate best available prices are returned for that property as well.</li> <li>Requests without perpetualPricing and participatingResortsOnly flgs and program, multi rate best available prices are returned.</li> <li>Requests with participatingResortsOnly=true and with segment or participating program or single-property program, will return only participating resorts' program pricing and there is no fallback, even for SOLDOUT resorts.</li> </ul>",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiDateResortPriceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDateResortPricesResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/availability/package2Components": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Filters out the components matching with input nRProducts.",
        "description": "Returns a list of only those available components matching with the given nRProduct codes. The response will contain the tax & charges details as well.",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageComponentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageComponentResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/availability/packageComponents": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Filters out the components matching with input nRProducts.",
        "description": "Returns a list of only those available components matching with the given nRProduct codes. The response will contain the tax & charges details as well.",
        "tags": [
          "Room Pricing & Availability"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PckgeComponentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PckgeComponentResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/programs/applicable": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Searches for applicable program for rooms based on given input parameters.",
        "description": "",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "roomTypeId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Room type GUID"
          },
          {
            "name": "bookDate",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Book date. Format - yyyy-MM-dd"
          },
          {
            "name": "travelDate",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Travel date. Format - yyyy-MM-dd"
          },
          {
            "name": "filterBookable",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates whether the applicability check should include checking that the program is bookable by the calling channel"
          },
          {
            "name": "filterViewable",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates whether the applicability check should include checking that the program is viewable by the calling channel."
          },
          {
            "name": "checkInDate",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Check-In date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "checkOutDate",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Check-Out date for the trip. Format - yyyy-MM-dd"
          },
          {
            "name": "numAdults",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Number of adults"
          },
          {
            "name": "numChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Number of children"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicableProgramResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/customer/offers": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Searches for room offers for given customer.",
        "deprecated": true,
        "description": "",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "name": "propertyId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "notRolledToSegments",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "notSorted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomerRoomOffersResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/customer/offers": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read",
              "openid"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Searches for room offers available for given customer across various data sources.",
        "description": "Searches for room offers available for given customer across various data sources. Please refer https://mgmdigitalventures.atlassian.net/wiki/spaces/UCP/pages/1661830070/RBS+-+Room+Programs+List+Requirements for all scenarios.",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/emr"
          },
          {
            "$ref": "#/components/parameters/ecid"
          },
          {
            "$ref": "#/components/parameters/perpetualEligiblePropertyCodes"
          },
          {
            "name": "propertyId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "To be used for filtering. When property guid is supplied, output will be filtered to return programs only from that property."
          },
          {
            "name": "region",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "LV",
                "NONLV",
                "ALL"
              ],
              "description": "To be used to filter programs by region. Value of \"ALL\" or not populating this field will include all properties/regions."
            }
          },
          {
            "name": "perpetualPricing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to indicate if user is eligible for perpetual pricing. Will be used by ICE channel to request perpetual programs for qualified customers. customerId and mlifeNumber should always be populated when setting this flag to true."
          },
          {
            "name": "onlyPoPrograms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to request only PO programs available for the customers. Other programs like curated programs, patron programs will be excluded from the response"
          },
          {
            "name": "onlyPoPatronPrograms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to request only PO and Patron programs available for the customers. Other programs like curated programs will be excluded from the response"
          },
          {
            "name": "patronFirst",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to request the Patron programs available at the top for the customers"
          },
          {
            "name": "resortPricing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to request the PO programs for the customers"
          },
          {
            "name": "includeNonBookableOnline",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean to include non bookable online curated offers from response"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomerRoomOffersV3Response"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/programs/default-perpetual": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Searches for perpetual offers for given customer.",
        "description": "",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Customer ID for logged-in user. Perpetual offers will be returned for the customer Id provided."
          },
          {
            "name": "propertyIds",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Comma separated Property GUIDs, If no property Id is provided, all property Ids will be considered."
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerpetualProgram"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/offer/validate": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Checks a room program if it's valid and eligible.",
        "description": "Validate a room program ID or promo code to confirm if the program Id/promoCode is available and eligible to be used for the user. Eligibility check is done to avoid program misuse. Response contains two different flags - valid, eligible. It's broken into 2 flags for channels to message users accordingly. User should be allowed to use the program when both the flags from response (valid and eligible) are true. Response also contains patronProgram flag, this specify whether the offer has Patron Promo Id or not. Response also contains hdePackage flag, this specify whether the program is part of any HDE package or not. If this is true and the associated HDE package is not active then the valid flag will be set to false. <ul>\n <li>Both programId and promoCode cannot be empty. Request will be considered invalid in this case.\n </li>\n </ul>",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/programId"
          },
          {
            "$ref": "#/components/parameters/promoCode"
          },
          {
            "$ref": "#/components/parameters/promo"
          },
          {
            "$ref": "#/components/parameters/mlifeNumber"
          },
          {
            "$ref": "#/components/parameters/propertyId"
          },
          {
            "$ref": "#/components/parameters/redemptionCode"
          },
          {
            "$ref": "#/components/parameters/emr"
          },
          {
            "$ref": "#/components/parameters/ecid"
          },
          {
            "$ref": "#/components/parameters/perpetualEligiblePropertyCodes"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomProgramValidateResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/offers": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Retrieve Room Offers of type Program, Rateplan or GroupProgram based on input criteria.",
        "description": "Retrieve any type of room offers such as Program, Group Program or Rateplans based on the input criteria as program ids, start and end date combination. We need a start and end date mandatory to retrieve any group programs from ACRS. Hence dates are mandatory input parameters in this API along with programIds. <ul>\n <li>programId, startDate and endDate cannot be empty. Request will be considered invalid in this case.\n </li>\n </ul>",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "programIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "program id field"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Start date for the calendar period. Format - yyyy-MM-dd"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "End date for the calendar period. Format - yyyy-MM-dd"
          },
          {
            "name": "promoSearch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "This parameter will determine if promo details need to be displayed or rate plan."
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomOfferResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/segment/{segment}": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Finds and returns all programs part of the room segment.",
        "deprecated": true,
        "description": "Finds and returns all programs part of the room segment. Supports both GSE segment GUID and new segment codes",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "segment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomSegmentResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/segment": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Finds participating program ids for a given segment or by resolving segment from a given program id.",
        "description": "inds participating program ids for a given segment or by resolving segment from a given program id. Supports both GSE segment GUID and new segment codes. One of segment or programId is mandatory",
        "tags": [
          "Room Programs & Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "segment",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Segment Id or Code"
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Program ID which may be part of a segment"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomSegmentResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/save": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Saves room reservation in the source systems.",
        "description": "Saves room reservation in the source systems. The customer id and itinerary id is getting created in the endpoint.",
        "tags": [
          "Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomReservationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:create",
              "myvegas.code:read",
              "myvegas.code:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Creates room reservation in the source systems.",
        "description": "<li>Creates room reservation in the source systems.</li> <li>The itinerary id should be created before calling this endpoint.</li> <li>MyVegas related scopes should be sent in the request if the request contains myVegasPromoCode.</li>",
        "tags": [
          "Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/FraudAgentToken"
          },
          {
            "$ref": "#/components/parameters/UserAgent"
          },
          {
            "$ref": "#/components/parameters/ForwardedFor"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomReservationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update",
              "rooms.reservation:override"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Updates room reservation in the source systems.",
        "description": "",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoomReservationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:read",
              "rooms.reservation:read:elevated",
              "booking.room.resv:search"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Gets room reservation from the source systems.",
        "description": "Gets room reservation from the source systems based on confirmation number, first and last name. Since ICE channel needs to retrieve reservation with just confirmation number, an additional scope is added to make first and last name as optional when the scope exists in the JWT token.",
        "tags": [
          "Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/confirmationNumber"
          },
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cacheOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v4/reservation": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:create",
              "myvegas.code:read",
              "myvegas.code:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Creates room reservation in the source systems in payment widget flow.",
        "description": "<li>Creates room reservation in the source systems in payment widget flow.</li> <li>The itinerary id should be created before calling this endpoint.</li> <li>MyVegas related scopes should be sent in the request if the request contains myVegasPromoCode.</li>",
        "tags": [
          "Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/FraudAgentToken"
          },
          {
            "$ref": "#/components/parameters/UserAgent"
          },
          {
            "$ref": "#/components/parameters/ForwardedFor"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomReservationRequestV4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/party": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:create"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Creates a party room reservation in the source systems.",
        "description": "Creates a party room reservation in the source systems. For every room in party booking, a reservation object is returned in response. The flag \"splitCreditCardDetails\" is set to true is the same payment information is to be copied on all the individual reservations. The itinerary id should be created before calling this endpoint. In case of partial failures, the information is returned in the \"failedReservations\" array as part of the response.",
        "tags": [
          "Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePartyRoomReservationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePartyRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v4/reservation/party": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:create"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Creates a party room reservation in the source systems in payment widget flow.",
        "description": "Creates a party room reservation in the source systems in payment widget flow. For every room in party booking, a reservation object is returned in response. The flag \"splitCreditCardDetails\" is set to true is the same payment information is to be copied on all the individual reservations. The itinerary id should be created before calling this endpoint. In case of partial failures, the information is returned in the \"failedReservations\" array as part of the response.",
        "tags": [
          "Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePartyRoomReservationRequestV4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePartyRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/hold": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation.charges:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Holds the reservation in the source system.",
        "description": "Finds the Pricing details and calculates the room charges, taxes, fees and deposit based on various inputs and all applicable addons.This API will create a pending reservation in Amadeus CRS (if it is a Amadeus CRS migrated Property) when perpetualPricing is true and mlifeNo is passed",
        "tags": [
          "Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRoomChargesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateRoomChargesResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/cancel": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Cancels room reservation in the source systems.",
        "deprecated": true,
        "description": "Cancels room reservation which is part of given itinerary Id. <ul>\n <li>Itinerary Id is mandatory in the request</li>\n <li> Along with itinerary id, either reservation id or confirmation number muse be passed in the request.</li>\n</ul>",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRoomReservationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/reservation/cancel": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update",
              "rooms.reservation:update:elevated"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Cancels room reservation in the source systems.",
        "description": "Cancels room reservation based on the confirmation number passed in the request.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRoomReservationV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v4/reservation/cancel/preview": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update",
              "rooms.reservation:update:elevated"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Preview before cancel room reservation in the source systems for payment widget flow.",
        "description": "Preview before cancel room reservation based on the confirmation number passed in the request for payment widget flow.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPreviewV4Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v4/reservation/cancel/commit": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update",
              "rooms.reservation:update:elevated"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Cancels room reservation in the source systems for payment widget flow.",
        "description": "Cancels room reservation based on the confirmation number passed in the request for payment widget flow.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelReservationV4Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/reservation/cancelF1": {
      "post": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update",
              "rooms.reservation:update:elevated"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Updated the cancelled F1 room reservation in the inventory services.",
        "description": "Updated the cancelled F1 room reservation in the inventory services based on the confirmation number passed in the request.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRoomReservationV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/preview": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Preview room reservation for modify room reservation flow.",
        "description": "Preview the room reservation for modify room reservation flow. The itinerary id should be created before calling this endpoint. First and last names are optional when the request is made with guest JWT token, as these details will be fetched from given_name and family_name claims. roomRequests null indicate no change in room component; roomRequests [ ] indicate clearing all room components.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PremodifyPutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/commit": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Commit the previewed room reservation changes for modify room reservation flow.",
        "description": "Commit the previewed room reservation changes for modify room reservation flow. First and last names are optional when the request is made with guest JWT token, as these details will be fetched from given_name and family_name claims. roomRequests null indicate no change in room component; roomRequests [ ] indicate clearing all room components.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/FraudAgentToken"
          },
          {
            "$ref": "#/components/parameters/UserAgent"
          },
          {
            "$ref": "#/components/parameters/ForwardedFor"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommitPutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response. Room reservation object within the response will be conditionally returned if the error was generated due to pricing changes detected since the time of preview. Object will contain latest charges and calcs to be used to refresh UI views with latest prices.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyCommitErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/commit/refund": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Commit the refund information  for modify/ cancel room reservation  in payment widget flow.",
        "description": "Commit the refund information  for modify/ cancel room reservation  in payment widget flow.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/FraudAgentToken"
          },
          {
            "$ref": "#/components/parameters/UserAgent"
          },
          {
            "$ref": "#/components/parameters/ForwardedFor"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundCommitPutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v4/reservation/pending": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Pending room reservation request for modify room reservation in payment widget flow.",
        "description": "Pending room reservation request for modify room reservation flow - payment widget.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "roomReservation": {
            "type": "object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingRoomReservationRequestV4"
                }
              }
            },
            "required": true
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v4/reservation/commit": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Commit the pending room reservation changes for modify room reservation in payment widget flow.",
        "description": "Commit the pending room reservation changes for modify room reservation in payment widget flow.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/FraudAgentToken"
          },
          {
            "$ref": "#/components/parameters/UserAgent"
          },
          {
            "$ref": "#/components/parameters/ForwardedFor"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundCommitPutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response. Room reservation object within the response will be conditionally returned if the error was generated due to pricing changes detected since the time of preview. Object will contain latest charges and calcs to be used to refresh UI views with latest prices.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyCommitErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v4/reservation/preview/pending": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Pending room reservation request for modify room reservation in payment widget flow.",
        "description": "Pending room reservation request for modify room reservation in payment widget flow.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewCommitRequestV5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomReservationResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/profile": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Updates profile information on the room reservation.",
        "description": "",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyRoomReservationProfileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyRoomReservationProfileResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/associate": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update",
              "booking.room.resv:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Associates reservation to a logged-in customer",
        "description": "Associates reservation to a logged-in customer. API to be used by end-user facing channels using guest JWT. First and last name from the JWT token will be used to validate the reservation. MGMID/Mlife from the JWT token will be associated to the reservation.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationAssociateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyRoomReservationProfileResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/charges": {
      "put": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation.charges:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Calculates the room charges, taxes, fees and deposit based on various inputs.",
        "description": "",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateReservationChargesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateReservationChargesResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/party/info": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Returns basic reservation info for party and share-with reservations.Either of the two query attributes, confirmationNumber or operaPartyCode should be populated while making the request.",
        "description": "",
        "tags": [
          "Manage Room Booking"
        ],
        "x-amazon-apigateway-request-validator": "params-only",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "operaPartyCode",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Opera party code for party type reservation"
          },
          {
            "name": "confirmationNumber",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Room reservation confirmation number"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoomReservationBasicInfoResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/reservation/release": {
      "delete": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Releases Pending Reservation.",
        "description": "This service gives the possibility to the API users to release or ignore the current pending transaction for a given reservation. In case there is no previous committed image for this reservation, no data element is sent back.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/confirmationNumber"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          }
        ],
        "responses": {
          "204": {
            "description": "Pending Reservation Released Successfully."
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/reservation/release": {
      "delete": {
        "security": [
          {
            "oauth2": [
              "rooms.reservation:update"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "write"
            ]
          }
        ],
        "summary": "Releases Pending Reservation.",
        "description": "This service gives the possibility to the API users to release or ignore the current pending transaction for a given reservation along with the capability to pass the confirmation number or hold id. In case there is no previous committed image for this reservation, no data element is sent back.",
        "tags": [
          "Manage Room Booking"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Property GUID"
          },
          {
            "name": "confirmationNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "ACRS confirmation number"
          },
          {
            "name": "holdId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Cart line item id of the item added to the cart"
          },
          {
            "name": "f1Package",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Flag to determine if it an F1 package and make inventory updates as needed."
          }
        ],
        "responses": {
          "204": {
            "description": "Pending Reservation Released Successfully."
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/iata/organizations": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Gets Organization By Organization Name and IATA code",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "orgName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Organization Name"
          },
          {
            "name": "iataCode",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "IATA code"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSearchResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/groupblocks": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Gets Groups based on given input parameters",
        "description": "Gets Groups based on startDate, endDate, groupCode, propertyId",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "propertyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Organization Name"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "start date for the group. Format - yyyy-MM-dd"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "end date for the group. Format - yyyy-MM-dd"
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "group id. Format \"GRPCD~%s--PROP~%s\""
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSearchResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/partner/accounts": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Retrieves the partner accounts by first name, last name, and email address or Partner Account Number for a given program code.",
        "description": "<li>Retrieves the list of partner accounts by first name, last name and email address  or partner account number</li> <li>The program code (ex:MI) should be provided </li> <li>If Partner Account Number is not provided, first name, last name and email address should be provided</li>",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "First Name of the customer"
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Last Name of the customer"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Email Address of the customer"
          },
          {
            "name": "partnerAccountNo",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Partner account number of the customer, if available"
          },
          {
            "name": "programCode",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Program Code of the rewards program (Example:MI)"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerAccountDetailsResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v2/partner/programs": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.program:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Get partner programs",
        "description": "This api return the list of partner programs that are stored in the partner config file",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerProgramResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/v3/customer/ecidbyemr": {
      "get": {
        "security": [
          {
            "oauth2": [
              "rooms.availability:read"
            ]
          },
          {
            "mgm-roles": [
              "guest",
              "anon",
              "service"
            ]
          },
          {
            "service-role": [
              "read"
            ]
          }
        ],
        "summary": "Get ECID by EMR",
        "description": "This api returns the Encrypted CustomerId by accepting Encrypted MGM Rewards number as input",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/enableJwb"
          },
          {
            "$ref": "#/components/parameters/emr"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EcidByEmrResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {
              "x-mgm-source": {
                "$ref": "#/components/headers/x-mgm-source"
              },
              "x-mgm-channel": {
                "$ref": "#/components/headers/x-mgm-channel"
              },
              "x-mgm-correlation-id": {
                "$ref": "#/components/headers/x-mgm-correlation-id"
              },
              "x-mgm-transaction-id": {
                "$ref": "#/components/headers/x-mgm-transaction-id"
              }
            }
          }
        }
      }
    },
    "/health-check/ping": {
      "get": {
        "summary": "Health check api to validate RBS uptime",
        "description": "Health check api to validate RBS uptime",
        "tags": [
          "Health check"
        ],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/health-check/gse": {
      "get": {
        "summary": "Health check api to validate GSE uptime",
        "description": "Health check api to validate GSE uptime",
        "tags": [
          "Health check"
        ],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/health-check/acrs": {
      "get": {
        "summary": "Health check api to validate ACRS uptime",
        "description": "Health check api to validate ACRS uptime",
        "tags": [
          "Health check"
        ],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/health-check/acrsconnection": {
      "get": {
        "summary": "Health check api to validate ACRS connectivity",
        "description": "Health check api to validate ACRS connectivity",
        "tags": [
          "Health check"
        ],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/health-check/acrs/properties": {
      "get": {
        "summary": "Health check API to validate which properties are configured to ACRS",
        "description": "Health check api to display ACRS properties",
        "tags": [
          "Health check"
        ],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "https://azdeapi-dev.mgmresorts.com/int/identity/authorization/v1/mgmsvc/token",
            "scopes": {
              "rooms.availability:read": "Get room availability",
              "rooms.program:read": "Perform program related reads",
              "rooms.reservation:update": "Save a room reservation",
              "rooms.reservation:create": "Reserve a room",
              "myvegas.code:read": "Validate myvegas code",
              "myvegas.code:update": "Confirm myvegas code",
              "rooms.reservation:read": "Reservation lookup",
              "rooms.reservation.charges:read": "Hold a room and get charges"
            }
          },
          "clientCredentials": {
            "tokenUrl": "https://azdeapi-dev.mgmresorts.com/int/identity/authorization/v1/mgmsvc/token",
            "scopes": {
              "rooms.availability:read": "Get room availability",
              "rooms.program:read": "Perform program related reads",
              "rooms.reservation:update": "Save a room reservation",
              "rooms.reservation:create": "Reserve a room",
              "myvegas.code:read": "Validate myvegas code",
              "myvegas.code:update": "Confirm myvegas code",
              "rooms.reservation:read": "Reservation lookup",
              "rooms.reservation.charges:read": "Hold a room and get charges"
            }
          }
        }
      }
    },
    "schemas": {
      "PackageComponentRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "object",
            "properties": {
              "numAdults": {
                "type": "integer",
                "format": "int32"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "programId": {
                      "type": "string"
                    },
                    "propertyId": {
                      "type": "string"
                    },
                    "roomTypeId": {
                      "type": "string"
                    },
                    "showComponents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "dates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "qty": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "inclusionComponents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "dates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "qty": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PackageComponentResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "propertyId": {
              "type": "string"
            },
            "programId": {
              "type": "string"
            },
            "roomtypeId": {
              "type": "string"
            },
            "showComponents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "nightlyCharge": {
                    "type": "boolean"
                  },
                  "price": {
                    "type": "number",
                    "format": "double"
                  },
                  "description": {
                    "type": "string"
                  },
                  "pricingApplied": {
                    "type": "string"
                  },
                  "taxRate": {
                    "type": "number",
                    "format": "double"
                  },
                  "shortDescription": {
                    "type": "string"
                  },
                  "longDescription": {
                    "type": "string"
                  },
                  "ratePlanName": {
                    "type": "string"
                  },
                  "ratePlanCode": {
                    "type": "string"
                  },
                  "amtAftTax": {
                    "type": "number",
                    "format": "double"
                  },
                  "code": {
                    "type": "string"
                  },
                  "start": {
                    "type": "string"
                  },
                  "end": {
                    "type": "string"
                  }
                }
              }
            },
            "inclusionComponents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "nightlyCharge": {
                    "type": "boolean"
                  },
                  "price": {
                    "type": "number",
                    "format": "double"
                  },
                  "description": {
                    "type": "string"
                  },
                  "pricingApplied": {
                    "type": "string"
                  },
                  "taxRate": {
                    "type": "number",
                    "format": "double"
                  },
                  "shortDescription": {
                    "type": "string"
                  },
                  "longDescription": {
                    "type": "string"
                  },
                  "ratePlanName": {
                    "type": "string"
                  },
                  "ratePlanCode": {
                    "type": "string"
                  },
                  "amtAftTax": {
                    "type": "number",
                    "format": "double"
                  },
                  "code": {
                    "type": "string"
                  },
                  "start": {
                    "type": "string"
                  },
                  "end": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "PckgeComponentRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "object",
            "properties": {
              "dates": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "checkIn": {
                      "type": "string",
                      "format": "date"
                    },
                    "checkOut": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              },
              "numAdults": {
                "type": "integer",
                "format": "int32"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "programId": {
                      "type": "string"
                    },
                    "propertyId": {
                      "type": "string"
                    },
                    "roomTypeId": {
                      "type": "string"
                    },
                    "nonRoomProducts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "qty": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PckgeComponentResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "object",
              "properties": {
                "checkIn": {
                  "type": "string",
                  "format": "date"
                },
                "checkOut": {
                  "type": "string",
                  "format": "date"
                }
              }
            },
            "pkgComponent": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "propertyId": {
                    "type": "string"
                  },
                  "pkgComponents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "nightlyCharge": {
                          "type": "boolean"
                        },
                        "price": {
                          "type": "number",
                          "format": "double"
                        },
                        "description": {
                          "type": "string"
                        },
                        "pricingApplied": {
                          "type": "string"
                        },
                        "taxRate": {
                          "type": "number",
                          "format": "double"
                        },
                        "shortDescription": {
                          "type": "string"
                        },
                        "longDescription": {
                          "type": "string"
                        },
                        "ratePlanName": {
                          "type": "string"
                        },
                        "ratePlanCode": {
                          "type": "string"
                        },
                        "amtAftTax": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MultiDateResortPriceRequest": {
        "type": "object",
        "properties": {
          "dates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "checkIn": {
                  "type": "string",
                  "format": "date"
                },
                "checkOut": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          },
          "numAdults": {
            "type": "integer",
            "format": "int32"
          },
          "programId": {
            "type": "string"
          },
          "segment": {
            "type": "string"
          },
          "perpetualPricing": {
            "type": "boolean"
          },
          "enableJwb": {
            "type": "string"
          },
          "rates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "propertyId": {
                  "type": "string"
                }
              }
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "propertyId": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CreateRoomReservationRequest": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationRequest"
          }
        }
      },
      "CreateRoomReservationRequestV4": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationRequestV4"
          }
        }
      },
      "CreateRoomReservationResponse": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationResponse"
          }
        }
      },
      "CreatePartyRoomReservationRequest": {
        "type": "object",
        "properties": {
          "splitCreditCardDetails": {
            "type": "boolean"
          },
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationRequest"
          }
        }
      },
      "CreatePartyRoomReservationRequestV4": {
        "type": "object",
        "properties": {
          "splitCreditCardDetails": {
            "type": "boolean"
          },
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationRequestV4"
          }
        }
      },
      "CreatePartyRoomReservationResponse": {
        "type": "object",
        "properties": {
          "roomReservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomReservationResponse"
            }
          },
          "failedReservations": {
            "type": "array",
            "items": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "extInfo": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UpdateRoomReservationRequest": {
        "type": "object",
        "properties": {
          "creditCardUpdated": {
            "type": "boolean"
          },
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationUpdateRequest"
          }
        }
      },
      "PendingRoomReservationRequestV4": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationPendingRequestV4"
          }
        }
      },
      "PreviewCommitRequestV5": {
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string"
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "propertyId": {
            "type": "string"
          },
          "roomRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "previewReservationTotal": {
            "type": "number",
            "format": "double"
          },
          "previewReservationDeposit": {
            "type": "number",
            "format": "double"
          },
          "cvv": {
            "type": "string"
          },
          "inAuthTransactionId": {
            "type": "string"
          },
          "previewReservationChangeInDeposit": {
            "type": "number",
            "format": "double"
          },
          "authId": {
            "type": "string"
          },
          "skipPaymentProcess": {
            "type": "boolean"
          }
        }
      },
      "UpdateRoomReservationResponse": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationResponse"
          }
        }
      },
      "CancelRoomReservationRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "overrideDepositForfeit": {
            "type": "boolean"
          },
          "itineraryId": {
            "type": "string"
          },
          "reservationId": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "cancellationReason": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "skipPaymentProcess": {
            "type": "boolean"
          },
          "skipCustomerNotification": {
            "type": "boolean"
          }
        },
        "required": [
          "itineraryId",
          "customerId"
        ]
      },
      "CancelRoomReservationV3Request": {
        "type": "object",
        "properties": {
          "overrideDepositForfeit": {
            "type": "boolean"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "cancellationReason": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "description": "Mandatory when using service or anonymous tokens"
          },
          "lastName": {
            "type": "string",
            "description": "Mandatory when using service or anonymous tokens"
          },
          "inAuthTransactionId": {
            "type": "string"
          },
          "skipPaymentProcess": {
            "type": "boolean"
          },
          "skipCustomerNotification": {
            "type": "boolean"
          },
          "cancelPending": {
            "type": "boolean"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetails"
            }
          }
        },
        "required": [
          "confirmationNumber"
        ]
      },
      "CancelPreviewV4Request": {
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "CancelReservationV4Request": {
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "skipCustomerNotification": {
            "type": "boolean"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetails"
            }
          }
        }
      },
      "CancelRoomReservationResponse": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationResponse"
          }
        }
      },
      "GetRoomReservationResponse": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationResponse"
          }
        }
      },
      "ModifyRoomReservationProfileRequest": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "userProfile": {
            "$ref": "#/components/schemas/ReservationProfile"
          }
        }
      },
      "ModifyRoomReservationProfileResponse": {
        "type": "object",
        "properties": {
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationResponse"
          }
        }
      },
      "GetApplicableProgramResponse": {
        "type": "object",
        "properties": {
          "programIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0816f6a2-7054-4aec-99d1-cd5f9d198afd",
                  "description": "program or rateplan guid"
                },
                "name": {
                  "type": "string",
                  "description": "name of the offer",
                  "example": "America Tour System"
                },
                "category": {
                  "type": "string",
                  "example": "Group",
                  "description": "category of the offer. Possible values - Casino, Group, Transient"
                },
                "rateCode": {
                  "type": "string",
                  "description": "rate code of the offer",
                  "example": "AAA"
                },
                "patronPromoId": {
                  "type": "string",
                  "example": "PATRON_PROMO1",
                  "description": "patron promo code"
                },
                "promoCode": {
                  "type": "string",
                  "example": "OPERA_PROMO1",
                  "description": "opera promo code"
                },
                "promo": {
                  "type": "string",
                  "description": "ACRS Promo Code"
                },
                "operaBlockCode": {
                  "type": "string",
                  "example": "GJAC1219",
                  "description": "group block code"
                },
                "operaBlockName": {
                  "type": "string",
                  "example": "JACK FAMILY CHRISTMAS TRIP",
                  "description": "group block name"
                },
                "reservationMethod": {
                  "type": "string",
                  "example": "RL",
                  "description": "reservation method for a group program"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "MAY2019SEASONAL",
                    "description": "associated tags with the offer"
                  }
                }
              }
            }
          }
        }
      },
      "CalculateReservationChargesRequest": {
        "type": "object",
        "properties": {
          "instance": {
            "type": "number"
          },
          "stage": {
            "type": "string"
          },
          "calcsOnly": {
            "type": "boolean"
          },
          "propertyId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "isPriceOverride": {
            "type": "boolean"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customerDominantPlay": {
            "type": "string"
          },
          "customerRank": {
            "type": "number"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetails"
            }
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "markets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomMarket"
            }
          }
        }
      },
      "CalculateReservationChargesResponse": {
        "type": "object",
        "properties": {
          "instance": {
            "type": "number"
          },
          "propertyId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean"
          },
          "promo": {
            "type": "string"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "chargesAndTaxes": {
            "type": "object",
            "properties": {
              "charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingCharges"
                }
              },
              "taxesAndFees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingTaxes"
                }
              }
            }
          },
          "ratesSummary": {
            "$ref": "#/components/schemas/RatesSummary"
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "depositPolicy": {
            "$ref": "#/components/schemas/DepositPolicy"
          },
          "markets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomMarket"
            }
          }
        }
      },
      "GetRoomReservationBasicInfoResponse": {
        "type": "object",
        "properties": {
          "reservationAdditionalInfo": {
            "type": "array",
            "items": {
              "properties": {
                "operaConfNo": {
                  "type": "string"
                },
                "confNo": {
                  "type": "string"
                },
                "externalConfNo": {
                  "type": "string"
                },
                "partyConfNo": {
                  "type": "string"
                },
                "operaPartyCode": {
                  "type": "string"
                },
                "guestName": {
                  "type": "string"
                },
                "guestFName": {
                  "type": "string"
                },
                "guestLname": {
                  "type": "string"
                },
                "roomTypeCode": {
                  "type": "string"
                },
                "roomCount": {
                  "type": "string"
                },
                "adultCount": {
                  "type": "integer"
                },
                "childCount": {
                  "type": "integer"
                },
                "checkInDate": {
                  "type": "string",
                  "example": "2020-08-15"
                },
                "checkOutDate": {
                  "type": "string",
                  "example": "2020-08-20"
                },
                "resvNameId": {
                  "type": "string"
                },
                "reservationTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "primarySharerConfNo": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "resType": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PremodifyPutRequest": {
        "type": "object",
        "required": [
          "confirmationNumber"
        ],
        "properties": {
          "confirmationNumber": {
            "type": "string",
            "example": "M01232341",
            "description": "confirmation number for reservation to be edited"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "tripDetails": {
            "type": "object",
            "properties": {
              "checkInDate": {
                "type": "string",
                "example": "2020-12-15",
                "description": "Existing or updated check-in date"
              },
              "checkOutDate": {
                "type": "string",
                "example": "2020-12-18",
                "description": "Existing or updated check-out date"
              }
            }
          },
          "roomRequests": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "a197e21b-ef75-45aa-b9d3-3480f557c77a"
            }
          }
        }
      },
      "ModifyCommitPutRequest": {
        "type": "object",
        "required": [
          "confirmationNumber",
          "previewReservationTotal",
          "previewReservationDeposit"
        ],
        "properties": {
          "confirmationNumber": {
            "type": "string",
            "example": "M01232341",
            "description": "confirmation number for reservation to be edited"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "tripDetails": {
            "type": "object",
            "properties": {
              "checkInDate": {
                "type": "string",
                "example": "2020-12-15",
                "description": "Existing or updated check-in date"
              },
              "checkOutDate": {
                "type": "string",
                "example": "2020-12-18",
                "description": "Existing or updated check-out date"
              }
            }
          },
          "roomRequests": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "a197e21b-ef75-45aa-b9d3-3480f557c77a"
            }
          },
          "previewReservationTotal": {
            "type": "number",
            "format": "double",
            "example": 236.4,
            "description": "Reservation total returned by modify preview API"
          },
          "previewReservationDeposit": {
            "type": "number",
            "format": "double",
            "example": 136.4,
            "description": "Deposit due  returned by modify preview API"
          },
          "cvv": {
            "type": "string",
            "example": 123,
            "description": "Should match regex ^[0-9]{3,4}$"
          },
          "inAuthTransactionId": {
            "type": "string"
          },
          "previewReservationChangeInDeposit": {
            "type": "number",
            "format": "double",
            "example": 36.4,
            "description": "Change in deposit as it could be 0, +ve or -ve value"
          },
          "authId": {
            "type": "string",
            "example": "AVST0",
            "description": "payment authorization Id"
          },
          "skipPaymentProcess": {
            "type": "boolean",
            "description": "Flag if RBS need to do payment or not"
          },
          "skipCustomerNotification": {
            "type": "boolean",
            "description": "Flag if RBS need to skip customer notification"
          }
        }
      },
      "ModifyCommitPutRequestV4": {
        "type": "object",
        "required": [
          "confirmationNumber"
        ],
        "properties": {
          "confirmationNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "billing": {
            "type": "object",
            "properties": {
              "payment": {
                "type": "object",
                "properties": {
                  "cardHolder": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "ccToken": {
                    "type": "string",
                    "description": "Credit card token"
                  },
                  "encryptedccToken": {
                    "type": "string",
                    "description": "Encrypted credit card token"
                  },
                  "maskedNumber": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": -56.69
                  },
                  "cvv": {
                    "type": "string"
                  },
                  "expiry": {
                    "type": "string",
                    "example": "12/2025"
                  },
                  "type": {
                    "type": "string",
                    "example": "VISA"
                  },
                  "fxAmount": {
                    "type": "number",
                    "format": "double"
                  },
                  "fxCurrencyISOCode": {
                    "type": "string"
                  },
                  "fxCurrencyCode": {
                    "type": "string"
                  },
                  "fxExchangeRate": {
                    "type": "number",
                    "format": "double"
                  },
                  "fxFlag": {
                    "type": "string"
                  },
                  "authId": {
                    "type": "string"
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "street1": {
                    "type": "string"
                  },
                  "street2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "RefundCommitPutRequest": {
        "type": "object",
        "required": [
          "confirmationNumber"
        ],
        "properties": {
          "confirmationNumber": {
            "type": "string",
            "example": "M01232341",
            "description": "confirmation number for reservation to be edited"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "skipCustomerNotification": {
            "type": "boolean"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetails"
            }
          }
        }
      },
      "RoomReservationRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "upgradeRoomTypeId": {
            "type": "string"
          },
          "holdId": {
            "type": "string"
          },
          "orderLineItemId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "operaState": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "Saved",
              "Booked",
              "Cancelled"
            ]
          },
          "nrgStatus": {
            "type": "boolean"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean",
            "description": "Used for ICE channel"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roomNumber": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "partyConfirmationNumber": {
            "type": "string"
          },
          "otaConfirmationNumber": {
            "type": "string"
          },
          "primarySharerConfirmationNumber": {
            "type": "string"
          },
          "operaConfirmationNumber": {
            "type": "string"
          },
          "bookDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "skipFraudCheck": {
            "type": "boolean"
          },
          "skipCustomerNotification": {
            "type": "boolean"
          },
          "skipPaymentProcess": {
            "type": "boolean"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetails"
            }
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "chargesAndTaxes": {
            "type": "object",
            "properties": {
              "charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingCharges"
                }
              },
              "taxesAndFees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingTaxes"
                }
              }
            }
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "pkgComponents": {
            "$ref": "#/components/schemas/PkgComponents"
          },
          "depositPolicy": {
            "$ref": "#/components/schemas/DepositPolicy"
          },
          "amountDue": {
            "type": "number"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "customerRank": {
            "type": "integer"
          },
          "customerSegment": {
            "type": "integer"
          },
          "customerDominantPlay": {
            "type": "string",
            "example": "Poker",
            "enum": [
              "Slot",
              "Table",
              "Poker"
            ]
          },
          "rrUpSell": {
            "type": "string"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomReservationAlert"
            }
          },
          "routingInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingInstruction"
            }
          },
          "traces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Traces"
            }
          },
          "shareWithCustomers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationProfile"
            }
          },
          "comments": {
            "type": "string"
          },
          "additionalComments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agentInfo": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "string"
              },
              "agentType": {
                "type": "string"
              }
            }
          },
          "inAuthTransactionId": {
            "type": "string"
          },
          "myVegasPromoCode": {
            "type": "string"
          }
        },
        "required": [
          "itineraryId",
          "propertyId",
          "roomTypeId",
          "bookings",
          "billing",
          "tripDetails"
        ]
      },
      "RoomReservationRequestV4": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "upgradeRoomTypeId": {
            "type": "string"
          },
          "holdId": {
            "type": "string"
          },
          "orderLineItemId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "operaState": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "Saved",
              "Booked",
              "Cancelled"
            ]
          },
          "nrgStatus": {
            "type": "boolean"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean",
            "description": "Used for ICE channel"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "skipCustomerNotification": {
            "type": "boolean"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roomNumber": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "partyConfirmationNumber": {
            "type": "string"
          },
          "otaConfirmationNumber": {
            "type": "string"
          },
          "primarySharerConfirmationNumber": {
            "type": "string"
          },
          "operaConfirmationNumber": {
            "type": "string"
          },
          "bookDate": {
            "type": "string",
            "example": "2024-08-15"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetails"
            }
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "pkgComponents": {
            "$ref": "#/components/schemas/PkgComponents"
          },
          "chargesAndTaxes": {
            "type": "object",
            "properties": {
              "charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingCharges"
                }
              },
              "taxesAndFees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingTaxes"
                }
              }
            }
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "depositPolicy": {
            "$ref": "#/components/schemas/DepositPolicy"
          },
          "amountDue": {
            "type": "number"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "customerRank": {
            "type": "integer"
          },
          "customerSegment": {
            "type": "integer"
          },
          "customerDominantPlay": {
            "type": "string",
            "example": "Poker",
            "enum": [
              "Slot",
              "Table",
              "Poker"
            ]
          },
          "rrUpSell": {
            "type": "string"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomReservationAlert"
            }
          },
          "routingInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingInstruction"
            }
          },
          "traces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Traces"
            }
          },
          "shareWithCustomers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationProfile"
            }
          },
          "comments": {
            "type": "string"
          },
          "additionalComments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agentInfo": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "string"
              },
              "agentType": {
                "type": "string"
              }
            }
          },
          "inAuthTransactionId": {
            "type": "string"
          },
          "myVegasPromoCode": {
            "type": "string"
          }
        },
        "required": [
          "itineraryId",
          "propertyId",
          "roomTypeId",
          "bookings",
          "billing",
          "tripDetails"
        ]
      },
      "RoomReservationResponse": {
        "type": "object",
        "properties": {
          "instance": {
            "type": "number",
            "description": "GSE specific field. It's some kind of a counter of reservation within a itinerary"
          },
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "upgradeRoomTypeId": {
            "type": "string"
          },
          "operaState": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "Saved",
              "Booked",
              "Cancelled"
            ]
          },
          "nrgStatus": {
            "type": "boolean"
          },
          "isCancellable": {
            "type": "boolean"
          },
          "notifyCustomer": {
            "type": "boolean"
          },
          "ratesFormat": {
            "type": "string"
          },
          "hdePackage": {
            "type": "boolean"
          },
          "f1Package": {
            "type": "boolean"
          },
          "holdId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "orderLineItemId": {
            "type": "string"
          },
          "depositForfeit": {
            "type": "boolean"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roomNumber": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "requestConfirmationNumber": {
            "type": "string"
          },
          "partyConfirmationNumber": {
            "type": "string"
          },
          "primarySharerConfirmationNumber": {
            "type": "string"
          },
          "operaConfirmationNumber": {
            "type": "string"
          },
          "operaHotelCode": {
            "type": "string"
          },
          "operaRoomCode": {
            "type": "string"
          },
          "otaConfirmationNumber": {
            "type": "string"
          },
          "cancellationReason": {
            "type": "string"
          },
          "cancellationPolicyInfo": {
            "type": "string"
          },
          "cancellationNumber": {
            "type": "string"
          },
          "bookDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "thirdParty": {
            "type": "boolean",
            "description": "True, if reservation is from third-party source for which complete reservation details are not available."
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetailsResponse"
            }
          },
          "markets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomMarket"
            }
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "chargesAndTaxes": {
            "type": "object",
            "properties": {
              "charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingCharges"
                }
              },
              "taxesAndFees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingTaxes"
                }
              }
            }
          },
          "ratesSummary": {
            "$ref": "#/components/schemas/RatesSummary"
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "depositPolicy": {
            "$ref": "#/components/schemas/DepositPolicy"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "purchasedComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchasedComponents"
            }
          },
          "amountDue": {
            "type": "number"
          },
          "customerRank": {
            "type": "integer"
          },
          "customerSegment": {
            "type": "integer"
          },
          "customerDominantPlay": {
            "type": "string",
            "example": "Poker",
            "enum": [
              "Slot",
              "Table",
              "Poker"
            ]
          },
          "shareWiths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shareWithType": {
            "type": "string",
            "enum": [
              "Full",
              "Entire",
              "Split"
            ]
          },
          "rrUpSell": {
            "type": "string"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomReservationAlert"
            }
          },
          "routingInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingInstruction"
            }
          },
          "traces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Traces"
            }
          },
          "shareWithCustomers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationProfile"
            }
          },
          "comments": {
            "type": "string"
          },
          "additionalComments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agentInfo": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "string"
              },
              "agentType": {
                "type": "string"
              }
            }
          },
          "bookingSource": {
            "type": "string"
          },
          "bookingChannel": {
            "type": "string"
          },
          "isCreditCardExpired": {
            "type": "boolean",
            "description": "Flag will be set to true if the card on file has expired"
          },
          "isStayDateModifiable": {
            "type": "boolean",
            "description": "Flag will be set to false, if dates on the reservation is not modifiable"
          }
        }
      },
      "RoomReservationUpdateRequest": {
        "type": "object",
        "properties": {
          "instance": {
            "type": "number",
            "description": "GSE specific field which should be retained during edits. Otherwise it causes issues like duplicate charges posting."
          },
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "upgradeRoomTypeId": {
            "type": "string"
          },
          "operaState": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "Saved",
              "Booked",
              "Cancelled"
            ]
          },
          "nrgStatus": {
            "type": "boolean"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean",
            "description": "Used for ICE channel"
          },
          "skipCustomerNotification": {
            "type": "boolean"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roomNumber": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "partyConfirmationNumber": {
            "type": "string"
          },
          "otaConfirmationNumber": {
            "type": "string"
          },
          "primarySharerConfirmationNumber": {
            "type": "string"
          },
          "operaConfirmationNumber": {
            "type": "string"
          },
          "bookDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "skipFraudCheck": {
            "type": "boolean"
          },
          "skipPaymentProcess": {
            "type": "boolean"
          },
          "billing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBillingDetails"
            }
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "chargesAndTaxes": {
            "type": "object",
            "properties": {
              "charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingCharges"
                }
              },
              "taxesAndFees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingTaxes"
                }
              }
            }
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "depositPolicy": {
            "$ref": "#/components/schemas/DepositPolicy"
          },
          "amountDue": {
            "type": "number"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "customerRank": {
            "type": "integer"
          },
          "customerSegment": {
            "type": "integer"
          },
          "customerDominantPlay": {
            "type": "string",
            "example": "Poker",
            "enum": [
              "Slot",
              "Table",
              "Poker"
            ]
          },
          "rrUpSell": {
            "type": "string"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomReservationAlert"
            }
          },
          "routingInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingInstruction"
            }
          },
          "traces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Traces"
            }
          },
          "markets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomMarket"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "shareWithCustomers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationProfile"
            }
          },
          "comments": {
            "type": "string"
          },
          "additionalComments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agentInfo": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "string"
              },
              "agentType": {
                "type": "string"
              }
            }
          },
          "inAuthTransactionId": {
            "type": "string"
          },
          "myVegasPromoCode": {
            "type": "string"
          }
        },
        "required": [
          "itineraryId",
          "propertyId",
          "roomTypeId",
          "bookings",
          "billing",
          "tripDetails"
        ]
      },
      "RoomReservationPendingRequestV4": {
        "type": "object",
        "properties": {
          "instance": {
            "type": "number",
            "description": "GSE specific field which should be retained during edits. Otherwise it causes issues like duplicate charges posting."
          },
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "itineraryId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "upgradeRoomTypeId": {
            "type": "string"
          },
          "operaState": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "Saved",
              "Booked",
              "Cancelled"
            ]
          },
          "nrgStatus": {
            "type": "boolean"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean",
            "description": "Used for ICE channel"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roomNumber": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "partyConfirmationNumber": {
            "type": "string"
          },
          "otaConfirmationNumber": {
            "type": "string"
          },
          "primarySharerConfirmationNumber": {
            "type": "string"
          },
          "operaConfirmationNumber": {
            "type": "string"
          },
          "bookDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "skipFraudCheck": {
            "type": "boolean"
          },
          "skipPaymentProcess": {
            "type": "boolean"
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "chargesAndTaxes": {
            "type": "object",
            "properties": {
              "charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingCharges"
                }
              },
              "taxesAndFees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomBookingTaxes"
                }
              }
            }
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "depositPolicy": {
            "$ref": "#/components/schemas/DepositPolicy"
          },
          "amountDue": {
            "type": "number"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "customerRank": {
            "type": "integer"
          },
          "customerSegment": {
            "type": "integer"
          },
          "customerDominantPlay": {
            "type": "string",
            "example": "Poker",
            "enum": [
              "Slot",
              "Table",
              "Poker"
            ]
          },
          "rrUpSell": {
            "type": "string"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomReservationAlert"
            }
          },
          "routingInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingInstruction"
            }
          },
          "traces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Traces"
            }
          },
          "markets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomMarket"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "comments": {
            "type": "string"
          },
          "additionalComments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agentInfo": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "string"
              },
              "agentType": {
                "type": "string"
              }
            }
          },
          "inAuthTransactionId": {
            "type": "string"
          },
          "myVegasPromoCode": {
            "type": "string"
          }
        },
        "required": [
          "itineraryId",
          "propertyId",
          "roomTypeId",
          "bookings",
          "tripDetails"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "reservationInstance": {
            "type": "integer"
          },
          "chargeAmount": {
            "type": "number"
          },
          "chargeCardExpiry": {
            "type": "string"
          },
          "fxChecked": {
            "type": "boolean"
          },
          "fxEligible": {
            "type": "boolean"
          },
          "fxTransDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "fxAmount": {
            "type": "number"
          },
          "fxRate": {
            "type": "number"
          },
          "fxSettleAmount": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "isDeposit": {
            "type": "boolean"
          },
          "isExternal": {
            "type": "boolean"
          },
          "chargeCardHolder": {
            "type": "string"
          },
          "chargeCurrencyCode": {
            "type": "string"
          },
          "chargeCardType": {
            "type": "string"
          },
          "chargeCardMaskedNumber": {
            "type": "string"
          },
          "chargeCardNumber": {
            "type": "string"
          },
          "fxCurrencyCode": {
            "type": "string"
          },
          "fxAcceptMessage": {
            "type": "string"
          },
          "fxAuthApprovalCode": {
            "type": "string"
          },
          "paymentTxnId": {
            "type": "string"
          }
        }
      },
      "TripDetails": {
        "type": "object",
        "properties": {
          "checkInDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "checkOutDate": {
            "type": "string",
            "example": "2020-08-20"
          },
          "numAdults": {
            "type": "integer",
            "example": 2
          },
          "numChildren": {
            "type": "integer",
            "example": 2
          },
          "numRooms": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "PkgComponents": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "COMPONENTCD-v-RBSPMTST-d-TYP-v-COMPONENT-d-PROP-v-MV001-d-NRPCD-v-RBSPMTST"
            },
            "start": {
              "type": "string",
              "example": "2020-08-20"
            },
            "end": {
              "type": "string",
              "example": "2025-06-04"
            },
            "type": {
              "type": "string",
              "example": "shows/inclusions",
              "enum": [
                "shows",
                "inclusions"
              ]
            }
          }
        }
      },
      "ItemsInCart": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "propertyId": {
              "type": "string",
              "example": "RPCD-v-COMPS031-d-PROP-v-MV021"
            },
            "mlifeNumber": {
              "type": "number"
            },
            "customerId": {
              "type": "number"
            },
            "tripDetails": {
              "$ref": "#/components/schemas/TripDetails"
            },
            "bookings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoomPrice"
              }
            }
          }
        }
      },
      "RoomMarket": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-08-15"
          },
          "marketCode": {
            "type": "string"
          },
          "sourceCode": {
            "type": "string"
          }
        }
      },
      "RoomBookingCharges": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-08-15"
          },
          "amount": {
            "type": "number"
          },
          "itemized": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "cd909839-c886-4952-8323-7f0a867a650b"
                },
                "shortDescription": {
                  "type": "string",
                  "example": "Guaranteed Early Check-In"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                },
                "pricingApplied": {
                  "type": "string",
                  "example": "NIGHTLY",
                  "enum": [
                    "NIGHTLY",
                    "CHECKIN",
                    "CHECKOUT",
                    "PERSTAY"
                  ]
                },
                "itemType": {
                  "type": "string",
                  "enum": [
                    "RoomCharge",
                    "ExtraGuestCharge",
                    "ResortFee",
                    "ComponentCharge"
                  ]
                },
                "amount": {
                  "type": "number"
                },
                "item": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "RoomBookingTaxes": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-08-15"
          },
          "amount": {
            "type": "number"
          },
          "itemized": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "cd909839-c886-4952-8323-7f0a867a650b"
                },
                "shortDescription": {
                  "type": "string",
                  "example": "Guaranteed Early Check-In"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                },
                "pricingApplied": {
                  "type": "string",
                  "example": "NIGHTLY",
                  "enum": [
                    "NIGHTLY",
                    "CHECKIN",
                    "CHECKOUT",
                    "PERSTAY"
                  ]
                },
                "itemType": {
                  "type": "string",
                  "enum": [
                    "RoomChargeTax",
                    "ExtraGuestChargeTax",
                    "ResortFeeTax",
                    "ComponentChargeTax"
                  ]
                },
                "amount": {
                  "type": "number"
                },
                "item": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Deposit": {
        "type": "object",
        "properties": {
          "dueDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "amountPolicy": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "forfeitDate": {
            "type": "string",
            "example": "2020-08-18"
          },
          "forfeitAmount": {
            "type": "number"
          },
          "overrideAmount": {
            "type": "number"
          },
          "depositRuleCode": {
            "type": "string"
          },
          "cancellationRuleCode": {
            "type": "string",
            "properties": {
              "dollarValue": {
                "type": "number"
              },
              "pointValue": {
                "type": "integer"
              }
            }
          },
          "refundAmount": {
            "type": "number",
            "description": "Refundable amount after cancellation. Applicable for Cancellation (POST /v2/reservation/cancel) and find reservation (GET /v2/reservation) apis."
          },
          "calculatedForefeitAmount": {
            "type": "number",
            "description": "Forfeit amount calculated dynamically based on the current and forfeit date. Applicable for Cancellation (POST /v2/reservation/cancel) and find reservation (GET /v2/reservation) apis."
          },
          "itemized": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemType": {
                  "type": "string",
                  "enum": [
                    "RoomCharge",
                    "RoomChargeTax"
                  ]
                },
                "amount": {
                  "type": "number"
                },
                "item": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "DepositPolicy": {
        "type": "object",
        "properties": {
          "depositRequired": {
            "type": "boolean"
          },
          "creditCardRequired": {
            "type": "boolean"
          }
        }
      },
      "RoutingInstruction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "memberShipNumber": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "endDate": {
            "type": "string",
            "example": "2020-08-20"
          },
          "window": {
            "type": "integer"
          },
          "limitType": {
            "type": "string"
          },
          "limit": {
            "type": "number"
          },
          "dailyYN": {
            "type": "boolean"
          },
          "applicableSunday": {
            "type": "boolean"
          },
          "applicableMonday": {
            "type": "boolean"
          },
          "applicableTuesday": {
            "type": "boolean"
          },
          "applicableWednesday": {
            "type": "boolean"
          },
          "applicableThursday": {
            "type": "boolean"
          },
          "applicableFriday": {
            "type": "boolean"
          },
          "applicableSaturday": {
            "type": "boolean"
          },
          "authorizerId": {
            "type": "string"
          },
          "routingCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isSystemRouting": {
            "type": "boolean"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "RoomPrice": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-08-15"
          },
          "basePrice": {
            "type": "number"
          },
          "customerPrice": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "isDiscounted": {
            "type": "boolean",
            "description": "This attribute will be true if the price is less than basePrice."
          },
          "programIdIsRateTable": {
            "type": "boolean"
          },
          "overridePrice": {
            "type": "number"
          },
          "overrideProgramIdIsRateTable": {
            "type": "boolean"
          },
          "isComp": {
            "type": "boolean"
          },
          "resortFeeIsSpecified": {
            "type": "boolean"
          },
          "resortFee": {
            "type": "number"
          },
          "programId": {
            "type": "string"
          },
          "pricingRuleId": {
            "type": "string"
          },
          "overrideProgramId": {
            "type": "string"
          },
          "overridePricingRuleId": {
            "type": "string"
          }
        }
      },
      "RoomReservationAlert": {
        "type": "object",
        "properties": {
          "alertCodeId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "alertAreaId": {
            "type": "string"
          }
        }
      },
      "Traces": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-08-15"
          },
          "resolvedDate": {
            "type": "string",
            "example": "2020-08-15"
          },
          "departmentId": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "resolvedUser": {
            "type": "string"
          }
        }
      },
      "RoomBillingDetails": {
        "type": "object",
        "properties": {
          "payment": {
            "type": "object",
            "properties": {
              "cardHolder": {
                "type": "string",
                "example": "John doe",
                "description": "Should be <=70 and match *^[ A-Za-z0-9.\\-\\/+=_ !$\\\\*?@#,']*$*"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "ccToken": {
                "type": "string",
                "description": "Credit card token"
              },
              "authId": {
                "type": "string",
                "description": "payment authorization Id/Number"
              },
              "encryptedccToken": {
                "type": "string",
                "description": "Encrypted credit card token"
              },
              "maskedNumber": {
                "type": "string"
              },
              "cvv": {
                "type": "string",
                "example": 123,
                "description": "Should match regex ^[0-9]{3,4}$"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Visa",
                  "Mastercard",
                  "Discover",
                  "American Express",
                  "Diners Club",
                  "JCB",
                  "Union Pay"
                ],
                "example": "Mastercard, visa"
              },
              "expiry": {
                "type": "string",
                "format": "MM/YYYY",
                "example": "10/2022"
              },
              "amount": {
                "type": "number"
              },
              "fxAmount": {
                "type": "number",
                "description": "Amount in foreign currency",
                "example": 135.22
              },
              "fxCurrencyISOCode": {
                "type": "string",
                "description": "ISO code for the foreign currency",
                "example": 702
              },
              "fxCurrencyCode": {
                "type": "string",
                "description": "Foreign currency code",
                "example": "HKD"
              },
              "fxExchangeRate": {
                "type": "number",
                "description": "Exchange rate for the foreign currency",
                "example": 7.809
              },
              "fxFlag": {
                "type": "string",
                "example": "Y",
                "description": "â€˜Yâ€™ = Opted In â€˜Nâ€™ = Opted Out â€˜Eâ€™ = Not Convertible"
              }
            },
            "required": [
              "cardHolder",
              "cvv",
              "type",
              "expiry"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string",
                "example": "234 W Main St",
                "description": "Should be <=60 chars"
              },
              "street2": {
                "type": "string",
                "example": "Unit 415",
                "description": "Should be <=60 chars"
              },
              "city": {
                "type": "string",
                "example": "Las Vegas",
                "description": "Should be <=32 chars and match *^[ A-Za-z0-9.\\-\\/+=_ !$\\\\*?@#,']*$* regex"
              },
              "state": {
                "type": "string",
                "example": "NV",
                "description": "State code for US/Canada and free form for other countries. Mandatory for US/Canada. 2 chars for US."
              },
              "postalCode": {
                "type": "string",
                "example": "12345",
                "description": "US -> ^\\d{5}(-\\d{4})?$, Canada -> ^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} *\\d{1}[A-Z]{1}\\d{1}$, optional for other countries"
              },
              "country": {
                "type": "string",
                "example": "US",
                "description": "Country code"
              }
            },
            "required": [
              "city",
              "country",
              "street1"
            ]
          }
        },
        "required": [
          "address",
          "payment"
        ]
      },
      "RoomBillingDetailsResponse": {
        "type": "object",
        "properties": {
          "payment": {
            "type": "object",
            "properties": {
              "cardHolder": {
                "type": "string",
                "example": "John doe",
                "description": "Should be <=70 and match *^[ A-Za-z0-9.\\-\\/+=_ !$\\\\*?@#,']*$*"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "ccToken": {
                "type": "string",
                "description": "Credit card token"
              },
              "encryptedccToken": {
                "type": "string",
                "description": "Encrypted credit card token"
              },
              "maskedNumber": {
                "type": "string"
              },
              "cvv": {
                "type": "string",
                "example": 123,
                "description": "Should match regex ^[0-9]{3,4}$"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Visa",
                  "Mastercard",
                  "Discover",
                  "American Express",
                  "Diners Club",
                  "JCB",
                  "Union Pay"
                ],
                "example": "Mastercard, visa"
              },
              "expiry": {
                "type": "string",
                "format": "MM/YYYY",
                "example": "10/2022"
              },
              "amount": {
                "type": "number"
              }
            },
            "required": [
              "cardHolder",
              "type",
              "expiry"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string",
                "example": "234 W Main St",
                "description": "Should be <=60 chars"
              },
              "street2": {
                "type": "string",
                "example": "Unit 415",
                "description": "Should be <=60 chars"
              },
              "city": {
                "type": "string",
                "example": "Las Vegas",
                "description": "Should be <=32 chars and match *^[ A-Za-z0-9.\\-\\/+=_ !$\\\\*?@#,']*$* regex"
              },
              "state": {
                "type": "string",
                "example": "NV",
                "description": "State code for US/Canada and free form for other countries. Mandatory for US/Canada. 2 chars for US."
              },
              "postalCode": {
                "type": "string",
                "example": "12345",
                "description": "US -> ^\\d{5}(-\\d{4})?$, Canada -> ^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} *\\d{1}[A-Z]{1}\\d{1}$, optional for other countries"
              },
              "country": {
                "type": "string",
                "example": "US",
                "description": "Country code"
              }
            },
            "required": [
              "city",
              "country",
              "street1"
            ]
          }
        },
        "required": [
          "address",
          "payment"
        ]
      },
      "ReservationProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique customer id"
          },
          "profileId": {
            "type": "string",
            "description": "Unique guid customer id"
          },
          "title": {
            "type": "string"
          },
          "operaId": {
            "type": "string",
            "description": "Customer identifier in Opera"
          },
          "lmsId": {
            "type": "string",
            "description": "Customer identifier in LMS for TCOLV"
          },
          "partnerAccounts": {
            "type": "array",
            "items": {
              "properties": {
                "partnerAccountNo": {
                  "type": "string",
                  "example": 7892345
                },
                "programCategory": {
                  "type": "string",
                  "example": "R"
                },
                "programSubcategory": {
                  "type": "string",
                  "example": "MRD"
                },
                "programDescription": {
                  "type": "string",
                  "example": "Member"
                },
                "membershipLevel": {
                  "type": "string",
                  "example": "Member"
                },
                "programCode": {
                  "type": "string",
                  "example": "MI"
                }
              }
            }
          },
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "Should be <32 chars and match *^[ A-Za-z0-9.\\-\\/+=_ !$\\\\*?@#,']*$*"
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "description": "Should be <32 chars and match *^[ A-Za-z0-9.\\-\\/+=_ !$\\\\*?@#,']*$*"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Home",
                    "Business",
                    "Fax",
                    "Pager",
                    "Mobile",
                    "Other"
                  ]
                },
                "number": {
                  "type": "string"
                }
              }
            }
          },
          "emailAddress1": {
            "type": "string",
            "example": "johndoe@nomail.com",
            "description": "Should be <=100 chars and match regex ^((([\\\\w]|[!#$'\\\\*\\\\+\\\\-/\\\\?_\\\\\\\\]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])+(\\\\.([\\\\w]|[!#\\\\$'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\_\\\\\\\\]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])+)*)|((\\\\x22)((((\\\\x20|\\\\x09)*(\\\\x0d\\\\x0a))?(\\\\x20|\\\\x09)+)?(([\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f]|\\\\x21|[\\\\x23-\\\\x5b]|[\\\\x5d-\\\\x7e]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])|(\\\\\\\\([\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]))))*(((\\\\x20|\\\\x09)*(\\\\x0d\\\\x0a))?(\\\\x20|\\\\x09)+)?(\\\\x22)))@((([\\\\w]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])|(([\\\\w]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])([\\\\w]|-|\\\\.|_|~|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])*([\\\\w]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])))\\\\.)+(([a-zA-Z]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])|(([a-zA-Z]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])([\\\\w]|-|\\\\.|_|~|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])*([a-zA-Z]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])))\\\\.?$"
          },
          "emailAddress2": {
            "type": "string",
            "example": "johndoe@nomail.com",
            "description": "Should be <=100 chars and match regex ^((([\\\\w]|[!#$'\\\\*\\\\+\\\\-/\\\\?_\\\\\\\\]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])+(\\\\.([\\\\w]|[!#\\\\$'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\_\\\\\\\\]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])+)*)|((\\\\x22)((((\\\\x20|\\\\x09)*(\\\\x0d\\\\x0a))?(\\\\x20|\\\\x09)+)?(([\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f]|\\\\x21|[\\\\x23-\\\\x5b]|[\\\\x5d-\\\\x7e]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])|(\\\\\\\\([\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]))))*(((\\\\x20|\\\\x09)*(\\\\x0d\\\\x0a))?(\\\\x20|\\\\x09)+)?(\\\\x22)))@((([\\\\w]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])|(([\\\\w]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])([\\\\w]|-|\\\\.|_|~|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])*([\\\\w]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])))\\\\.)+(([a-zA-Z]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])|(([a-zA-Z]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])([\\\\w]|-|\\\\.|_|~|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])*([a-zA-Z]|[\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF])))\\\\.?$"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1995-12-31",
            "description": "Should match yyyy-MM-dd"
          },
          "tier": {
            "type": "string",
            "example": "sapphire"
          },
          "dateOfEnrollment": {
            "type": "string",
            "example": "1995-12-31",
            "description": "Should match yyyy-MM-dd"
          },
          "mlifeNo": {
            "type": "number"
          },
          "mgmId": {
            "type": "string",
            "example": "00usw98v0kpet9S0x0h7"
          },
          "hgpNo": {
            "type": "string",
            "description": "Customer's Hyatt Gold passport number"
          },
          "swrrNo": {
            "type": "string",
            "description": "Customer southwest rapid rewards number"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Home",
                    "Business",
                    "Alternate",
                    "Other"
                  ]
                },
                "preferred": {
                  "type": "boolean"
                },
                "street1": {
                  "type": "string"
                },
                "street2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email"
        ]
      },
      "GetCustomerRoomOffersResponse": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The phoenix if for program or segment"
                },
                "offerType": {
                  "type": "string",
                  "enum": [
                    "Segment",
                    "Program"
                  ]
                },
                "promoId": {
                  "type": "string",
                  "description": "The patron id for the promotion"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the promotion"
                },
                "status": {
                  "type": "string",
                  "description": "The status of the promotion"
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the promotion"
                },
                "startDate": {
                  "type": "string",
                  "description": "The start date for the promotion",
                  "example": "2020-08-15"
                },
                "endDate": {
                  "type": "string",
                  "description": "The last date for the promotion",
                  "example": "2020-08-20"
                },
                "customerRank": {
                  "type": "integer",
                  "description": "Rank of customer eligible for the offer"
                },
                "segmentFrom": {
                  "type": "integer",
                  "description": "Start of the customer segment number range"
                },
                "segmentTo": {
                  "type": "integer",
                  "description": "End of the customer segment number range"
                },
                "defaultPerpetualOffer": {
                  "type": "boolean",
                  "description": "Specify if the offer is default or not"
                },
                "propertyId": {
                  "type": "string",
                  "description": "PropertyId where offer applicable"
                }
              }
            }
          }
        }
      },
      "GetCustomerRoomOffersV3Response": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Program GUID or segment GUID or segment code. Until new segments approach based on rate plan code is enabled, it will return GSE segment GUID."
                },
                "propertyId": {
                  "type": "string",
                  "description": "PropertyId to which program belongs. It will empty incase of segment."
                },
                "promo": {
                  "type": "string",
                  "description": "Patron Promo code associated with the mlife customer."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PROGRAM",
                    "SEGMENT"
                  ],
                  "description": "Offers of type segment will be returned only when there's no property filtering"
                },
                "poProgram": {
                  "type": "boolean",
                  "description": "Boolean field indicating whether the program is a PO program or not."
                }
              }
            }
          },
          "userCvsValues": {
            "type": "string"
          }
        }
      },
      "PerpetualProgram": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The phoenix id for program or segment"
            },
            "propertyId": {
              "type": "string",
              "description": "PropertyId where offer applicable"
            }
          }
        }
      },
      "RoomProgramValidateResponse": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "Specify if the offer is valid or not"
          },
          "eligible": {
            "type": "boolean",
            "description": "Specify if the offer is eligible for the combination provided or not"
          },
          "expired": {
            "type": "boolean",
            "description": "Specify if the offer is expired or not"
          },
          "programId": {
            "type": "string",
            "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d",
            "description": "ProgramId where offer applicable"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "segment": {
            "type": "boolean",
            "description": "Specify if the offer is segment offer or not"
          },
          "propertyId": {
            "type": "string",
            "example": "880f02e6-1937-4d9d-9108-b5a2bb333d08",
            "description": "PropertyId where offer applicable"
          },
          "myvegas": {
            "type": "boolean",
            "description": "Specify if the offer is valid or not"
          },
          "patronProgram": {
            "type": "boolean",
            "description": "Specify if the offer has Patron Promo Id or not"
          },
          "hdePackage": {
            "type": "boolean",
            "description": "Sepcify if the offer is part of HDE package or not"
          },
          "ratePlanCode": {
            "type": "string",
            "description": "Rate plan code of the program (Opera promo code in GSE or rate plan code in ACRS)"
          },
          "groupCode": {
            "type": "string",
            "description": "Opera group block code which is available for programs with group block"
          },
          "ratePlanTags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Associated rate plan tags"
            }
          },
          "f1Package": {
            "type": "boolean",
            "description": "Sepcify if the offer is part of F1 package or not"
          },
          "loyaltyNumberRequired": {
            "type": "boolean",
            "description": "Sepcify if the loyalty number is required or not"
          }
        }
      },
      "RoomSegmentResponse": {
        "type": "object",
        "properties": {
          "segment": {
            "type": "string"
          },
          "minTravelPeriodStart": {
            "type": "string",
            "description": "Earliest travel start date among all the participating programs"
          },
          "minTravelPeriodEnd": {
            "type": "string",
            "description": "Furthest travel end date among all the participating programs"
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "programId": {
                  "type": "string"
                },
                "propertyId": {
                  "type": "string"
                },
                "travelPeriodStart": {
                  "type": "string"
                },
                "travelPeriodEnd": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "RoomOfferResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Program, Group Program or Rateplan id",
              "example": "120f02e6-1937-4d9d-9108-b5a2bb333d08"
            },
            "propertyId": {
              "type": "string",
              "description": "property id for the property the offer belongs to",
              "example": "44e610ab-c209-4232-8bb4-51f7b9b13a75"
            },
            "name": {
              "type": "string",
              "description": "name of the offer",
              "example": "AAA Offer"
            },
            "promo": {
              "type": "string",
              "description": "ACRS promo code"
            },
            "active": {
              "type": "boolean",
              "description": "Specify if the offer is active",
              "example": true
            },
            "category": {
              "type": "string",
              "example": "Group",
              "description": "category of the offer. Possible values - Casino, Group, Transient"
            },
            "description": {
              "type": "string",
              "example": "AAA Offer description",
              "description": "description of an offer"
            },
            "shortDescription": {
              "type": "string",
              "example": "AAA short description",
              "description": "short desciption or public name of an offer"
            },
            "termsAndConditions": {
              "type": "string",
              "example": "Terms and Conditions of an offer",
              "description": "terms and Conditions of an offer"
            },
            "learnMoreDescription": {
              "type": "string",
              "example": "Learn more descriptions",
              "description": "learn More Description"
            },
            "agentText": {
              "type": "string",
              "example": "Agent text",
              "description": "Agent text information"
            },
            "maxNights": {
              "type": "integer",
              "example": 10,
              "description": "maximum Nights can be booked for this offer"
            },
            "minNights": {
              "type": "integer",
              "example": 1,
              "description": "minimum number of Nights should be booked using this offer"
            },
            "barProgram": {
              "type": "boolean",
              "example": true,
              "description": "best available program flag"
            },
            "publicProgram": {
              "type": "boolean",
              "example": true,
              "description": "public program flag"
            },
            "operaBlockCode": {
              "type": "string",
              "example": "GOEQ1022MIB",
              "description": "group block code"
            },
            "operaBlockName": {
              "type": "string",
              "example": "JACK FAMILY CHRISTMAS TRIP",
              "description": "group block name"
            },
            "reservationMethod": {
              "type": "string",
              "example": "RL",
              "description": "reservation method for a group program"
            },
            "patronPromoId": {
              "type": "string",
              "example": "PATRON_PROMO1",
              "description": "patron promo code"
            },
            "promoCode": {
              "type": "string",
              "example": "OPERA_PROMO1",
              "description": "opera promo code"
            },
            "operaGuaranteeCode": {
              "type": "string",
              "example": "CC",
              "description": "opera guarantee code"
            },
            "periodStartDate": {
              "type": "string",
              "example": "2020-10-04",
              "description": "program period start date"
            },
            "periodEndDate": {
              "type": "string",
              "example": "2021-10-04",
              "description": "program period end date"
            },
            "travelPeriodStart": {
              "type": "string",
              "example": "2020-10-04",
              "description": "program period start date"
            },
            "travelPeriodEnd": {
              "type": "string",
              "example": "2020-10-04",
              "description": "program period end date"
            },
            "customerRank": {
              "type": "integer",
              "example": 1,
              "description": "customer rank applicable for this offer on regional properties"
            },
            "segmentFrom": {
              "type": "integer",
              "example": 1,
              "description": "customer segment from value applicable for this offer on Las Vegas properties"
            },
            "segmentTo": {
              "type": "integer",
              "example": 5,
              "description": "customer segment to value applicable for this offer on Las Vegas properties"
            },
            "defaultSegmentOffer": {
              "type": "boolean",
              "example": true,
              "description": "indicator denotes if its a defaultSegmentOffer"
            },
            "multiRateSequenceNo": {
              "type": "integer",
              "example": 1,
              "description": "sequence number of an offer"
            },
            "bookableOnline": {
              "type": "boolean",
              "example": true,
              "description": "bookable online indicator for mgmresorts website"
            },
            "viewOnline": {
              "type": "boolean",
              "example": true,
              "description": "viewable online indicator for mgmresorts website"
            },
            "bookableByProperty": {
              "type": "boolean",
              "example": true,
              "description": "bookable online indicator for property website"
            },
            "viewableByProperty": {
              "type": "boolean",
              "example": true,
              "description": "viewable online indicator for property website"
            },
            "availableInIce": {
              "type": "boolean",
              "example": true,
              "description": "bookable/viewable indicator for ice"
            },
            "roomIds": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "b651c510-64fb-4ebd-9a39-61e2eb99dcc4"
              },
              "description": "associated roomids with the offer"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "MAY2019SEASONAL",
                "description": "associated tags with the offer"
              }
            }
          }
        }
      },
      "RoomAvailabilityResponse": {
        "type": "object",
        "properties": {
          "ratePlans": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "programId": {
                  "type": "string",
                  "description": "Program GUID"
                },
                "rooms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "roomTypeId": {
                        "type": "string",
                        "description": "Room Type GUID",
                        "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d"
                      },
                      "unavailable": {
                        "type": "boolean"
                      },
                      "resortFee": {
                        "type": "number",
                        "format": "double",
                        "example": 36.4,
                        "description": "Usually, resort fee amount is called-out as guidance upfront"
                      },
                      "price": {
                        "type": "object",
                        "properties": {
                          "baseAveragePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 220,
                            "description": "Average of all base prices across all nights in the trip"
                          },
                          "discountedAveragePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 200,
                            "description": "Average of all discounted prices across all nights in the trip"
                          },
                          "baseSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 440,
                            "description": "Total of all base prices across all nights in the trip"
                          },
                          "discountedSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 400,
                            "description": "Average of all discounted prices across all nights in the trip"
                          },
                          "discountsTotal": {
                            "type": "number",
                            "format": "double",
                            "example": 40,
                            "description": "Total discount for the trip, derived by subtracting discountedSubtotal from baseSubtotal"
                          },
                          "resortFeeTotal": {
                            "type": "number",
                            "format": "double",
                            "example": 72.8,
                            "description": "Total of all resort fees across all nights in the trip"
                          },
                          "tripSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 472.8,
                            "description": "Trip subtotal derived by adding discountedSubtotal and resortFeeTotal"
                          },
                          "isDiscounted": {
                            "type": "boolean",
                            "description": "This attribute will be true if there are any discounts given during the stay i.e., discountsTotal more than zero."
                          },
                          "isComp": {
                            "type": "boolean",
                            "description": "This attribute will be true if the stay is complimentary. It's same as discountedSubtotal being zero."
                          },
                          "itemized": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "example": "2020-08-15"
                                },
                                "isComp": {
                                  "type": "boolean",
                                  "description": "This attribute will be true if the night in the stay is complimentary. It's same as discountedPrice being zero."
                                },
                                "basePrice": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 110
                                },
                                "discountedPrice": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 100
                                },
                                "discount": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 10,
                                  "description": "Discount, derived by subtracting discountedPrice from basePrice"
                                },
                                "isDiscounted": {
                                  "type": "boolean",
                                  "description": "This attribute will be true if there is any discount given during the night i.e., discount more than zero."
                                },
                                "programId": {
                                  "type": "string",
                                  "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d",
                                  "description": "Program GUID used for calculate price"
                                },
                                "pricingRuleId": {
                                  "type": "string",
                                  "example": "880f02e6-1937-4d9d-9108-b5a2bb333d08",
                                  "description": "Pricing rule Id used to calculate price"
                                },
                                "programIdIsRateTable": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "unavailabilityReason": {
                                  "type": "string",
                                  "example": "SO"
                                }
                              }
                            }
                          }
                        }
                      },
                      "memberPrice": {
                        "type": "object",
                        "properties": {
                          "baseAveragePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 220,
                            "description": "Average of all base prices across all nights in the trip"
                          },
                          "discountedAveragePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 200,
                            "description": "Average of all discounted prices across all nights in the trip"
                          },
                          "baseSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 440,
                            "description": "Total of all base prices across all nights in the trip"
                          },
                          "discountedSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 400,
                            "description": "Average of all discounted prices across all nights in the trip"
                          },
                          "isComp": {
                            "type": "boolean",
                            "description": "This attribute will be true if the stay is complimentary. It's same as discountedSubtotal being zero."
                          },
                          "itemized": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "example": "2020-08-15"
                                },
                                "isComp": {
                                  "type": "boolean",
                                  "description": "This attribute will be true if the night in the stay is complimentary. It's same as discountedPrice being zero."
                                },
                                "basePrice": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 110
                                },
                                "discountedPrice": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 100
                                },
                                "programId": {
                                  "type": "string",
                                  "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d",
                                  "description": "Program GUID used for calculate price"
                                },
                                "pricingRuleId": {
                                  "type": "string",
                                  "example": "880f02e6-1937-4d9d-9108-b5a2bb333d08",
                                  "description": "Pricing rule Id used to calculate price"
                                },
                                "programIdIsRateTable": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "unavailabilityReason": {
                                  "type": "string",
                                  "description": "This will be populated only when the given room type is not available.",
                                  "example": "SO"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "availability": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roomTypeId": {
                  "type": "string",
                  "description": "Room Type GUID",
                  "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d"
                },
                "perpetualPricing": {
                  "type": "boolean",
                  "description": "Boolean to indicate if perpetual offer is applicable for the trip. Defaulted to false."
                },
                "unavailable": {
                  "type": "boolean"
                },
                "resortFee": {
                  "type": "number",
                  "format": "double",
                  "example": 36.4,
                  "description": "Usually, resort fee amount is called-out as guidance upfront"
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "baseAveragePrice": {
                      "type": "number",
                      "format": "double",
                      "example": 220,
                      "description": "Average of all base prices across all nights in the trip"
                    },
                    "discountedAveragePrice": {
                      "type": "number",
                      "format": "double",
                      "example": 200,
                      "description": "Average of all discounted prices across all nights in the trip"
                    },
                    "baseSubtotal": {
                      "type": "number",
                      "format": "double",
                      "example": 440,
                      "description": "Total of all base prices across all nights in the trip"
                    },
                    "discountedSubtotal": {
                      "type": "number",
                      "format": "double",
                      "example": 400,
                      "description": "Average of all discounted prices across all nights in the trip"
                    },
                    "isComp": {
                      "type": "boolean",
                      "description": "This attribute will be true if the stay is complimentary. It's same as discountedSubtotal being zero."
                    },
                    "itemized": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "example": "2020-08-15"
                          },
                          "isComp": {
                            "type": "boolean",
                            "description": "This attribute will be true if the night in the stay is complimentary. It's same as discountedPrice being zero."
                          },
                          "basePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 110
                          },
                          "discountedPrice": {
                            "type": "number",
                            "format": "double",
                            "example": 100
                          },
                          "programId": {
                            "type": "string",
                            "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d",
                            "description": "Program GUID used for calculate price"
                          },
                          "pricingRuleId": {
                            "type": "string",
                            "example": "880f02e6-1937-4d9d-9108-b5a2bb333d08",
                            "description": "Pricing rule Id used to calculate price"
                          },
                          "programIdIsRateTable": {
                            "type": "boolean",
                            "example": false
                          },
                          "unavailabilityReason": {
                            "type": "string",
                            "example": "SO"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RoomAvailabilityTripResponse": {
        "type": "object",
        "properties": {
          "ratePlans": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "programId": {
                  "type": "string",
                  "description": "Program GUID"
                },
                "promo": {
                  "type": "string",
                  "description": "ACRS Promo Code"
                },
                "rooms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "roomTypeId": {
                        "type": "string",
                        "description": "Room Type GUID",
                        "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d"
                      },
                      "unavailable": {
                        "type": "boolean"
                      },
                      "resortFee": {
                        "type": "number",
                        "format": "double",
                        "example": 36.4,
                        "description": "Usually, resort fee amount is called-out as guidance upfront"
                      },
                      "price": {
                        "type": "object",
                        "properties": {
                          "baseAveragePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 220,
                            "description": "Average of all base prices across all nights in the trip"
                          },
                          "discountedAveragePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 200,
                            "description": "Average of all discounted prices across all nights in the trip"
                          },
                          "baseSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 440,
                            "description": "Total of all base prices across all nights in the trip"
                          },
                          "discountedSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 400,
                            "description": "Total of all discounted prices across all nights in the trip"
                          },
                          "discountsTotal": {
                            "type": "number",
                            "format": "double",
                            "example": 40,
                            "description": "Total discounts for the trip"
                          },
                          "resortFeeTotal": {
                            "type": "number",
                            "format": "double",
                            "example": 72.8,
                            "description": "Total resort fee for the trip"
                          },
                          "tripSubtotal": {
                            "type": "number",
                            "format": "double",
                            "example": 72.8,
                            "description": "Total amount for the trip including resort fee i.e., discountedSubtotal + resortFeeTotal"
                          },
                          "isDiscounted": {
                            "type": "boolean",
                            "description": "Flag to indicate if discounts are applicable for the trip"
                          },
                          "isComp": {
                            "type": "boolean",
                            "description": "This attribute will be true if the stay is complimentary. It's same as discountedSubtotal being zero."
                          },
                          "f1TicketPrice": {
                            "type": "number",
                            "format": "double",
                            "example": 5653.5,
                            "description": "This attribute will be populated with the F1 ticket price if applicable."
                          },
                          "averageNightlyF1TripPrice": {
                            "type": "number",
                            "format": "double",
                            "example": 10942.25,
                            "description": "This attribute will be populated with the average discounted room price along with the daily F1 ticket price if applicable."
                          },
                          "itemized": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "example": "2020-08-15"
                                },
                                "isComp": {
                                  "type": "boolean",
                                  "description": "This attribute will be true if the night in the stay is complimentary. It's same as discountedPrice being zero."
                                },
                                "basePrice": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 110
                                },
                                "discountedPrice": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 100
                                },
                                "discount": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 10,
                                  "description": "Discount amount for the night"
                                },
                                "f1RoomAndTicketPrice": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 10942.25,
                                  "description": "This attribute will be populated with the per night F1 ticket price and room price if applicable."
                                },
                                "isDiscounted": {
                                  "type": "boolean",
                                  "description": "Flag to indicate if discounts are applicable for the night"
                                },
                                "programId": {
                                  "type": "string",
                                  "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d",
                                  "description": "Program GUID used for calculate price"
                                },
                                "pricingRuleId": {
                                  "type": "string",
                                  "example": "880f02e6-1937-4d9d-9108-b5a2bb333d08",
                                  "description": "Pricing rule Id used to calculate price"
                                },
                                "programIdIsRateTable": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "unavailabilityReason": {
                                  "type": "string",
                                  "example": "SO"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "shoppingFlow": {
                "type": "string",
                "enum": [
                  "RATE_PLANS",
                  "PERPETUAL"
                ],
                "description": "<ul><li>RATE_PLANS - Pricing requested for a regular shopper (Transient or non-PO user)</li><li>PERPETUAL - Pricing requested for a PO shopper (Perpetual user)</li></ul>"
              },
              "pricingMode": {
                "type": "string",
                "enum": [
                  "PERPETUAL",
                  "PROGRAM",
                  "BEST_AVAILABLE"
                ],
                "description": "<ul><li>PERPETUAL - pricing returned is based on a perpetual program i.e., ratePlans array will only contain 1 object which is for a perpetual program.</li><li>PROGRAM - pricing includes response for an applied program</li><li>BEST_AVAILABLE - pricing returned list of exposed rate plans for regular shopper OR fallback pricing is returned for PO shopper</li></ul>"
              },
              "bookingLimitsApplied": {
                "type": "boolean",
                "description": "This flag will be true, when a PO program ID is supplied in the input but pricing for which is not available. This flag can be used as guide that PO pricing is not returned due to booking limits. In every other situation, this flag will be false."
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "632-1-101"
              },
              "message": {
                "type": "string",
                "example": "Transaction id is missing in the request header"
              }
            }
          }
        }
      },
      "ModifyCommitErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "632-1-101"
              },
              "message": {
                "type": "string",
                "example": "Transaction id is missing in the request header"
              }
            }
          },
          "roomReservation": {
            "$ref": "#/components/schemas/RoomReservationResponse"
          }
        }
      },
      "CalendarPriceResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "isComp": {
              "type": "boolean",
              "description": "This attribute will be true if the stay for the day is complimentary. It's same as memberPrice being zero."
            },
            "isPOApplicable": {
              "type": "boolean",
              "example": false,
              "description": "Boolean to indicate if perpetual offer is applicable for the trip based on the lenght of stay"
            },
            "status": {
              "type": "string",
              "description": "Status=OFFER is only applicable when program prices are requested.",
              "enum": [
                "AVAILABLE",
                "SOLD-OUT",
                "NO-ARRIVAL",
                "OFFER"
              ]
            },
            "date": {
              "type": "string",
              "example": "2020-08-15"
            },
            "programId": {
              "type": "string",
              "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d",
              "description": "Program ID used for provide lowest price for the day"
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 220.4
            }
          }
        }
      },
      "CalendarPriceWithLoSResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Availability status based on lenght of stay",
              "enum": [
                "AVAILABLE",
                "SOLD-OUT"
              ]
            },
            "date": {
              "type": "string",
              "example": "2020-08-15"
            },
            "roomTypeId": {
              "type": "string",
              "example": "tu46262-ebe9-4150-88a5-e5088dfe5b7d"
            },
            "tripDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "yyyy-mm-dd",
                    "example": "2020-08-15"
                  },
                  "programId": {
                    "type": "string",
                    "example": "ef346262-ebe9-4150-88a5-e5088dfe5b7d",
                    "description": "List of program Ids for each day of the trip based on length of stay."
                  },
                  "isComp": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean to indicate if it is comp night."
                  }
                }
              }
            },
            "isPOApplicable": {
              "type": "boolean",
              "example": false,
              "description": "Boolean to indicate if perpetual offer is applicable for the trip based on the lenght of stay"
            },
            "promo": {
              "type": "string",
              "description": "ACRS Promo Code"
            },
            "pricingMode": {
              "type": "string",
              "enum": [
                "PERPETUAL",
                "PROGRAM",
                "BEST_AVAILABLE"
              ],
              "description": "<ul><li>PERPETUAL - pricing returned is based on a perpetual program.</li><li>PROGRAM - pricing for a property was available from a supplied program</li><li>BEST_AVAILABLE - pricing for a property was available from best available mode</li></ul>"
            },
            "totalCompNights": {
              "type": "integer",
              "example": 2,
              "description": "Total number of comp nights available for the LoS"
            },
            "totalNightlyTripBasePrice": {
              "type": "number",
              "format": "double",
              "example": 220.4,
              "description": "Total base price for the trip (excluding taxes and resort fees)"
            },
            "averageNightlyTripBasePrice": {
              "type": "number",
              "format": "double",
              "example": 100,
              "description": "Average base price per night (excluding taxes and resort fees)"
            },
            "totalNightlyTripPrice": {
              "type": "number",
              "format": "double",
              "example": 220.4,
              "description": "Lowest trip price for LoS = N (excluding taxes and resort fees)"
            },
            "averageNightlyTripPrice": {
              "type": "number",
              "format": "double",
              "example": 100,
              "description": "Average price per night (excluding taxes and resort fees)"
            }
          }
        }
      },
      "RoomComponentsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Component Type GUID",
              "example": "8e937458-c37f-42ba-974c-76faa8d91c37"
            },
            "nightlyCharge": {
              "type": "boolean",
              "example": false
            },
            "price": {
              "type": "number",
              "example": 50
            },
            "description": {
              "type": "string",
              "example": "Guaranteed Late Check-Out"
            },
            "pricingApplied": {
              "type": "string",
              "example": "NIGHTLY",
              "enum": [
                "NIGHTLY",
                "CHECKIN",
                "CHECKOUT",
                "PERSTAY"
              ]
            },
            "taxRate": {
              "type": "number"
            },
            "shortDescription": {
              "type": "string",
              "example": "Guaranteed Late Check-Out"
            },
            "longDescription": {
              "type": "string",
              "example": "Room check-out will be extended until 3 PM, rather than standard time of 11 AM."
            },
            "ratePlanName": {
              "type": "string",
              "example": null
            },
            "ratePlanCode": {
              "type": "string",
              "example": "LATECHKOUT"
            },
            "amtAftTax": {
              "type": "number",
              "format": "double",
              "example": 100.05
            }
          }
        }
      },
      "OrganizationSearchResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "fullName": {
              "type": "string",
              "description": "Organization fullName."
            },
            "iataCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Organization iataCode."
            },
            "shortName": {
              "type": "string",
              "description": "Organization shortName."
            }
          }
        }
      },
      "GroupSearchResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "group id."
            },
            "name": {
              "type": "string",
              "description": "name."
            },
            "activeFlag": {
              "type": "boolean",
              "description": "Shows Group Active or not."
            },
            "propertyId": {
              "type": "string",
              "description": "propertyId."
            },
            "category": {
              "type": "string",
              "description": "Group category."
            },
            "description": {
              "type": "string",
              "description": "description."
            },
            "shortDescription": {
              "type": "string",
              "description": "shortDescription."
            },
            "termsAndConditions": {
              "type": "string",
              "description": "termsAndConditions."
            },
            "agentText": {
              "type": "string",
              "description": "agentText."
            },
            "operaBlockCode": {
              "type": "string",
              "description": "operaBlockCode."
            },
            "groupCnfNumber": {
              "type": "string",
              "description": "groupCnfNumber."
            },
            "operaBlockName": {
              "type": "string",
              "description": "operaBlockName."
            },
            "operaGuaranteeCode": {
              "type": "string",
              "description": "operaGuaranteeCode."
            },
            "reservationMethod": {
              "type": "string",
              "description": "reservationMethod."
            },
            "groupCode": {
              "type": "string",
              "description": "groupCode."
            },
            "periodEndDate": {
              "type": "string",
              "description": "periodEndDate.",
              "example": "2020-08-15"
            },
            "periodStartDate": {
              "type": "string",
              "description": "periodStartDate.",
              "example": "2020-08-18"
            },
            "travelPeriodEnd": {
              "type": "string",
              "description": "travelPeriodEnd.",
              "example": "2020-08-18"
            },
            "travelPeriodStart": {
              "type": "string",
              "description": "travelPeriodStart.",
              "example": "2020-08-15"
            },
            "rooms": {
              "type": "array",
              "description": "rooms.",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "43e06bf9-af87-417c-b014-209535b125ab",
                    "description": "room names."
                  }
                }
              }
            }
          }
        }
      },
      "RatePlanSearchResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "activeFlag": {
              "type": "boolean",
              "description": "Shows Rate Plan Active or not."
            },
            "bookableOnline": {
              "type": "boolean",
              "description": "bookable Online."
            },
            "viewOnline": {
              "type": "boolean",
              "description": "viewable Online."
            },
            "bookableByProperty": {
              "type": "boolean",
              "description": "bookable by Property."
            },
            "viewableByProperty": {
              "type": "boolean",
              "description": "viewable by Property."
            },
            "availableInIce": {
              "type": "boolean",
              "description": "availableInIce."
            },
            "description": {
              "type": "string",
              "description": "description."
            },
            "id": {
              "type": "string",
              "description": "rate plan guuid."
            },
            "name": {
              "type": "string",
              "description": "name."
            },
            "learnMoreDescription": {
              "type": "string",
              "description": "learnMoreDescription."
            },
            "operaGuaranteeCode": {
              "type": "string",
              "description": "operaGuaranteeCode."
            },
            "periodEndDate": {
              "type": "string",
              "description": "periodEndDate.",
              "example": "2020-08-15"
            },
            "periodStartDate": {
              "type": "string",
              "description": "periodStartDate.",
              "example": "2020-08-18"
            },
            "ratePlanCode": {
              "type": "string",
              "description": "ratePlanCode."
            },
            "category": {
              "type": "string",
              "description": "category."
            },
            "propertyId": {
              "type": "string",
              "description": "propertyId."
            },
            "publicOfferFlag": {
              "type": "boolean",
              "description": "publicOfferFlag."
            },
            "publicProgram": {
              "type": "boolean",
              "description": "publicProgram."
            },
            "shortDescription": {
              "type": "string",
              "description": "shortDescription."
            },
            "termsAndConditions": {
              "type": "string",
              "description": "termsAndConditions."
            },
            "travelPeriodEnd": {
              "type": "string",
              "description": "travelPeriodEnd.",
              "example": "2020-08-18"
            },
            "travelPeriodStart": {
              "type": "string",
              "description": "travelPeriodStart.",
              "example": "2020-08-15"
            },
            "agentText": {
              "type": "string",
              "description": "agentText."
            },
            "tags": {
              "type": "object",
              "description": "tags."
            }
          }
        }
      },
      "MultiDateResortPricesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "object",
              "properties": {
                "checkIn": {
                  "type": "string",
                  "format": "date"
                },
                "checkOut": {
                  "type": "string",
                  "format": "date"
                }
              }
            },
            "resortPrices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": null,
                "$ref": "#/components/schemas/ResortPriceDetailsResponse"
              }
            }
          }
        }
      },
      "ResortPriceResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": null,
          "$ref": "#/components/schemas/ResortPriceDetailsResponse"
        }
      },
      "ResortPriceDetailsResponse": {
        "type": "object",
        "properties": {
          "isComp": {
            "type": "boolean",
            "description": "This attribute will be true if the night is complimentary. It's same as discountedAveragePrice being zero."
          },
          "status": {
            "type": "string",
            "enum": [
              "AVAILABLE",
              "SOLDOUT"
            ]
          },
          "propertyId": {
            "type": "string",
            "description": "Property GUID",
            "example": "66964e2b-2550-4476-84c3-1a4c0c5c067f"
          },
          "programId": {
            "type": "string",
            "description": "This attribute will be populated with property specific programId, when a program or segment is applied in the request and the property is a participating program. In other cases, this attribute will not be populated."
          },
          "f1TicketPrice": {
            "type": "number",
            "format": "double",
            "example": 5653.5,
            "description": "This attribute will be populated with the F1 ticket price if applicable."
          },
          "promo": {
            "type": "string"
          },
          "ratePlanCode": {
            "type": "string",
            "description": "Rate plan code will be populated only when there are multiple properties in the response which are part of same segment. When this value is not null, GQL will fetch content details from corporate rate plan entity."
          },
          "price": {
            "type": "object",
            "properties": {
              "baseAveragePrice": {
                "type": "number",
                "format": "double",
                "example": 220.4,
                "description": "Price before offer savings"
              },
              "discountedAveragePrice": {
                "type": "number",
                "format": "double",
                "example": 180.4,
                "description": "Price after applying savings from the program. This can be same as baseAveragePrice when there's no discount"
              },
              "baseSubtotal": {
                "type": "number",
                "format": "double",
                "example": 440.8,
                "description": "Subtotal of baseAveragePrice for all nights in the trip"
              },
              "discountedSubtotal": {
                "type": "number",
                "format": "double",
                "example": 361.2,
                "description": "Subtotal of discountedAveragePrice for all nights in the trip"
              }
            }
          },
          "resortFee": {
            "type": "number",
            "format": "double",
            "example": 36.4,
            "description": "Usually, resort fee amount is called-out as guidance upfront"
          },
          "pricingMode": {
            "type": "string",
            "enum": [
              "PERPETUAL",
              "PROGRAM",
              "BEST_AVAILABLE"
            ],
            "description": "<ul><li>PERPETUAL - pricing returned is based on a perpetual program.</li><li>PROGRAM - pricing for a property was available from a supplied program</li><li>BEST_AVAILABLE - pricing for a property was available from best available mode</li></ul>"
          },
          "amtAftTax": {
            "type": "number",
            "format": "double",
            "example": 36.4,
            "description": "total amount including all fees and tax"
          },
          "baseAmtAftTax": {
            "type": "number",
            "format": "double",
            "example": 36.4,
            "description": "total base amount including all fees and tax"
          }
        }
      },
      "RatesSummary": {
        "type": "object",
        "properties": {
          "roomSubtotal": {
            "type": "number",
            "format": "double",
            "example": 518,
            "description": "Total of nightly base prices before discount"
          },
          "programDiscount": {
            "type": "number",
            "format": "double",
            "example": 100,
            "description": "Amount of discount provided by the program. This could be zero when there's no discount and it could be negative if program raises prices as part of value-add."
          },
          "discountedSubtotal": {
            "type": "number",
            "format": "double",
            "example": 418,
            "description": "Value = roomSubtotal - programDiscount"
          },
          "discountedAveragePrice": {
            "type": "number",
            "format": "double",
            "example": 209,
            "description": "Average of all discounted prices across all nights in the trip"
          },
          "roomRequestsTotal": {
            "type": "number",
            "format": "double",
            "example": 0,
            "description": "Total price for all room requests selected by the user"
          },
          "adjustedRoomSubtotal": {
            "type": "number",
            "format": "double",
            "example": 418,
            "description": "Value = roomSubtotal - programDiscount + roomRequestsTotal"
          },
          "resortFee": {
            "type": "number",
            "format": "double",
            "example": 75,
            "description": "Resort fee without tax amount for the trip selected"
          },
          "resortFeePerNight": {
            "type": "number",
            "format": "double",
            "example": 60.44,
            "description": "Average resort fee per night without tax amount"
          },
          "tripSubtotal": {
            "type": "number",
            "format": "double",
            "example": 493,
            "description": "Value = discountedSubtotal + resortFee"
          },
          "resortFeeAndTax": {
            "type": "number",
            "format": "double",
            "example": 88.44,
            "description": "Resort fee and tax amount for the trip selected"
          },
          "roomChargeTax": {
            "type": "number",
            "format": "double",
            "example": 55.93,
            "description": "Amount of tax on room charges"
          },
          "occupancyFee": {
            "type": "number",
            "format": "double",
            "example": 3,
            "description": "Occupancy fee. Applicable only for borgata"
          },
          "tourismFee": {
            "type": "number",
            "format": "double",
            "example": 2,
            "description": "Tourism fee. Applicable only for borgata"
          },
          "tourismFeeAndTax": {
            "type": "number",
            "format": "double",
            "example": 6.82,
            "description": "Tourism fee with tax included. Applicable only for borgata"
          },
          "casinoSurcharge": {
            "type": "number",
            "format": "double",
            "example": 2,
            "description": "State casino occupancy fee. Applicable only for borgata"
          },
          "casinoSurchargeAndTax": {
            "type": "number",
            "format": "double",
            "example": 6.82,
            "description": "State casino occupancy fee with tax included. Applicable only for borgata"
          },
          "reservationTotal": {
            "type": "number",
            "format": "double",
            "example": 562.36,
            "description": "Overall total for the reservation"
          },
          "depositDue": {
            "type": "number",
            "format": "double",
            "example": 236.96,
            "description": "Deposit amount to be paid to book the reservation"
          },
          "previousDeposit": {
            "type": "number",
            "format": "double",
            "example": 218,
            "description": "Deposit paid during the reservation. This is applicable only for /v2/reservation/preview api."
          },
          "changeInDeposit": {
            "type": "number",
            "format": "double",
            "example": 18.96,
            "description": "Change in deposit amount from previous deposit. Negative value means it's refund. This is applicable only for /v2/reservation/preview api."
          },
          "balanceUponCheckIn": {
            "type": "number",
            "format": "double",
            "example": 325.4,
            "description": "Balance amount to be paid during check-in"
          }
        }
      },
      "CalculateRoomChargesRequest": {
        "type": "object",
        "properties": {
          "propertyId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "mlifeNumber": {
            "type": "string"
          },
          "promo": {
            "type": "string"
          },
          "ignoreChannelMargins": {
            "type": "boolean"
          },
          "customerDominantPlay": {
            "type": "string"
          },
          "customerRank": {
            "type": "integer"
          },
          "excludeNonOffer": {
            "type": "boolean"
          },
          "shoppedItineraryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "pkgComponents": {
            "$ref": "#/components/schemas/PkgComponents"
          },
          "itemsInCart": {
            "$ref": "#/components/schemas/ItemsInCart"
          },
          "redemptionCode": {
            "type": "string"
          },
          "holdId": {
            "type": "string"
          }
        }
      },
      "CalculateRoomChargesResponse": {
        "type": "object",
        "properties": {
          "propertyId": {
            "type": "string"
          },
          "roomTypeId": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "isGroupCode": {
            "type": "boolean"
          },
          "perpetualPricing": {
            "type": "boolean"
          },
          "specialRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "f1Package": {
            "type": "boolean"
          },
          "promo": {
            "type": "string",
            "description": "ACRS Promo Code"
          },
          "pricingMode": {
            "type": "string",
            "enum": [
              "PERPETUAL",
              "PROGRAM",
              "BEST_AVAILABLE"
            ],
            "description": "<ul><li>PERPETUAL - pricing returned is based on a perpetual program.</li><li>PROGRAM - pricing for a property was available from a supplied program</li><li>BEST_AVAILABLE - pricing for a property was available from best available mode</li></ul>"
          },
          "guaranteeCode": {
            "type": "string"
          },
          "shoppedItineraryId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/ReservationProfile"
          },
          "tripDetails": {
            "$ref": "#/components/schemas/TripDetails"
          },
          "pkgComponents": {
            "$ref": "#/components/schemas/PkgComponents"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomPrice"
            }
          },
          "chargesAndTaxes": {
            "type": "object",
            "properties": {
              "charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomCharges"
                }
              },
              "taxesAndFees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoomTaxes"
                }
              }
            }
          },
          "availableComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomBookingComponents"
            }
          },
          "ratesSummary": {
            "$ref": "#/components/schemas/RatesSummary"
          },
          "depositDetails": {
            "$ref": "#/components/schemas/Deposit"
          },
          "depositPolicy": {
            "$ref": "#/components/schemas/DepositPolicy"
          },
          "markets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomMarket"
            }
          }
        }
      },
      "RoomCharges": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-08-15"
          },
          "amount": {
            "type": "number"
          },
          "itemized": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemType": {
                  "type": "string",
                  "enum": [
                    "RoomCharge",
                    "ExtraGuestCharge",
                    "ResortFee"
                  ]
                },
                "amount": {
                  "type": "number"
                },
                "item": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "RoomTaxes": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-08-15"
          },
          "amount": {
            "type": "number"
          },
          "itemized": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemType": {
                  "type": "string",
                  "enum": [
                    "RoomChargeTax",
                    "ExtraGuestChargeTax",
                    "ResortFeeTax"
                  ]
                },
                "amount": {
                  "type": "number"
                },
                "item": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ReservationAssociateRequest": {
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string"
          }
        }
      },
      "PurchasedComponents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "cd909839-c886-4952-8323-7f0a867a650b"
          },
          "code": {
            "type": "string",
            "example": "EARLYCHECKIN"
          },
          "shortDescription": {
            "type": "string",
            "example": "Guaranteed Early Check-In"
          },
          "longDescription": {
            "type": "string",
            "example": "Room will be available for check-in beginning at 11 AM, rather than standard time of 3 PM."
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "nonEditable": {
            "type": "boolean",
            "example": false
          },
          "isPkgComponent": {
            "type": "boolean",
            "example": false
          },
          "pricingApplied": {
            "type": "string",
            "example": "NIGHTLY",
            "enum": [
              "NIGHTLY",
              "CHECKIN",
              "CHECKOUT",
              "PERSTAY"
            ]
          },
          "tripPrice": {
            "type": "number",
            "example": 20,
            "description": "Total price for the trip"
          },
          "tripTax": {
            "type": "number",
            "example": 4,
            "description": "Total tax for the trip"
          },
          "price": {
            "type": "number",
            "example": 10,
            "description": "Average price for the trip"
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "example": "2020-08-15"
                },
                "amount": {
                  "type": "number",
                  "example": 10
                },
                "tax": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "RoomBookingComponents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "cd909839-c886-4952-8323-7f0a867a650b"
          },
          "code": {
            "type": "string",
            "example": "EARLYCHECKIN"
          },
          "shortDescription": {
            "type": "string",
            "example": "Guaranteed Early Check-In"
          },
          "longDescription": {
            "type": "string",
            "example": "Room will be available for check-in beginning at 11 AM, rather than standard time of 3 PM."
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "nonEditable": {
            "type": "boolean",
            "example": true
          },
          "depositAmount": {
            "type": "number",
            "example": 20
          },
          "pricingApplied": {
            "type": "string",
            "example": "NIGHTLY",
            "enum": [
              "NIGHTLY",
              "CHECKIN",
              "CHECKOUT",
              "PERSTAY"
            ]
          },
          "tripPrice": {
            "type": "number",
            "example": 20,
            "description": "Total price for the trip"
          },
          "tripTax": {
            "type": "number",
            "example": 4,
            "description": "Total tax for the trip"
          },
          "price": {
            "type": "number",
            "example": 10,
            "description": "Average price for the trip"
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "example": "2020-08-15"
                },
                "amount": {
                  "type": "number",
                  "example": 10
                },
                "tax": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "PartnerAccountDetailsResponse": {
        "type": "object",
        "properties": {
          "partnerAccountDetails": {
            "$ref": "#/components/schemas/PartnerAccountDetails"
          }
        }
      },
      "PartnerAccountDetails": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "partnerAccounts": {
            "type": "array",
            "items": {
              "properties": {
                "partnerAccountNo": {
                  "type": "string",
                  "example": 7892345
                },
                "programCategory": {
                  "type": "string",
                  "example": "R"
                },
                "programSubcategory": {
                  "type": "string",
                  "example": "MRD"
                },
                "programDescription": {
                  "type": "string",
                  "example": "Member"
                },
                "membershipLevel": {
                  "type": "string",
                  "example": "Member"
                },
                "programCode": {
                  "type": "string",
                  "example": "MI"
                }
              }
            }
          }
        }
      },
      "PartnerProgramResponse": {
        "type": "object",
        "properties": {
          "partnerProgramValues": {
            "type": "array",
            "items": {
              "properties": {
                "programName": {
                  "type": "string",
                  "description": "Name of the program",
                  "example": "Marriot Bonvoy"
                },
                "programCode": {
                  "type": "string",
                  "description": "Code of the program",
                  "example": "MI"
                }
              }
            }
          }
        }
      },
      "EcidByEmrResponse": {
        "type": "object",
        "properties": {
          "emr": {
            "type": "string",
            "description": "Encrypted MGM Rewards Number",
            "example": "Some Encrypted Value"
          },
          "ecid": {
            "type": "string",
            "description": "Encrypted Customer ID",
            "example": "Some Encrypted Value"
          },
          "perpetualEligiblePropertyCodes": {
            "type": "string",
            "description": "A comma separated list of Perpetual Eligible Property Codes",
            "example": "930,938,021,001"
          }
        }
      }
    },
    "headers": {
      "x-mgm-channel": {
        "schema": {
          "type": "string"
        },
        "description": "Returns the value as received in the request headers.",
        "required": true
      },
      "x-mgm-source": {
        "schema": {
          "type": "string"
        },
        "description": "Returns the value as received in the request headers."
      },
      "x-mgm-correlation-id": {
        "schema": {
          "type": "string"
        },
        "description": "If present in the request headers, returns the same value or the one created in the API."
      },
      "x-mgm-transaction-id": {
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Returns the value as received in the request headers."
      }
    },
    "parameters": {
      "Authorization": {
        "in": "header",
        "name": "Authorization",
        "schema": {
          "type": "string"
        },
        "description": "JWT authorization token",
        "required": true
      },
      "x-api-key": {
        "in": "header",
        "name": "x-api-key",
        "schema": {
          "type": "string"
        },
        "description": "Access Key from API Gateway",
        "required": true
      },
      "x-state-token": {
        "in": "header",
        "name": "x-state-token",
        "schema": {
          "type": "string"
        },
        "description": "Token to maintain state as mentioned in intro section.",
        "required": false
      },
      "osid": {
        "in": "header",
        "name": "osid",
        "schema": {
          "type": "string"
        },
        "description": "Okta Session id",
        "required": false
      },
      "access-token": {
        "in": "header",
        "name": "access-token",
        "schema": {
          "type": "string"
        },
        "description": "Okta Access Token",
        "required": false
      },
      "channel": {
        "in": "header",
        "name": "x-mgm-channel",
        "schema": {
          "type": "string",
          "enum": [
            "web",
            "services",
            "mobile",
            "ice",
            "third-party"
          ]
        },
        "description": "Channel from where the request has originated. Channel webclient uses cookies for x-state-token.",
        "required": true
      },
      "source": {
        "in": "header",
        "name": "x-mgm-source",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "app",
            "mgmri",
            "ice",
            "ota-insights",
            "66964e2b-2550-4476-84c3-1a4c0c5c067f",
            "44e610ab-c209-4232-8bb4-51f7b9b13a75",
            "e0f70eb3-7e27-4c33-8bcd-f30bf3b1103a",
            "1f3ed672-3f8f-44d8-9215-81da3c845d83",
            "6c5cff3f-f01a-4f9b-87ab-8395ae8108db",
            "8bf670c2-3e89-412b-9372-6c87a215e442",
            "dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad",
            "607c07e7-3e31-4e4c-a4e1-f55dca66fea2",
            "f8d6a944-7816-412f-a39a-9a63aad26833",
            "2159252c-60d3-47db-bbae-b1db6bb15072",
            "e2704b04-d515-45b0-8afd-4fa1424ff0a8",
            "0990fdce-7fc8-41b1-b8b6-9a25dce3db55",
            "4a65a92a-962b-433e-841c-37e18dc5d68d",
            "13b178b0-8beb-43d5-af25-1738b7267e63",
            "bee81f88-286d-43dd-91b5-3917d9d62a68",
            "40b61feb-750a-45df-ae68-e23e6272b16b"
          ]
        },
        "description": "Source invoking the API. GSE uses concept of channel to different various channels/sources for reporting/diagnosis. Service will identify channel to use based on source value."
      },
      "correlationId": {
        "in": "header",
        "name": "x-mgm-correlation-id",
        "schema": {
          "type": "string"
        },
        "description": "Correlation Id is used to trace end to end transactions. The id is optional and service will create one if not passed by clients, pass it to downstream applications and send it back in the response headers. Clients are encouraged to set this parameter if the correlation between different APIs needs to be tracked."
      },
      "FraudAgentToken": {
        "in": "header",
        "name": "Fraud-Agent-Token",
        "schema": {
          "type": "string"
        },
        "description": "Unique alternate card number or token"
      },
      "UserAgent": {
        "in": "header",
        "name": "User-Agent",
        "schema": {
          "type": "string"
        },
        "description": "A characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent"
      },
      "ForwardedFor": {
        "in": "header",
        "name": "X-Forwarded-For",
        "schema": {
          "type": "string"
        },
        "description": "A de-facto standard header for identifying the originating IP address of a client connecting to a web server through a proxy server"
      },
      "transactionId": {
        "in": "header",
        "name": "x-mgm-transaction-id",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "This field represents the transaction id. Clients are required to generate this unique identifier and pass it in the request, the same will be passed in the response headers."
      },
      "mlifeNumber": {
        "name": "mlifeNumber",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Mlife number for logged-in member (If user is logged-in)."
      },
      "customerId": {
        "name": "customerId",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Aurora Customer ID for logged-in user. Customer ID is always required to be passed in the request for logged user."
      },
      "propertyId": {
        "name": "propertyId",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Property GUID"
      },
      "promoCode": {
        "name": "promoCode",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Room Promo Code"
      },
      "promo": {
        "name": "promo",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "ACRS Promo Code"
      },
      "programId": {
        "name": "programId",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Room Program GUID"
      },
      "enableJwb": {
        "in": "header",
        "name": "enableJwb",
        "schema": {
          "type": "string"
        },
        "description": "enableJwb header to be set as true, if a transient website visitor opted into JWB",
        "required": false
      },
      "confirmationNumber": {
        "in": "query",
        "name": "confirmationNumber",
        "schema": {
          "type": "string"
        },
        "description": "Room reservation confirmation number",
        "required": true
      },
      "operaPartyCode": {
        "in": "query",
        "name": "operaPartyCode",
        "schema": {
          "type": "string"
        },
        "description": "Opera party code for party type reservation",
        "required": false
      },
      "redemptionCode": {
        "in": "query",
        "name": "redemptionCode",
        "schema": {
          "type": "string"
        },
        "description": "my vegas redemption code. Existence of non-empty redemption code will be checked if the myvegas programId is provided as inputs to pricing APIs. Actual validation of redemption happens in GQL/ICE.",
        "required": false
      },
      "perpetualEligiblePropertyCodes": {
        "in": "query",
        "name": "perpetualEligiblePropertyCodes",
        "schema": {
          "type": "string"
        },
        "description": "A comma separated list of Perpetual eligible Property Codes",
        "required": true
      },
      "emr": {
        "in": "query",
        "name": "emr",
        "schema": {
          "type": "string"
        },
        "description": "Encrypted MGM Rewards Number",
        "required": false
      },
      "ecid": {
        "in": "query",
        "name": "ecid",
        "schema": {
          "type": "string"
        },
        "description": "Encrypted Customer Id",
        "required": false
      }
    }
  }
}